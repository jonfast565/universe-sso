////////////////////////////////////////////////////////////////////////
//
// saml_schema_authn_context_mobiletwofactor_reg_2_0.cs
//
// This file was generated by XMLSpy 2020r2sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace saml_schema_authn_context_mobiletwofactor_reg_2_0
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}



namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}


		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES

	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_ENTITY]); }}


		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY

	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_ID]); }}


		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID

	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_IDREF]); }}


		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF

	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_IDREFS]); }}


		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS

	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_NCName]); }}


		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName

	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}


		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN

	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}


		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS

	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_NOTATION]); }}


		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION

	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_Name]); }}


		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name

	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_QName]); }}


		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName

	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}


		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType

	public class anyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_anyType]); }}


		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType

	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_anyURI]); }}


		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI

	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_base64Binary]); }}


		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary

	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_boolean]); }}


		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean

	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_byte2]); }}


		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2

	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_date]); }}


		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date

	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_dateTime]); }}


		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime

	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_decimal2]); }}


		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2

	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_double2]); }}


		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2

	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_duration]); }}


		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration

	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_float2]); }}


		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2

	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_gDay]); }}


		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay

	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_gMonth]); }}


		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth

	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}


		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay

	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_gYear]); }}


		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear

	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}


		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth

	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_hexBinary]); }}


		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary

	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_int2]); }}


		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2

	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_integer]); }}


		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer

	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_language]); }}


		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language

	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_long2]); }}


		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2

	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}


		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger

	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}


		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger

	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}


		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger

	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_normalizedString]); }}


		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString

	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}


		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger

	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_short2]); }}


		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2

	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_string2]); }}


		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2

	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_time]); }}


		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time

	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_token]); }}


		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token

	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}


		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte

	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}


		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt

	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}


		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong

	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}


		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort


} // namespace xs

	public class ActivationLimitDurationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ActivationLimitDurationType]); }}


		public ActivationLimitDurationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			duration = new MemberAttribute_duration (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationLimitDurationType_altova_duration]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActivationLimitDurationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_duration duration;
		public class MemberAttribute_duration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_duration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.Duration Value { get {
				return (Altova.Types.Duration)Altova.Xml.XmlTreeOperations.CastToDuration(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActivationLimitDurationType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ActivationLimitDurationType

	public class ActivationLimitSessionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ActivationLimitSessionType]); }}


		public ActivationLimitSessionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActivationLimitSessionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActivationLimitSessionType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ActivationLimitSessionType

	public class ActivationLimitType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ActivationLimitType]); }}


		public ActivationLimitType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			ActivationLimitDuration = new MemberElement_ActivationLimitDuration (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationLimitType_altova_ActivationLimitDuration]);
			ActivationLimitUsages = new MemberElement_ActivationLimitUsages (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationLimitType_altova_ActivationLimitUsages]);
			ActivationLimitSession = new MemberElement_ActivationLimitSession (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationLimitType_altova_ActivationLimitSession]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActivationLimitType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_ActivationLimitDuration ActivationLimitDuration;
		public class MemberElement_ActivationLimitDuration : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitDurationType this [int i] { get { return At(i);} } 
			public ActivationLimitDurationType At(int index) {return new ActivationLimitDurationType(owner.GetElementAt(info, index));}
			public ActivationLimitDurationType First { get  {return new ActivationLimitDurationType(owner.GetElementFirst(info));} }
			public ActivationLimitDurationType Last { get {return new ActivationLimitDurationType(owner.GetElementLast(info));} }
			public ActivationLimitDurationType Append(){return new ActivationLimitDurationType(owner.CreateElement(info));}
			public ActivationLimitDurationType AppendWithPrefix(string prefix) {return new ActivationLimitDurationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitDurationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimitUsages ActivationLimitUsages;
		public class MemberElement_ActivationLimitUsages : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitUsages (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitUsagesType this [int i] { get { return At(i);} } 
			public ActivationLimitUsagesType At(int index) {return new ActivationLimitUsagesType(owner.GetElementAt(info, index));}
			public ActivationLimitUsagesType First { get  {return new ActivationLimitUsagesType(owner.GetElementFirst(info));} }
			public ActivationLimitUsagesType Last { get {return new ActivationLimitUsagesType(owner.GetElementLast(info));} }
			public ActivationLimitUsagesType Append(){return new ActivationLimitUsagesType(owner.CreateElement(info));}
			public ActivationLimitUsagesType AppendWithPrefix(string prefix) {return new ActivationLimitUsagesType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitUsagesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimitSession ActivationLimitSession;
		public class MemberElement_ActivationLimitSession : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitSession (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitSessionType this [int i] { get { return At(i);} } 
			public ActivationLimitSessionType At(int index) {return new ActivationLimitSessionType(owner.GetElementAt(info, index));}
			public ActivationLimitSessionType First { get  {return new ActivationLimitSessionType(owner.GetElementFirst(info));} }
			public ActivationLimitSessionType Last { get {return new ActivationLimitSessionType(owner.GetElementLast(info));} }
			public ActivationLimitSessionType Append(){return new ActivationLimitSessionType(owner.CreateElement(info));}
			public ActivationLimitSessionType AppendWithPrefix(string prefix) {return new ActivationLimitSessionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitSessionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActivationLimitType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ActivationLimitType

	public class ActivationLimitUsagesType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ActivationLimitUsagesType]); }}


		public ActivationLimitUsagesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			number = new MemberAttribute_number (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationLimitUsagesType_altova_number]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActivationLimitUsagesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_number number;
		public class MemberAttribute_number
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_number (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActivationLimitUsagesType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ActivationLimitUsagesType

	public class ActivationPinType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ActivationPinType]); }}


		public ActivationPinType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Length = new MemberElement_Length (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationPinType_altova_Length]);
			Alphabet = new MemberElement_Alphabet (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationPinType_altova_Alphabet]);
			Generation = new MemberElement_Generation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationPinType_altova_Generation]);
			ActivationLimit = new MemberElement_ActivationLimit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationPinType_altova_ActivationLimit]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ActivationPinType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActivationPinType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Length Length;
		public class MemberElement_Length : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Length (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public LengthType this [int i] { get { return At(i);} } 
			public LengthType At(int index) {return new LengthType(owner.GetElementAt(info, index));}
			public LengthType First { get  {return new LengthType(owner.GetElementFirst(info));} }
			public LengthType Last { get {return new LengthType(owner.GetElementLast(info));} }
			public LengthType Append(){return new LengthType(owner.CreateElement(info));}
			public LengthType AppendWithPrefix(string prefix) {return new LengthType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new LengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Alphabet Alphabet;
		public class MemberElement_Alphabet : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Alphabet (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AlphabetType this [int i] { get { return At(i);} } 
			public AlphabetType At(int index) {return new AlphabetType(owner.GetElementAt(info, index));}
			public AlphabetType First { get  {return new AlphabetType(owner.GetElementFirst(info));} }
			public AlphabetType Last { get {return new AlphabetType(owner.GetElementLast(info));} }
			public AlphabetType Append(){return new AlphabetType(owner.CreateElement(info));}
			public AlphabetType AppendWithPrefix(string prefix) {return new AlphabetType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AlphabetType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Generation Generation;
		public class MemberElement_Generation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Generation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GenerationType this [int i] { get { return At(i);} } 
			public GenerationType At(int index) {return new GenerationType(owner.GetElementAt(info, index));}
			public GenerationType First { get  {return new GenerationType(owner.GetElementFirst(info));} }
			public GenerationType Last { get {return new GenerationType(owner.GetElementLast(info));} }
			public GenerationType Append(){return new GenerationType(owner.CreateElement(info));}
			public GenerationType AppendWithPrefix(string prefix) {return new GenerationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GenerationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimit ActivationLimit;
		public class MemberElement_ActivationLimit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitType this [int i] { get { return At(i);} } 
			public ActivationLimitType At(int index) {return new ActivationLimitType(owner.GetElementAt(info, index));}
			public ActivationLimitType First { get  {return new ActivationLimitType(owner.GetElementFirst(info));} }
			public ActivationLimitType Last { get {return new ActivationLimitType(owner.GetElementLast(info));} }
			public ActivationLimitType Append(){return new ActivationLimitType(owner.CreateElement(info));}
			public ActivationLimitType AppendWithPrefix(string prefix) {return new ActivationLimitType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActivationPinType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ActivationPinType

	public class AlphabetType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_AlphabetType]); }}


		public AlphabetType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			requiredChars = new MemberAttribute_requiredChars (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AlphabetType_altova_requiredChars]);
			excludedChars = new MemberAttribute_excludedChars (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AlphabetType_altova_excludedChars]);
			case2 = new MemberAttribute_case2 (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AlphabetType_altova_case2]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AlphabetType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_requiredChars requiredChars;
		public class MemberAttribute_requiredChars
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_requiredChars (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_excludedChars excludedChars;
		public class MemberAttribute_excludedChars
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_excludedChars (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_case2 case2;
		public class MemberAttribute_case2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_case2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AlphabetType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class AlphabetType

	public class AuthenticatorBaseType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_AuthenticatorBaseType]); }}


		public AuthenticatorBaseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			DigSig = new MemberElement_DigSig (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_DigSig]);
			ZeroKnowledge = new MemberElement_ZeroKnowledge (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_ZeroKnowledge]);
			SharedSecretChallengeResponse = new MemberElement_SharedSecretChallengeResponse (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_SharedSecretChallengeResponse]);
			SharedSecretDynamicPlaintext = new MemberElement_SharedSecretDynamicPlaintext (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_SharedSecretDynamicPlaintext]);
			AsymmetricDecryption = new MemberElement_AsymmetricDecryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_AsymmetricDecryption]);
			AsymmetricKeyAgreement = new MemberElement_AsymmetricKeyAgreement (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_AsymmetricKeyAgreement]);
			ComplexAuthenticator = new MemberElement_ComplexAuthenticator (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_ComplexAuthenticator]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorBaseType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthenticatorBaseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_DigSig DigSig;
		public class MemberElement_DigSig : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigSig (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ZeroKnowledge ZeroKnowledge;
		public class MemberElement_ZeroKnowledge : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ZeroKnowledge (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SharedSecretChallengeResponse SharedSecretChallengeResponse;
		public class MemberElement_SharedSecretChallengeResponse : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretChallengeResponse (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SharedSecretChallengeResponseType this [int i] { get { return At(i);} } 
			public SharedSecretChallengeResponseType At(int index) {return new SharedSecretChallengeResponseType(owner.GetElementAt(info, index));}
			public SharedSecretChallengeResponseType First { get  {return new SharedSecretChallengeResponseType(owner.GetElementFirst(info));} }
			public SharedSecretChallengeResponseType Last { get {return new SharedSecretChallengeResponseType(owner.GetElementLast(info));} }
			public SharedSecretChallengeResponseType Append(){return new SharedSecretChallengeResponseType(owner.CreateElement(info));}
			public SharedSecretChallengeResponseType AppendWithPrefix(string prefix) {return new SharedSecretChallengeResponseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SharedSecretChallengeResponseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SharedSecretDynamicPlaintext SharedSecretDynamicPlaintext;
		public class MemberElement_SharedSecretDynamicPlaintext : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretDynamicPlaintext (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AsymmetricDecryption AsymmetricDecryption;
		public class MemberElement_AsymmetricDecryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AsymmetricDecryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AsymmetricKeyAgreement AsymmetricKeyAgreement;
		public class MemberElement_AsymmetricKeyAgreement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AsymmetricKeyAgreement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ComplexAuthenticator ComplexAuthenticator;
		public class MemberElement_ComplexAuthenticator : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ComplexAuthenticator (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ComplexAuthenticatorType this [int i] { get { return At(i);} } 
			public ComplexAuthenticatorType At(int index) {return new ComplexAuthenticatorType(owner.GetElementAt(info, index));}
			public ComplexAuthenticatorType First { get  {return new ComplexAuthenticatorType(owner.GetElementFirst(info));} }
			public ComplexAuthenticatorType Last { get {return new ComplexAuthenticatorType(owner.GetElementLast(info));} }
			public ComplexAuthenticatorType Append(){return new ComplexAuthenticatorType(owner.CreateElement(info));}
			public ComplexAuthenticatorType AppendWithPrefix(string prefix) {return new ComplexAuthenticatorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ComplexAuthenticatorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthenticatorBaseType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class AuthenticatorBaseType

	public class AuthenticatorTransportProtocolType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_AuthenticatorTransportProtocolType]); }}


		public AuthenticatorTransportProtocolType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			SSL = new MemberElement_SSL (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_SSL]);
			MobileNetworkNoEncryption = new MemberElement_MobileNetworkNoEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_MobileNetworkNoEncryption]);
			MobileNetworkRadioEncryption = new MemberElement_MobileNetworkRadioEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_MobileNetworkRadioEncryption]);
			MobileNetworkEndToEndEncryption = new MemberElement_MobileNetworkEndToEndEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_MobileNetworkEndToEndEncryption]);
			WTLS = new MemberElement_WTLS (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_WTLS]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthenticatorTransportProtocolType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthenticatorTransportProtocolType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_SSL SSL;
		public class MemberElement_SSL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SSL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkNoEncryption MobileNetworkNoEncryption;
		public class MemberElement_MobileNetworkNoEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkNoEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkRadioEncryption MobileNetworkRadioEncryption;
		public class MemberElement_MobileNetworkRadioEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkRadioEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkEndToEndEncryption MobileNetworkEndToEndEncryption;
		public class MemberElement_MobileNetworkEndToEndEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkEndToEndEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_WTLS WTLS;
		public class MemberElement_WTLS : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_WTLS (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthenticatorTransportProtocolType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class AuthenticatorTransportProtocolType

	public class AuthnContextDeclarationBaseType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_AuthnContextDeclarationBaseType]); }}


		public AuthnContextDeclarationBaseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			ID = new MemberAttribute_ID (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_ID]);

			Identification = new MemberElement_Identification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_Identification]);
			TechnicalProtection = new MemberElement_TechnicalProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_TechnicalProtection]);
			OperationalProtection = new MemberElement_OperationalProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_OperationalProtection]);
			AuthnMethod = new MemberElement_AuthnMethod (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_AuthnMethod]);
			GoverningAgreements = new MemberElement_GoverningAgreements (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_GoverningAgreements]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnContextDeclarationBaseType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthnContextDeclarationBaseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Identification Identification;
		public class MemberElement_Identification : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Identification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public IdentificationType this [int i] { get { return At(i);} } 
			public IdentificationType At(int index) {return new IdentificationType(owner.GetElementAt(info, index));}
			public IdentificationType First { get  {return new IdentificationType(owner.GetElementFirst(info));} }
			public IdentificationType Last { get {return new IdentificationType(owner.GetElementLast(info));} }
			public IdentificationType Append(){return new IdentificationType(owner.CreateElement(info));}
			public IdentificationType AppendWithPrefix(string prefix) {return new IdentificationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new IdentificationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TechnicalProtection TechnicalProtection;
		public class MemberElement_TechnicalProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TechnicalProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TechnicalProtectionBaseType this [int i] { get { return At(i);} } 
			public TechnicalProtectionBaseType At(int index) {return new TechnicalProtectionBaseType(owner.GetElementAt(info, index));}
			public TechnicalProtectionBaseType First { get  {return new TechnicalProtectionBaseType(owner.GetElementFirst(info));} }
			public TechnicalProtectionBaseType Last { get {return new TechnicalProtectionBaseType(owner.GetElementLast(info));} }
			public TechnicalProtectionBaseType Append(){return new TechnicalProtectionBaseType(owner.CreateElement(info));}
			public TechnicalProtectionBaseType AppendWithPrefix(string prefix) {return new TechnicalProtectionBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TechnicalProtectionBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OperationalProtection OperationalProtection;
		public class MemberElement_OperationalProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OperationalProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OperationalProtectionType this [int i] { get { return At(i);} } 
			public OperationalProtectionType At(int index) {return new OperationalProtectionType(owner.GetElementAt(info, index));}
			public OperationalProtectionType First { get  {return new OperationalProtectionType(owner.GetElementFirst(info));} }
			public OperationalProtectionType Last { get {return new OperationalProtectionType(owner.GetElementLast(info));} }
			public OperationalProtectionType Append(){return new OperationalProtectionType(owner.CreateElement(info));}
			public OperationalProtectionType AppendWithPrefix(string prefix) {return new OperationalProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OperationalProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnMethod AuthnMethod;
		public class MemberElement_AuthnMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthnMethodBaseType this [int i] { get { return At(i);} } 
			public AuthnMethodBaseType At(int index) {return new AuthnMethodBaseType(owner.GetElementAt(info, index));}
			public AuthnMethodBaseType First { get  {return new AuthnMethodBaseType(owner.GetElementFirst(info));} }
			public AuthnMethodBaseType Last { get {return new AuthnMethodBaseType(owner.GetElementLast(info));} }
			public AuthnMethodBaseType Append(){return new AuthnMethodBaseType(owner.CreateElement(info));}
			public AuthnMethodBaseType AppendWithPrefix(string prefix) {return new AuthnMethodBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthnMethodBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GoverningAgreements GoverningAgreements;
		public class MemberElement_GoverningAgreements : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GoverningAgreements (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GoverningAgreementsType this [int i] { get { return At(i);} } 
			public GoverningAgreementsType At(int index) {return new GoverningAgreementsType(owner.GetElementAt(info, index));}
			public GoverningAgreementsType First { get  {return new GoverningAgreementsType(owner.GetElementFirst(info));} }
			public GoverningAgreementsType Last { get {return new GoverningAgreementsType(owner.GetElementLast(info));} }
			public GoverningAgreementsType Append(){return new GoverningAgreementsType(owner.CreateElement(info));}
			public GoverningAgreementsType AppendWithPrefix(string prefix) {return new GoverningAgreementsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GoverningAgreementsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthnContextDeclarationBaseType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class AuthnContextDeclarationBaseType

	public class AuthnMethodBaseType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_AuthnMethodBaseType]); }}


		public AuthnMethodBaseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			PrincipalAuthenticationMechanism = new MemberElement_PrincipalAuthenticationMechanism (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnMethodBaseType_altova_PrincipalAuthenticationMechanism]);
			Authenticator = new MemberElement_Authenticator (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnMethodBaseType_altova_Authenticator]);
			AuthenticatorTransportProtocol = new MemberElement_AuthenticatorTransportProtocol (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnMethodBaseType_altova_AuthenticatorTransportProtocol]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_AuthnMethodBaseType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthnMethodBaseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_PrincipalAuthenticationMechanism PrincipalAuthenticationMechanism;
		public class MemberElement_PrincipalAuthenticationMechanism : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PrincipalAuthenticationMechanism (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PrincipalAuthenticationMechanismType this [int i] { get { return At(i);} } 
			public PrincipalAuthenticationMechanismType At(int index) {return new PrincipalAuthenticationMechanismType(owner.GetElementAt(info, index));}
			public PrincipalAuthenticationMechanismType First { get  {return new PrincipalAuthenticationMechanismType(owner.GetElementFirst(info));} }
			public PrincipalAuthenticationMechanismType Last { get {return new PrincipalAuthenticationMechanismType(owner.GetElementLast(info));} }
			public PrincipalAuthenticationMechanismType Append(){return new PrincipalAuthenticationMechanismType(owner.CreateElement(info));}
			public PrincipalAuthenticationMechanismType AppendWithPrefix(string prefix) {return new PrincipalAuthenticationMechanismType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PrincipalAuthenticationMechanismType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Authenticator Authenticator;
		public class MemberElement_Authenticator : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Authenticator (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthenticatorBaseType this [int i] { get { return At(i);} } 
			public AuthenticatorBaseType At(int index) {return new AuthenticatorBaseType(owner.GetElementAt(info, index));}
			public AuthenticatorBaseType First { get  {return new AuthenticatorBaseType(owner.GetElementFirst(info));} }
			public AuthenticatorBaseType Last { get {return new AuthenticatorBaseType(owner.GetElementLast(info));} }
			public AuthenticatorBaseType Append(){return new AuthenticatorBaseType(owner.CreateElement(info));}
			public AuthenticatorBaseType AppendWithPrefix(string prefix) {return new AuthenticatorBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthenticatorBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthenticatorTransportProtocol AuthenticatorTransportProtocol;
		public class MemberElement_AuthenticatorTransportProtocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthenticatorTransportProtocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthenticatorTransportProtocolType this [int i] { get { return At(i);} } 
			public AuthenticatorTransportProtocolType At(int index) {return new AuthenticatorTransportProtocolType(owner.GetElementAt(info, index));}
			public AuthenticatorTransportProtocolType First { get  {return new AuthenticatorTransportProtocolType(owner.GetElementFirst(info));} }
			public AuthenticatorTransportProtocolType Last { get {return new AuthenticatorTransportProtocolType(owner.GetElementLast(info));} }
			public AuthenticatorTransportProtocolType Append(){return new AuthenticatorTransportProtocolType(owner.CreateElement(info));}
			public AuthenticatorTransportProtocolType AppendWithPrefix(string prefix) {return new AuthenticatorTransportProtocolType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthenticatorTransportProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthnMethodBaseType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class AuthnMethodBaseType

	public class ComplexAuthenticatorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ComplexAuthenticatorType]); }}


		public ComplexAuthenticatorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			SharedSecretChallengeResponse = new MemberElement_SharedSecretChallengeResponse (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ComplexAuthenticatorType_altova_SharedSecretChallengeResponse]);
			SharedSecretDynamicPlaintext = new MemberElement_SharedSecretDynamicPlaintext (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ComplexAuthenticatorType_altova_SharedSecretDynamicPlaintext]);
			Password = new MemberElement_Password (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ComplexAuthenticatorType_altova_Password]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ComplexAuthenticatorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_SharedSecretChallengeResponse SharedSecretChallengeResponse;
		public class MemberElement_SharedSecretChallengeResponse : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretChallengeResponse (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SharedSecretChallengeResponseType this [int i] { get { return At(i);} } 
			public SharedSecretChallengeResponseType At(int index) {return new SharedSecretChallengeResponseType(owner.GetElementAt(info, index));}
			public SharedSecretChallengeResponseType First { get  {return new SharedSecretChallengeResponseType(owner.GetElementFirst(info));} }
			public SharedSecretChallengeResponseType Last { get {return new SharedSecretChallengeResponseType(owner.GetElementLast(info));} }
			public SharedSecretChallengeResponseType Append(){return new SharedSecretChallengeResponseType(owner.CreateElement(info));}
			public SharedSecretChallengeResponseType AppendWithPrefix(string prefix) {return new SharedSecretChallengeResponseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SharedSecretChallengeResponseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SharedSecretDynamicPlaintext SharedSecretDynamicPlaintext;
		public class MemberElement_SharedSecretDynamicPlaintext : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretDynamicPlaintext (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Password Password;
		public class MemberElement_Password : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Password (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PasswordType this [int i] { get { return At(i);} } 
			public PasswordType At(int index) {return new PasswordType(owner.GetElementAt(info, index));}
			public PasswordType First { get  {return new PasswordType(owner.GetElementFirst(info));} }
			public PasswordType Last { get {return new PasswordType(owner.GetElementLast(info));} }
			public PasswordType Append(){return new PasswordType(owner.CreateElement(info));}
			public PasswordType AppendWithPrefix(string prefix) {return new PasswordType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PasswordType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ComplexAuthenticatorType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ComplexAuthenticatorType

	public class DeviceTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_DeviceTypeType]); }}


		public enum EnumValues
		{
			ehardware = 0, // hardware
			esoftware = 1, // software
			Invalid = -1, // Invalid value
		};

		public DeviceTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class DeviceTypeType

	public class ExtensionOnlyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ExtensionOnlyType]); }}


		public ExtensionOnlyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_ExtensionOnlyType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ExtensionOnlyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ExtensionOnlyType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ExtensionOnlyType

	public class ExtensionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_ExtensionType]); }}


		public ExtensionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ExtensionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ExtensionType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class ExtensionType

	public class GoverningAgreementRefType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_GoverningAgreementRefType]); }}


		public GoverningAgreementRefType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			governingAgreementRef = new MemberAttribute_governingAgreementRef (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_GoverningAgreementRefType_altova_governingAgreementRef]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new GoverningAgreementRefType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_governingAgreementRef governingAgreementRef;
		public class MemberAttribute_governingAgreementRef
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_governingAgreementRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("GoverningAgreementRefType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class GoverningAgreementRefType

	public class GoverningAgreementsType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_GoverningAgreementsType]); }}


		public GoverningAgreementsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			GoverningAgreementRef = new MemberElement_GoverningAgreementRef (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_GoverningAgreementsType_altova_GoverningAgreementRef]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new GoverningAgreementsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_GoverningAgreementRef GoverningAgreementRef;
		public class MemberElement_GoverningAgreementRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GoverningAgreementRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GoverningAgreementRefType this [int i] { get { return At(i);} } 
			public GoverningAgreementRefType At(int index) {return new GoverningAgreementRefType(owner.GetElementAt(info, index));}
			public GoverningAgreementRefType First { get  {return new GoverningAgreementRefType(owner.GetElementFirst(info));} }
			public GoverningAgreementRefType Last { get {return new GoverningAgreementRefType(owner.GetElementLast(info));} }
			public GoverningAgreementRefType Append(){return new GoverningAgreementRefType(owner.CreateElement(info));}
			public GoverningAgreementRefType AppendWithPrefix(string prefix) {return new GoverningAgreementRefType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GoverningAgreementRefType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("GoverningAgreementsType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class GoverningAgreementsType

	public class IdentificationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_IdentificationType]); }}


		public IdentificationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			nym = new MemberAttribute_nym (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_IdentificationType_altova_nym]);

			PhysicalVerification = new MemberElement_PhysicalVerification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_IdentificationType_altova_PhysicalVerification]);
			WrittenConsent = new MemberElement_WrittenConsent (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_IdentificationType_altova_WrittenConsent]);
			GoverningAgreements = new MemberElement_GoverningAgreements (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_IdentificationType_altova_GoverningAgreements]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_IdentificationType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new IdentificationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_nym nym;
		public class MemberAttribute_nym
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_nym (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public nymType2.EnumValues EnumerationValue
			{
				get
				{			
					return (nymType2.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 3);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 3) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_PhysicalVerification PhysicalVerification;
		public class MemberElement_PhysicalVerification : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PhysicalVerification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PhysicalVerificationType this [int i] { get { return At(i);} } 
			public PhysicalVerificationType At(int index) {return new PhysicalVerificationType(owner.GetElementAt(info, index));}
			public PhysicalVerificationType First { get  {return new PhysicalVerificationType(owner.GetElementFirst(info));} }
			public PhysicalVerificationType Last { get {return new PhysicalVerificationType(owner.GetElementLast(info));} }
			public PhysicalVerificationType Append(){return new PhysicalVerificationType(owner.CreateElement(info));}
			public PhysicalVerificationType AppendWithPrefix(string prefix) {return new PhysicalVerificationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PhysicalVerificationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_WrittenConsent WrittenConsent;
		public class MemberElement_WrittenConsent : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_WrittenConsent (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GoverningAgreements GoverningAgreements;
		public class MemberElement_GoverningAgreements : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GoverningAgreements (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GoverningAgreementsType this [int i] { get { return At(i);} } 
			public GoverningAgreementsType At(int index) {return new GoverningAgreementsType(owner.GetElementAt(info, index));}
			public GoverningAgreementsType First { get  {return new GoverningAgreementsType(owner.GetElementFirst(info));} }
			public GoverningAgreementsType Last { get {return new GoverningAgreementsType(owner.GetElementLast(info));} }
			public GoverningAgreementsType Append(){return new GoverningAgreementsType(owner.CreateElement(info));}
			public GoverningAgreementsType AppendWithPrefix(string prefix) {return new GoverningAgreementsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GoverningAgreementsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("IdentificationType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class IdentificationType

	public class KeyActivationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_KeyActivationType]); }}


		public KeyActivationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			ActivationPin = new MemberElement_ActivationPin (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_KeyActivationType_altova_ActivationPin]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_KeyActivationType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyActivationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_ActivationPin ActivationPin;
		public class MemberElement_ActivationPin : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationPin (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationPinType this [int i] { get { return At(i);} } 
			public ActivationPinType At(int index) {return new ActivationPinType(owner.GetElementAt(info, index));}
			public ActivationPinType First { get  {return new ActivationPinType(owner.GetElementFirst(info));} }
			public ActivationPinType Last { get {return new ActivationPinType(owner.GetElementLast(info));} }
			public ActivationPinType Append(){return new ActivationPinType(owner.CreateElement(info));}
			public ActivationPinType AppendWithPrefix(string prefix) {return new ActivationPinType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationPinType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyActivationType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class KeyActivationType

	public class KeySharingType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_KeySharingType]); }}


		public KeySharingType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			sharing = new MemberAttribute_sharing (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_KeySharingType_altova_sharing]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeySharingType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_sharing sharing;
		public class MemberAttribute_sharing
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_sharing (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeySharingType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class KeySharingType

	public class KeyStorageType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_KeyStorageType]); }}


		public KeyStorageType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			medium = new MemberAttribute_medium (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_KeyStorageType_altova_medium]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyStorageType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_medium medium;
		public class MemberAttribute_medium
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_medium (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public mediumType2.EnumValues EnumerationValue
			{
				get
				{			
					return (mediumType2.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 3);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 3) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyStorageType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class KeyStorageType

	public class LengthType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_LengthType]); }}


		public LengthType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			min = new MemberAttribute_min (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_LengthType_altova_min]);
			max = new MemberAttribute_max (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_LengthType_altova_max]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new LengthType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_min min;
		public class MemberAttribute_min
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_min (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_max max;
		public class MemberAttribute_max
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_max (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("LengthType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class LengthType

	public class OperationalProtectionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_OperationalProtectionType]); }}


		public OperationalProtectionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			SecurityAudit = new MemberElement_SecurityAudit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_OperationalProtectionType_altova_SecurityAudit]);
			DeactivationCallCenter = new MemberElement_DeactivationCallCenter (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_OperationalProtectionType_altova_DeactivationCallCenter]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_OperationalProtectionType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new OperationalProtectionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_SecurityAudit SecurityAudit;
		public class MemberElement_SecurityAudit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SecurityAudit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SecurityAuditType this [int i] { get { return At(i);} } 
			public SecurityAuditType At(int index) {return new SecurityAuditType(owner.GetElementAt(info, index));}
			public SecurityAuditType First { get  {return new SecurityAuditType(owner.GetElementFirst(info));} }
			public SecurityAuditType Last { get {return new SecurityAuditType(owner.GetElementLast(info));} }
			public SecurityAuditType Append(){return new SecurityAuditType(owner.CreateElement(info));}
			public SecurityAuditType AppendWithPrefix(string prefix) {return new SecurityAuditType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SecurityAuditType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DeactivationCallCenter DeactivationCallCenter;
		public class MemberElement_DeactivationCallCenter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DeactivationCallCenter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("OperationalProtectionType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class OperationalProtectionType

	public class PasswordType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_PasswordType]); }}


		public PasswordType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			ExternalVerification = new MemberAttribute_ExternalVerification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PasswordType_altova_ExternalVerification]);

			Length = new MemberElement_Length (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PasswordType_altova_Length]);
			Alphabet = new MemberElement_Alphabet (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PasswordType_altova_Alphabet]);
			Generation = new MemberElement_Generation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PasswordType_altova_Generation]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PasswordType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PasswordType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_ExternalVerification ExternalVerification;
		public class MemberAttribute_ExternalVerification
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ExternalVerification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Length Length;
		public class MemberElement_Length : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Length (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public LengthType this [int i] { get { return At(i);} } 
			public LengthType At(int index) {return new LengthType(owner.GetElementAt(info, index));}
			public LengthType First { get  {return new LengthType(owner.GetElementFirst(info));} }
			public LengthType Last { get {return new LengthType(owner.GetElementLast(info));} }
			public LengthType Append(){return new LengthType(owner.CreateElement(info));}
			public LengthType AppendWithPrefix(string prefix) {return new LengthType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new LengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Alphabet Alphabet;
		public class MemberElement_Alphabet : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Alphabet (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AlphabetType this [int i] { get { return At(i);} } 
			public AlphabetType At(int index) {return new AlphabetType(owner.GetElementAt(info, index));}
			public AlphabetType First { get  {return new AlphabetType(owner.GetElementFirst(info));} }
			public AlphabetType Last { get {return new AlphabetType(owner.GetElementLast(info));} }
			public AlphabetType Append(){return new AlphabetType(owner.CreateElement(info));}
			public AlphabetType AppendWithPrefix(string prefix) {return new AlphabetType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AlphabetType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Generation Generation;
		public class MemberElement_Generation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Generation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GenerationType this [int i] { get { return At(i);} } 
			public GenerationType At(int index) {return new GenerationType(owner.GetElementAt(info, index));}
			public GenerationType First { get  {return new GenerationType(owner.GetElementFirst(info));} }
			public GenerationType Last { get {return new GenerationType(owner.GetElementLast(info));} }
			public GenerationType Append(){return new GenerationType(owner.CreateElement(info));}
			public GenerationType AppendWithPrefix(string prefix) {return new GenerationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GenerationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PasswordType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class PasswordType

	public class PrincipalAuthenticationMechanismType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_PrincipalAuthenticationMechanismType]); }}


		public PrincipalAuthenticationMechanismType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			preauth = new MemberAttribute_preauth (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_preauth]);

			Password = new MemberElement_Password (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_Password]);
			RestrictedPassword = new MemberElement_RestrictedPassword (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_RestrictedPassword]);
			Token = new MemberElement_Token (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_Token]);
			Smartcard = new MemberElement_Smartcard (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_Smartcard]);
			ActivationPin = new MemberElement_ActivationPin (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_ActivationPin]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrincipalAuthenticationMechanismType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PrincipalAuthenticationMechanismType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_preauth preauth;
		public class MemberAttribute_preauth
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_preauth (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Password Password;
		public class MemberElement_Password : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Password (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PasswordType this [int i] { get { return At(i);} } 
			public PasswordType At(int index) {return new PasswordType(owner.GetElementAt(info, index));}
			public PasswordType First { get  {return new PasswordType(owner.GetElementFirst(info));} }
			public PasswordType Last { get {return new PasswordType(owner.GetElementLast(info));} }
			public PasswordType Append(){return new PasswordType(owner.CreateElement(info));}
			public PasswordType AppendWithPrefix(string prefix) {return new PasswordType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PasswordType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RestrictedPassword RestrictedPassword;
		public class MemberElement_RestrictedPassword : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RestrictedPassword (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public RestrictedPasswordType this [int i] { get { return At(i);} } 
			public RestrictedPasswordType At(int index) {return new RestrictedPasswordType(owner.GetElementAt(info, index));}
			public RestrictedPasswordType First { get  {return new RestrictedPasswordType(owner.GetElementFirst(info));} }
			public RestrictedPasswordType Last { get {return new RestrictedPasswordType(owner.GetElementLast(info));} }
			public RestrictedPasswordType Append(){return new RestrictedPasswordType(owner.CreateElement(info));}
			public RestrictedPasswordType AppendWithPrefix(string prefix) {return new RestrictedPasswordType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new RestrictedPasswordType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Token Token;
		public class MemberElement_Token : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Token (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TokenType this [int i] { get { return At(i);} } 
			public TokenType At(int index) {return new TokenType(owner.GetElementAt(info, index));}
			public TokenType First { get  {return new TokenType(owner.GetElementFirst(info));} }
			public TokenType Last { get {return new TokenType(owner.GetElementLast(info));} }
			public TokenType Append(){return new TokenType(owner.CreateElement(info));}
			public TokenType AppendWithPrefix(string prefix) {return new TokenType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TokenType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Smartcard Smartcard;
		public class MemberElement_Smartcard : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Smartcard (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationPin ActivationPin;
		public class MemberElement_ActivationPin : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationPin (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationPinType this [int i] { get { return At(i);} } 
			public ActivationPinType At(int index) {return new ActivationPinType(owner.GetElementAt(info, index));}
			public ActivationPinType First { get  {return new ActivationPinType(owner.GetElementFirst(info));} }
			public ActivationPinType Last { get {return new ActivationPinType(owner.GetElementLast(info));} }
			public ActivationPinType Append(){return new ActivationPinType(owner.CreateElement(info));}
			public ActivationPinType AppendWithPrefix(string prefix) {return new ActivationPinType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationPinType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PrincipalAuthenticationMechanismType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class PrincipalAuthenticationMechanismType

	public class PrivateKeyProtectionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_PrivateKeyProtectionType]); }}


		public PrivateKeyProtectionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			KeyActivation = new MemberElement_KeyActivation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrivateKeyProtectionType_altova_KeyActivation]);
			KeyStorage = new MemberElement_KeyStorage (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrivateKeyProtectionType_altova_KeyStorage]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PrivateKeyProtectionType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PrivateKeyProtectionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_KeyActivation KeyActivation;
		public class MemberElement_KeyActivation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyActivation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyActivationType this [int i] { get { return At(i);} } 
			public KeyActivationType At(int index) {return new KeyActivationType(owner.GetElementAt(info, index));}
			public KeyActivationType First { get  {return new KeyActivationType(owner.GetElementFirst(info));} }
			public KeyActivationType Last { get {return new KeyActivationType(owner.GetElementLast(info));} }
			public KeyActivationType Append(){return new KeyActivationType(owner.CreateElement(info));}
			public KeyActivationType AppendWithPrefix(string prefix) {return new KeyActivationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyActivationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyStorage KeyStorage;
		public class MemberElement_KeyStorage : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyStorage (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyStorageType this [int i] { get { return At(i);} } 
			public KeyStorageType At(int index) {return new KeyStorageType(owner.GetElementAt(info, index));}
			public KeyStorageType First { get  {return new KeyStorageType(owner.GetElementFirst(info));} }
			public KeyStorageType Last { get {return new KeyStorageType(owner.GetElementLast(info));} }
			public KeyStorageType Append(){return new KeyStorageType(owner.CreateElement(info));}
			public KeyStorageType AppendWithPrefix(string prefix) {return new KeyStorageType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyStorageType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PrivateKeyProtectionType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class PrivateKeyProtectionType

	public class PublicKeyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_PublicKeyType]); }}


		public PublicKeyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			keyValidation = new MemberAttribute_keyValidation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PublicKeyType_altova_keyValidation]);

			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PublicKeyType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PublicKeyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_keyValidation keyValidation;
		public class MemberAttribute_keyValidation
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_keyValidation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PublicKeyType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class PublicKeyType

	public class RestrictedLengthType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_RestrictedLengthType]); }}


		public RestrictedLengthType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			min = new MemberAttribute_min (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedLengthType_altova_min]);
			max = new MemberAttribute_max (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedLengthType_altova_max]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RestrictedLengthType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_min min;
		public class MemberAttribute_min
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_min (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_max max;
		public class MemberAttribute_max
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_max (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RestrictedLengthType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class RestrictedLengthType

	public class RestrictedPasswordType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_RestrictedPasswordType]); }}


		public RestrictedPasswordType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			ExternalVerification = new MemberAttribute_ExternalVerification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedPasswordType_altova_ExternalVerification]);

			Length = new MemberElement_Length (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedPasswordType_altova_Length]);
			Generation = new MemberElement_Generation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedPasswordType_altova_Generation]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_RestrictedPasswordType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RestrictedPasswordType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_ExternalVerification ExternalVerification;
		public class MemberAttribute_ExternalVerification
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ExternalVerification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Length Length;
		public class MemberElement_Length : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Length (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public RestrictedLengthType this [int i] { get { return At(i);} } 
			public RestrictedLengthType At(int index) {return new RestrictedLengthType(owner.GetElementAt(info, index));}
			public RestrictedLengthType First { get  {return new RestrictedLengthType(owner.GetElementFirst(info));} }
			public RestrictedLengthType Last { get {return new RestrictedLengthType(owner.GetElementLast(info));} }
			public RestrictedLengthType Append(){return new RestrictedLengthType(owner.CreateElement(info));}
			public RestrictedLengthType AppendWithPrefix(string prefix) {return new RestrictedLengthType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new RestrictedLengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Generation Generation;
		public class MemberElement_Generation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Generation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GenerationType this [int i] { get { return At(i);} } 
			public GenerationType At(int index) {return new GenerationType(owner.GetElementAt(info, index));}
			public GenerationType First { get  {return new GenerationType(owner.GetElementFirst(info));} }
			public GenerationType Last { get {return new GenerationType(owner.GetElementLast(info));} }
			public GenerationType Append(){return new GenerationType(owner.CreateElement(info));}
			public GenerationType AppendWithPrefix(string prefix) {return new GenerationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GenerationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RestrictedPasswordType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class RestrictedPasswordType

	public class SecretKeyProtectionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_SecretKeyProtectionType]); }}


		public SecretKeyProtectionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			KeyActivation = new MemberElement_KeyActivation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SecretKeyProtectionType_altova_KeyActivation]);
			KeyStorage = new MemberElement_KeyStorage (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SecretKeyProtectionType_altova_KeyStorage]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SecretKeyProtectionType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SecretKeyProtectionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_KeyActivation KeyActivation;
		public class MemberElement_KeyActivation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyActivation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyActivationType this [int i] { get { return At(i);} } 
			public KeyActivationType At(int index) {return new KeyActivationType(owner.GetElementAt(info, index));}
			public KeyActivationType First { get  {return new KeyActivationType(owner.GetElementFirst(info));} }
			public KeyActivationType Last { get {return new KeyActivationType(owner.GetElementLast(info));} }
			public KeyActivationType Append(){return new KeyActivationType(owner.CreateElement(info));}
			public KeyActivationType AppendWithPrefix(string prefix) {return new KeyActivationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyActivationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyStorage KeyStorage;
		public class MemberElement_KeyStorage : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyStorage (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyStorageType this [int i] { get { return At(i);} } 
			public KeyStorageType At(int index) {return new KeyStorageType(owner.GetElementAt(info, index));}
			public KeyStorageType First { get  {return new KeyStorageType(owner.GetElementFirst(info));} }
			public KeyStorageType Last { get {return new KeyStorageType(owner.GetElementLast(info));} }
			public KeyStorageType Append(){return new KeyStorageType(owner.CreateElement(info));}
			public KeyStorageType AppendWithPrefix(string prefix) {return new KeyStorageType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyStorageType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SecretKeyProtectionType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class SecretKeyProtectionType

	public class SecurityAuditType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_SecurityAuditType]); }}


		public SecurityAuditType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			SwitchAudit = new MemberElement_SwitchAudit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SecurityAuditType_altova_SwitchAudit]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SecurityAuditType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SecurityAuditType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_SwitchAudit SwitchAudit;
		public class MemberElement_SwitchAudit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SwitchAudit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SecurityAuditType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class SecurityAuditType

	public class SharedSecretChallengeResponseType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_SharedSecretChallengeResponseType]); }}


		public SharedSecretChallengeResponseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			method = new MemberAttribute_method (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SharedSecretChallengeResponseType_altova_method]);

			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_SharedSecretChallengeResponseType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SharedSecretChallengeResponseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_method method;
		public class MemberAttribute_method
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_method (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SharedSecretChallengeResponseType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class SharedSecretChallengeResponseType

	public class TechnicalProtectionBaseType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_TechnicalProtectionBaseType]); }}


		public TechnicalProtectionBaseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			PrivateKeyProtection = new MemberElement_PrivateKeyProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TechnicalProtectionBaseType_altova_PrivateKeyProtection]);
			SecretKeyProtection = new MemberElement_SecretKeyProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TechnicalProtectionBaseType_altova_SecretKeyProtection]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TechnicalProtectionBaseType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TechnicalProtectionBaseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_PrivateKeyProtection PrivateKeyProtection;
		public class MemberElement_PrivateKeyProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PrivateKeyProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PrivateKeyProtectionType this [int i] { get { return At(i);} } 
			public PrivateKeyProtectionType At(int index) {return new PrivateKeyProtectionType(owner.GetElementAt(info, index));}
			public PrivateKeyProtectionType First { get  {return new PrivateKeyProtectionType(owner.GetElementFirst(info));} }
			public PrivateKeyProtectionType Last { get {return new PrivateKeyProtectionType(owner.GetElementLast(info));} }
			public PrivateKeyProtectionType Append(){return new PrivateKeyProtectionType(owner.CreateElement(info));}
			public PrivateKeyProtectionType AppendWithPrefix(string prefix) {return new PrivateKeyProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PrivateKeyProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SecretKeyProtection SecretKeyProtection;
		public class MemberElement_SecretKeyProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SecretKeyProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SecretKeyProtectionType this [int i] { get { return At(i);} } 
			public SecretKeyProtectionType At(int index) {return new SecretKeyProtectionType(owner.GetElementAt(info, index));}
			public SecretKeyProtectionType First { get  {return new SecretKeyProtectionType(owner.GetElementFirst(info));} }
			public SecretKeyProtectionType Last { get {return new SecretKeyProtectionType(owner.GetElementLast(info));} }
			public SecretKeyProtectionType Append(){return new SecretKeyProtectionType(owner.CreateElement(info));}
			public SecretKeyProtectionType AppendWithPrefix(string prefix) {return new SecretKeyProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SecretKeyProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TechnicalProtectionBaseType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class TechnicalProtectionBaseType

	public class TimeSyncTokenType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_TimeSyncTokenType]); }}


		public TimeSyncTokenType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			DeviceType = new MemberAttribute_DeviceType (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TimeSyncTokenType_altova_DeviceType]);
			SeedLength = new MemberAttribute_SeedLength (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TimeSyncTokenType_altova_SeedLength]);
			DeviceInHand = new MemberAttribute_DeviceInHand (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TimeSyncTokenType_altova_DeviceInHand]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TimeSyncTokenType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_DeviceType DeviceType;
		public class MemberAttribute_DeviceType
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_DeviceType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public DeviceTypeType.EnumValues EnumerationValue
			{
				get
				{			
					return (DeviceTypeType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}
		public MemberAttribute_SeedLength SeedLength;
		public class MemberAttribute_SeedLength
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SeedLength (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_DeviceInHand DeviceInHand;
		public class MemberAttribute_DeviceInHand
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_DeviceInHand (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public booleanType.EnumValues EnumerationValue
			{
				get
				{			
					return (booleanType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TimeSyncTokenType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class TimeSyncTokenType

	public class TokenType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_TokenType]); }}


		public TokenType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			TimeSyncToken = new MemberElement_TimeSyncToken (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TokenType_altova_TimeSyncToken]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_TokenType_altova_Extension]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TokenType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_TimeSyncToken TimeSyncToken;
		public class MemberElement_TimeSyncToken : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TimeSyncToken (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TimeSyncTokenType this [int i] { get { return At(i);} } 
			public TimeSyncTokenType At(int index) {return new TimeSyncTokenType(owner.GetElementAt(info, index));}
			public TimeSyncTokenType First { get  {return new TimeSyncTokenType(owner.GetElementFirst(info));} }
			public TimeSyncTokenType Last { get {return new TimeSyncTokenType(owner.GetElementLast(info));} }
			public TimeSyncTokenType Append(){return new TimeSyncTokenType(owner.CreateElement(info));}
			public TimeSyncTokenType AppendWithPrefix(string prefix) {return new TimeSyncTokenType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TimeSyncTokenType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TokenType", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class TokenType

	public class booleanType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_booleanType]); }}


		public enum EnumValues
		{
			etrue = 0, // true
			efalse = 1, // false
			Invalid = -1, // Invalid value
		};

		public booleanType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class booleanType

	public class mediumType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_mediumType]); }}


		public enum EnumValues
		{
			ememory = 0, // memory
			esmartcard = 1, // smartcard
			etoken = 2, // token
			eMobileDevice = 3, // MobileDevice
			eMobileAuthCard = 4, // MobileAuthCard
			Invalid = -1, // Invalid value
		};

		public mediumType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class mediumType

	public class nymType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_nymType]); }}


		public enum EnumValues
		{
			eanonymity = 0, // anonymity
			everinymity = 1, // verinymity
			epseudonymity = 2, // pseudonymity
			Invalid = -1, // Invalid value
		};

		public nymType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nymType

	public class saml_schema_authn_context_mobiletwofactor_reg_2_02 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02]); }}


		public static saml_schema_authn_context_mobiletwofactor_reg_2_02 LoadFromFile(string filename) 
		{
			return new saml_schema_authn_context_mobiletwofactor_reg_2_02(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static saml_schema_authn_context_mobiletwofactor_reg_2_02 LoadFromString(string xmlstring) 
		{
			return new saml_schema_authn_context_mobiletwofactor_reg_2_02(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static saml_schema_authn_context_mobiletwofactor_reg_2_02 LoadFromBinary(byte[] binary) 
		{
			return new saml_schema_authn_context_mobiletwofactor_reg_2_02(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, false, "\r\n");
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, omitXmlDecl, "\r\n");
		}

		public void SaveToFileWithLineEnd(string filename, bool prettyPrint, bool omitXmlDecl, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint, omitXmlDecl, lineend);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, "\r\n" );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, false, encoding, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, bool bBigEndian, bool bBOM, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint, omitXmlDecl, lineend);
		}

		public string SaveToString(bool prettyPrint)
		{
			return SaveToString( prettyPrint, false);
		}

		public string SaveToString(bool prettyPrint, bool omitXmlDecl)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint, omitXmlDecl);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static saml_schema_authn_context_mobiletwofactor_reg_2_02 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static saml_schema_authn_context_mobiletwofactor_reg_2_02 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new saml_schema_authn_context_mobiletwofactor_reg_2_02(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}

		static public void DeclareAllNamespacesFromSchema(Altova.Xml.ElementType node)
		{
			foreach (var ns in saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Namespaces)
				if (ns.namespaceURI != "")
					node.DeclareNamespace(ns.prefix, ns.namespaceURI);
		}


		public saml_schema_authn_context_mobiletwofactor_reg_2_02(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			ADSL = new MemberElement_ADSL (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ADSL]);
			ActivationLimit = new MemberElement_ActivationLimit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ActivationLimit]);
			ActivationLimitDuration = new MemberElement_ActivationLimitDuration (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ActivationLimitDuration]);
			ActivationLimitSession = new MemberElement_ActivationLimitSession (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ActivationLimitSession]);
			ActivationLimitUsages = new MemberElement_ActivationLimitUsages (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ActivationLimitUsages]);
			ActivationPin = new MemberElement_ActivationPin (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ActivationPin]);
			Alphabet = new MemberElement_Alphabet (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Alphabet]);
			AsymmetricDecryption = new MemberElement_AsymmetricDecryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_AsymmetricDecryption]);
			AsymmetricKeyAgreement = new MemberElement_AsymmetricKeyAgreement (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_AsymmetricKeyAgreement]);
			AuthenticationContextDeclaration = new MemberElement_AuthenticationContextDeclaration (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_AuthenticationContextDeclaration]);
			Authenticator = new MemberElement_Authenticator (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Authenticator]);
			AuthenticatorTransportProtocol = new MemberElement_AuthenticatorTransportProtocol (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_AuthenticatorTransportProtocol]);
			AuthnMethod = new MemberElement_AuthnMethod (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_AuthnMethod]);
			ComplexAuthenticator = new MemberElement_ComplexAuthenticator (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ComplexAuthenticator]);
			DeactivationCallCenter = new MemberElement_DeactivationCallCenter (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_DeactivationCallCenter]);
			DigSig = new MemberElement_DigSig (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_DigSig]);
			Extension = new MemberElement_Extension (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Extension]);
			Generation = new MemberElement_Generation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Generation]);
			GoverningAgreementRef = new MemberElement_GoverningAgreementRef (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_GoverningAgreementRef]);
			GoverningAgreements = new MemberElement_GoverningAgreements (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_GoverningAgreements]);
			HTTP = new MemberElement_HTTP (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_HTTP]);
			IPAddress = new MemberElement_IPAddress (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_IPAddress]);
			IPSec = new MemberElement_IPSec (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_IPSec]);
			ISDN = new MemberElement_ISDN (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ISDN]);
			Identification = new MemberElement_Identification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Identification]);
			KeyActivation = new MemberElement_KeyActivation (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_KeyActivation]);
			KeySharing = new MemberElement_KeySharing (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_KeySharing]);
			KeyStorage = new MemberElement_KeyStorage (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_KeyStorage]);
			Length = new MemberElement_Length (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Length]);
			MobileNetworkEndToEndEncryption = new MemberElement_MobileNetworkEndToEndEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_MobileNetworkEndToEndEncryption]);
			MobileNetworkNoEncryption = new MemberElement_MobileNetworkNoEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_MobileNetworkNoEncryption]);
			MobileNetworkRadioEncryption = new MemberElement_MobileNetworkRadioEncryption (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_MobileNetworkRadioEncryption]);
			OperationalProtection = new MemberElement_OperationalProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_OperationalProtection]);
			PSTN = new MemberElement_PSTN (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_PSTN]);
			Password = new MemberElement_Password (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Password]);
			PhysicalVerification = new MemberElement_PhysicalVerification (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_PhysicalVerification]);
			PreviousSession = new MemberElement_PreviousSession (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_PreviousSession]);
			PrincipalAuthenticationMechanism = new MemberElement_PrincipalAuthenticationMechanism (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_PrincipalAuthenticationMechanism]);
			PrivateKeyProtection = new MemberElement_PrivateKeyProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_PrivateKeyProtection]);
			RestrictedPassword = new MemberElement_RestrictedPassword (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_RestrictedPassword]);
			ResumeSession = new MemberElement_ResumeSession (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ResumeSession]);
			SSL = new MemberElement_SSL (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SSL]);
			SecretKeyProtection = new MemberElement_SecretKeyProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SecretKeyProtection]);
			SecurityAudit = new MemberElement_SecurityAudit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SecurityAudit]);
			SharedSecretChallengeResponse = new MemberElement_SharedSecretChallengeResponse (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SharedSecretChallengeResponse]);
			SharedSecretDynamicPlaintext = new MemberElement_SharedSecretDynamicPlaintext (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SharedSecretDynamicPlaintext]);
			Smartcard = new MemberElement_Smartcard (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Smartcard]);
			SubscriberLineNumber = new MemberElement_SubscriberLineNumber (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SubscriberLineNumber]);
			SwitchAudit = new MemberElement_SwitchAudit (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_SwitchAudit]);
			TechnicalProtection = new MemberElement_TechnicalProtection (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_TechnicalProtection]);
			TimeSyncToken = new MemberElement_TimeSyncToken (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_TimeSyncToken]);
			Token = new MemberElement_Token (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_Token]);
			UserSuffix = new MemberElement_UserSuffix (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_UserSuffix]);
			WTLS = new MemberElement_WTLS (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_WTLS]);
			WrittenConsent = new MemberElement_WrittenConsent (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_WrittenConsent]);
			ZeroKnowledge = new MemberElement_ZeroKnowledge (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_saml_schema_authn_context_mobiletwofactor_reg_2_02_altova_ZeroKnowledge]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new saml_schema_authn_context_mobiletwofactor_reg_2_02((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_ADSL ADSL;
		public class MemberElement_ADSL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ADSL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimit ActivationLimit;
		public class MemberElement_ActivationLimit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitType this [int i] { get { return At(i);} } 
			public ActivationLimitType At(int index) {return new ActivationLimitType(owner.GetElementAt(info, index));}
			public ActivationLimitType First { get  {return new ActivationLimitType(owner.GetElementFirst(info));} }
			public ActivationLimitType Last { get {return new ActivationLimitType(owner.GetElementLast(info));} }
			public ActivationLimitType Append(){return new ActivationLimitType(owner.CreateElement(info));}
			public ActivationLimitType AppendWithPrefix(string prefix) {return new ActivationLimitType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimitDuration ActivationLimitDuration;
		public class MemberElement_ActivationLimitDuration : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitDurationType this [int i] { get { return At(i);} } 
			public ActivationLimitDurationType At(int index) {return new ActivationLimitDurationType(owner.GetElementAt(info, index));}
			public ActivationLimitDurationType First { get  {return new ActivationLimitDurationType(owner.GetElementFirst(info));} }
			public ActivationLimitDurationType Last { get {return new ActivationLimitDurationType(owner.GetElementLast(info));} }
			public ActivationLimitDurationType Append(){return new ActivationLimitDurationType(owner.CreateElement(info));}
			public ActivationLimitDurationType AppendWithPrefix(string prefix) {return new ActivationLimitDurationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitDurationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimitSession ActivationLimitSession;
		public class MemberElement_ActivationLimitSession : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitSession (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitSessionType this [int i] { get { return At(i);} } 
			public ActivationLimitSessionType At(int index) {return new ActivationLimitSessionType(owner.GetElementAt(info, index));}
			public ActivationLimitSessionType First { get  {return new ActivationLimitSessionType(owner.GetElementFirst(info));} }
			public ActivationLimitSessionType Last { get {return new ActivationLimitSessionType(owner.GetElementLast(info));} }
			public ActivationLimitSessionType Append(){return new ActivationLimitSessionType(owner.CreateElement(info));}
			public ActivationLimitSessionType AppendWithPrefix(string prefix) {return new ActivationLimitSessionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitSessionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationLimitUsages ActivationLimitUsages;
		public class MemberElement_ActivationLimitUsages : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationLimitUsages (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationLimitUsagesType this [int i] { get { return At(i);} } 
			public ActivationLimitUsagesType At(int index) {return new ActivationLimitUsagesType(owner.GetElementAt(info, index));}
			public ActivationLimitUsagesType First { get  {return new ActivationLimitUsagesType(owner.GetElementFirst(info));} }
			public ActivationLimitUsagesType Last { get {return new ActivationLimitUsagesType(owner.GetElementLast(info));} }
			public ActivationLimitUsagesType Append(){return new ActivationLimitUsagesType(owner.CreateElement(info));}
			public ActivationLimitUsagesType AppendWithPrefix(string prefix) {return new ActivationLimitUsagesType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationLimitUsagesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ActivationPin ActivationPin;
		public class MemberElement_ActivationPin : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ActivationPin (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ActivationPinType this [int i] { get { return At(i);} } 
			public ActivationPinType At(int index) {return new ActivationPinType(owner.GetElementAt(info, index));}
			public ActivationPinType First { get  {return new ActivationPinType(owner.GetElementFirst(info));} }
			public ActivationPinType Last { get {return new ActivationPinType(owner.GetElementLast(info));} }
			public ActivationPinType Append(){return new ActivationPinType(owner.CreateElement(info));}
			public ActivationPinType AppendWithPrefix(string prefix) {return new ActivationPinType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ActivationPinType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Alphabet Alphabet;
		public class MemberElement_Alphabet : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Alphabet (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AlphabetType this [int i] { get { return At(i);} } 
			public AlphabetType At(int index) {return new AlphabetType(owner.GetElementAt(info, index));}
			public AlphabetType First { get  {return new AlphabetType(owner.GetElementFirst(info));} }
			public AlphabetType Last { get {return new AlphabetType(owner.GetElementLast(info));} }
			public AlphabetType Append(){return new AlphabetType(owner.CreateElement(info));}
			public AlphabetType AppendWithPrefix(string prefix) {return new AlphabetType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AlphabetType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AsymmetricDecryption AsymmetricDecryption;
		public class MemberElement_AsymmetricDecryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AsymmetricDecryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AsymmetricKeyAgreement AsymmetricKeyAgreement;
		public class MemberElement_AsymmetricKeyAgreement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AsymmetricKeyAgreement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthenticationContextDeclaration AuthenticationContextDeclaration;
		public class MemberElement_AuthenticationContextDeclaration : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthenticationContextDeclaration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthnContextDeclarationBaseType this [int i] { get { return At(i);} } 
			public AuthnContextDeclarationBaseType At(int index) {return new AuthnContextDeclarationBaseType(owner.GetElementAt(info, index));}
			public AuthnContextDeclarationBaseType First { get  {return new AuthnContextDeclarationBaseType(owner.GetElementFirst(info));} }
			public AuthnContextDeclarationBaseType Last { get {return new AuthnContextDeclarationBaseType(owner.GetElementLast(info));} }
			public AuthnContextDeclarationBaseType Append(){return new AuthnContextDeclarationBaseType(owner.CreateElement(info));}
			public AuthnContextDeclarationBaseType AppendWithPrefix(string prefix) {return new AuthnContextDeclarationBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthnContextDeclarationBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Authenticator Authenticator;
		public class MemberElement_Authenticator : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Authenticator (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthenticatorBaseType this [int i] { get { return At(i);} } 
			public AuthenticatorBaseType At(int index) {return new AuthenticatorBaseType(owner.GetElementAt(info, index));}
			public AuthenticatorBaseType First { get  {return new AuthenticatorBaseType(owner.GetElementFirst(info));} }
			public AuthenticatorBaseType Last { get {return new AuthenticatorBaseType(owner.GetElementLast(info));} }
			public AuthenticatorBaseType Append(){return new AuthenticatorBaseType(owner.CreateElement(info));}
			public AuthenticatorBaseType AppendWithPrefix(string prefix) {return new AuthenticatorBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthenticatorBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthenticatorTransportProtocol AuthenticatorTransportProtocol;
		public class MemberElement_AuthenticatorTransportProtocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthenticatorTransportProtocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthenticatorTransportProtocolType this [int i] { get { return At(i);} } 
			public AuthenticatorTransportProtocolType At(int index) {return new AuthenticatorTransportProtocolType(owner.GetElementAt(info, index));}
			public AuthenticatorTransportProtocolType First { get  {return new AuthenticatorTransportProtocolType(owner.GetElementFirst(info));} }
			public AuthenticatorTransportProtocolType Last { get {return new AuthenticatorTransportProtocolType(owner.GetElementLast(info));} }
			public AuthenticatorTransportProtocolType Append(){return new AuthenticatorTransportProtocolType(owner.CreateElement(info));}
			public AuthenticatorTransportProtocolType AppendWithPrefix(string prefix) {return new AuthenticatorTransportProtocolType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthenticatorTransportProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnMethod AuthnMethod;
		public class MemberElement_AuthnMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public AuthnMethodBaseType this [int i] { get { return At(i);} } 
			public AuthnMethodBaseType At(int index) {return new AuthnMethodBaseType(owner.GetElementAt(info, index));}
			public AuthnMethodBaseType First { get  {return new AuthnMethodBaseType(owner.GetElementFirst(info));} }
			public AuthnMethodBaseType Last { get {return new AuthnMethodBaseType(owner.GetElementLast(info));} }
			public AuthnMethodBaseType Append(){return new AuthnMethodBaseType(owner.CreateElement(info));}
			public AuthnMethodBaseType AppendWithPrefix(string prefix) {return new AuthnMethodBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new AuthnMethodBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ComplexAuthenticator ComplexAuthenticator;
		public class MemberElement_ComplexAuthenticator : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ComplexAuthenticator (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ComplexAuthenticatorType this [int i] { get { return At(i);} } 
			public ComplexAuthenticatorType At(int index) {return new ComplexAuthenticatorType(owner.GetElementAt(info, index));}
			public ComplexAuthenticatorType First { get  {return new ComplexAuthenticatorType(owner.GetElementFirst(info));} }
			public ComplexAuthenticatorType Last { get {return new ComplexAuthenticatorType(owner.GetElementLast(info));} }
			public ComplexAuthenticatorType Append(){return new ComplexAuthenticatorType(owner.CreateElement(info));}
			public ComplexAuthenticatorType AppendWithPrefix(string prefix) {return new ComplexAuthenticatorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ComplexAuthenticatorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DeactivationCallCenter DeactivationCallCenter;
		public class MemberElement_DeactivationCallCenter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DeactivationCallCenter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DigSig DigSig;
		public class MemberElement_DigSig : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigSig (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PublicKeyType this [int i] { get { return At(i);} } 
			public PublicKeyType At(int index) {return new PublicKeyType(owner.GetElementAt(info, index));}
			public PublicKeyType First { get  {return new PublicKeyType(owner.GetElementFirst(info));} }
			public PublicKeyType Last { get {return new PublicKeyType(owner.GetElementLast(info));} }
			public PublicKeyType Append(){return new PublicKeyType(owner.CreateElement(info));}
			public PublicKeyType AppendWithPrefix(string prefix) {return new PublicKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PublicKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extension Extension;
		public class MemberElement_Extension : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extension (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionType this [int i] { get { return At(i);} } 
			public ExtensionType At(int index) {return new ExtensionType(owner.GetElementAt(info, index));}
			public ExtensionType First { get  {return new ExtensionType(owner.GetElementFirst(info));} }
			public ExtensionType Last { get {return new ExtensionType(owner.GetElementLast(info));} }
			public ExtensionType Append(){return new ExtensionType(owner.CreateElement(info));}
			public ExtensionType AppendWithPrefix(string prefix) {return new ExtensionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Generation Generation;
		public class MemberElement_Generation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Generation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GenerationType this [int i] { get { return At(i);} } 
			public GenerationType At(int index) {return new GenerationType(owner.GetElementAt(info, index));}
			public GenerationType First { get  {return new GenerationType(owner.GetElementFirst(info));} }
			public GenerationType Last { get {return new GenerationType(owner.GetElementLast(info));} }
			public GenerationType Append(){return new GenerationType(owner.CreateElement(info));}
			public GenerationType AppendWithPrefix(string prefix) {return new GenerationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GenerationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GoverningAgreementRef GoverningAgreementRef;
		public class MemberElement_GoverningAgreementRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GoverningAgreementRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GoverningAgreementRefType this [int i] { get { return At(i);} } 
			public GoverningAgreementRefType At(int index) {return new GoverningAgreementRefType(owner.GetElementAt(info, index));}
			public GoverningAgreementRefType First { get  {return new GoverningAgreementRefType(owner.GetElementFirst(info));} }
			public GoverningAgreementRefType Last { get {return new GoverningAgreementRefType(owner.GetElementLast(info));} }
			public GoverningAgreementRefType Append(){return new GoverningAgreementRefType(owner.CreateElement(info));}
			public GoverningAgreementRefType AppendWithPrefix(string prefix) {return new GoverningAgreementRefType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GoverningAgreementRefType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GoverningAgreements GoverningAgreements;
		public class MemberElement_GoverningAgreements : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GoverningAgreements (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public GoverningAgreementsType this [int i] { get { return At(i);} } 
			public GoverningAgreementsType At(int index) {return new GoverningAgreementsType(owner.GetElementAt(info, index));}
			public GoverningAgreementsType First { get  {return new GoverningAgreementsType(owner.GetElementFirst(info));} }
			public GoverningAgreementsType Last { get {return new GoverningAgreementsType(owner.GetElementLast(info));} }
			public GoverningAgreementsType Append(){return new GoverningAgreementsType(owner.CreateElement(info));}
			public GoverningAgreementsType AppendWithPrefix(string prefix) {return new GoverningAgreementsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new GoverningAgreementsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_HTTP HTTP;
		public class MemberElement_HTTP : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_HTTP (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IPAddress IPAddress;
		public class MemberElement_IPAddress : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IPAddress (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IPSec IPSec;
		public class MemberElement_IPSec : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IPSec (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ISDN ISDN;
		public class MemberElement_ISDN : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ISDN (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Identification Identification;
		public class MemberElement_Identification : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Identification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public IdentificationType this [int i] { get { return At(i);} } 
			public IdentificationType At(int index) {return new IdentificationType(owner.GetElementAt(info, index));}
			public IdentificationType First { get  {return new IdentificationType(owner.GetElementFirst(info));} }
			public IdentificationType Last { get {return new IdentificationType(owner.GetElementLast(info));} }
			public IdentificationType Append(){return new IdentificationType(owner.CreateElement(info));}
			public IdentificationType AppendWithPrefix(string prefix) {return new IdentificationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new IdentificationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyActivation KeyActivation;
		public class MemberElement_KeyActivation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyActivation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyActivationType this [int i] { get { return At(i);} } 
			public KeyActivationType At(int index) {return new KeyActivationType(owner.GetElementAt(info, index));}
			public KeyActivationType First { get  {return new KeyActivationType(owner.GetElementFirst(info));} }
			public KeyActivationType Last { get {return new KeyActivationType(owner.GetElementLast(info));} }
			public KeyActivationType Append(){return new KeyActivationType(owner.CreateElement(info));}
			public KeyActivationType AppendWithPrefix(string prefix) {return new KeyActivationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyActivationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeySharing KeySharing;
		public class MemberElement_KeySharing : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeySharing (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeySharingType this [int i] { get { return At(i);} } 
			public KeySharingType At(int index) {return new KeySharingType(owner.GetElementAt(info, index));}
			public KeySharingType First { get  {return new KeySharingType(owner.GetElementFirst(info));} }
			public KeySharingType Last { get {return new KeySharingType(owner.GetElementLast(info));} }
			public KeySharingType Append(){return new KeySharingType(owner.CreateElement(info));}
			public KeySharingType AppendWithPrefix(string prefix) {return new KeySharingType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeySharingType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyStorage KeyStorage;
		public class MemberElement_KeyStorage : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyStorage (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public KeyStorageType this [int i] { get { return At(i);} } 
			public KeyStorageType At(int index) {return new KeyStorageType(owner.GetElementAt(info, index));}
			public KeyStorageType First { get  {return new KeyStorageType(owner.GetElementFirst(info));} }
			public KeyStorageType Last { get {return new KeyStorageType(owner.GetElementLast(info));} }
			public KeyStorageType Append(){return new KeyStorageType(owner.CreateElement(info));}
			public KeyStorageType AppendWithPrefix(string prefix) {return new KeyStorageType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new KeyStorageType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Length Length;
		public class MemberElement_Length : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Length (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public LengthType this [int i] { get { return At(i);} } 
			public LengthType At(int index) {return new LengthType(owner.GetElementAt(info, index));}
			public LengthType First { get  {return new LengthType(owner.GetElementFirst(info));} }
			public LengthType Last { get {return new LengthType(owner.GetElementLast(info));} }
			public LengthType Append(){return new LengthType(owner.CreateElement(info));}
			public LengthType AppendWithPrefix(string prefix) {return new LengthType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new LengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkEndToEndEncryption MobileNetworkEndToEndEncryption;
		public class MemberElement_MobileNetworkEndToEndEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkEndToEndEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkNoEncryption MobileNetworkNoEncryption;
		public class MemberElement_MobileNetworkNoEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkNoEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MobileNetworkRadioEncryption MobileNetworkRadioEncryption;
		public class MemberElement_MobileNetworkRadioEncryption : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MobileNetworkRadioEncryption (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OperationalProtection OperationalProtection;
		public class MemberElement_OperationalProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OperationalProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OperationalProtectionType this [int i] { get { return At(i);} } 
			public OperationalProtectionType At(int index) {return new OperationalProtectionType(owner.GetElementAt(info, index));}
			public OperationalProtectionType First { get  {return new OperationalProtectionType(owner.GetElementFirst(info));} }
			public OperationalProtectionType Last { get {return new OperationalProtectionType(owner.GetElementLast(info));} }
			public OperationalProtectionType Append(){return new OperationalProtectionType(owner.CreateElement(info));}
			public OperationalProtectionType AppendWithPrefix(string prefix) {return new OperationalProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OperationalProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PSTN PSTN;
		public class MemberElement_PSTN : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PSTN (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Password Password;
		public class MemberElement_Password : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Password (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PasswordType this [int i] { get { return At(i);} } 
			public PasswordType At(int index) {return new PasswordType(owner.GetElementAt(info, index));}
			public PasswordType First { get  {return new PasswordType(owner.GetElementFirst(info));} }
			public PasswordType Last { get {return new PasswordType(owner.GetElementLast(info));} }
			public PasswordType Append(){return new PasswordType(owner.CreateElement(info));}
			public PasswordType AppendWithPrefix(string prefix) {return new PasswordType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PasswordType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PhysicalVerification PhysicalVerification;
		public class MemberElement_PhysicalVerification : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PhysicalVerification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PhysicalVerificationType this [int i] { get { return At(i);} } 
			public PhysicalVerificationType At(int index) {return new PhysicalVerificationType(owner.GetElementAt(info, index));}
			public PhysicalVerificationType First { get  {return new PhysicalVerificationType(owner.GetElementFirst(info));} }
			public PhysicalVerificationType Last { get {return new PhysicalVerificationType(owner.GetElementLast(info));} }
			public PhysicalVerificationType Append(){return new PhysicalVerificationType(owner.CreateElement(info));}
			public PhysicalVerificationType AppendWithPrefix(string prefix) {return new PhysicalVerificationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PhysicalVerificationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PreviousSession PreviousSession;
		public class MemberElement_PreviousSession : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PreviousSession (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PrincipalAuthenticationMechanism PrincipalAuthenticationMechanism;
		public class MemberElement_PrincipalAuthenticationMechanism : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PrincipalAuthenticationMechanism (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PrincipalAuthenticationMechanismType this [int i] { get { return At(i);} } 
			public PrincipalAuthenticationMechanismType At(int index) {return new PrincipalAuthenticationMechanismType(owner.GetElementAt(info, index));}
			public PrincipalAuthenticationMechanismType First { get  {return new PrincipalAuthenticationMechanismType(owner.GetElementFirst(info));} }
			public PrincipalAuthenticationMechanismType Last { get {return new PrincipalAuthenticationMechanismType(owner.GetElementLast(info));} }
			public PrincipalAuthenticationMechanismType Append(){return new PrincipalAuthenticationMechanismType(owner.CreateElement(info));}
			public PrincipalAuthenticationMechanismType AppendWithPrefix(string prefix) {return new PrincipalAuthenticationMechanismType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PrincipalAuthenticationMechanismType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PrivateKeyProtection PrivateKeyProtection;
		public class MemberElement_PrivateKeyProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PrivateKeyProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public PrivateKeyProtectionType this [int i] { get { return At(i);} } 
			public PrivateKeyProtectionType At(int index) {return new PrivateKeyProtectionType(owner.GetElementAt(info, index));}
			public PrivateKeyProtectionType First { get  {return new PrivateKeyProtectionType(owner.GetElementFirst(info));} }
			public PrivateKeyProtectionType Last { get {return new PrivateKeyProtectionType(owner.GetElementLast(info));} }
			public PrivateKeyProtectionType Append(){return new PrivateKeyProtectionType(owner.CreateElement(info));}
			public PrivateKeyProtectionType AppendWithPrefix(string prefix) {return new PrivateKeyProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new PrivateKeyProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RestrictedPassword RestrictedPassword;
		public class MemberElement_RestrictedPassword : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RestrictedPassword (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public RestrictedPasswordType this [int i] { get { return At(i);} } 
			public RestrictedPasswordType At(int index) {return new RestrictedPasswordType(owner.GetElementAt(info, index));}
			public RestrictedPasswordType First { get  {return new RestrictedPasswordType(owner.GetElementFirst(info));} }
			public RestrictedPasswordType Last { get {return new RestrictedPasswordType(owner.GetElementLast(info));} }
			public RestrictedPasswordType Append(){return new RestrictedPasswordType(owner.CreateElement(info));}
			public RestrictedPasswordType AppendWithPrefix(string prefix) {return new RestrictedPasswordType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new RestrictedPasswordType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ResumeSession ResumeSession;
		public class MemberElement_ResumeSession : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ResumeSession (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SSL SSL;
		public class MemberElement_SSL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SSL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SecretKeyProtection SecretKeyProtection;
		public class MemberElement_SecretKeyProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SecretKeyProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SecretKeyProtectionType this [int i] { get { return At(i);} } 
			public SecretKeyProtectionType At(int index) {return new SecretKeyProtectionType(owner.GetElementAt(info, index));}
			public SecretKeyProtectionType First { get  {return new SecretKeyProtectionType(owner.GetElementFirst(info));} }
			public SecretKeyProtectionType Last { get {return new SecretKeyProtectionType(owner.GetElementLast(info));} }
			public SecretKeyProtectionType Append(){return new SecretKeyProtectionType(owner.CreateElement(info));}
			public SecretKeyProtectionType AppendWithPrefix(string prefix) {return new SecretKeyProtectionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SecretKeyProtectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SecurityAudit SecurityAudit;
		public class MemberElement_SecurityAudit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SecurityAudit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SecurityAuditType this [int i] { get { return At(i);} } 
			public SecurityAuditType At(int index) {return new SecurityAuditType(owner.GetElementAt(info, index));}
			public SecurityAuditType First { get  {return new SecurityAuditType(owner.GetElementFirst(info));} }
			public SecurityAuditType Last { get {return new SecurityAuditType(owner.GetElementLast(info));} }
			public SecurityAuditType Append(){return new SecurityAuditType(owner.CreateElement(info));}
			public SecurityAuditType AppendWithPrefix(string prefix) {return new SecurityAuditType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SecurityAuditType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SharedSecretChallengeResponse SharedSecretChallengeResponse;
		public class MemberElement_SharedSecretChallengeResponse : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretChallengeResponse (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SharedSecretChallengeResponseType this [int i] { get { return At(i);} } 
			public SharedSecretChallengeResponseType At(int index) {return new SharedSecretChallengeResponseType(owner.GetElementAt(info, index));}
			public SharedSecretChallengeResponseType First { get  {return new SharedSecretChallengeResponseType(owner.GetElementFirst(info));} }
			public SharedSecretChallengeResponseType Last { get {return new SharedSecretChallengeResponseType(owner.GetElementLast(info));} }
			public SharedSecretChallengeResponseType Append(){return new SharedSecretChallengeResponseType(owner.CreateElement(info));}
			public SharedSecretChallengeResponseType AppendWithPrefix(string prefix) {return new SharedSecretChallengeResponseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SharedSecretChallengeResponseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SharedSecretDynamicPlaintext SharedSecretDynamicPlaintext;
		public class MemberElement_SharedSecretDynamicPlaintext : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SharedSecretDynamicPlaintext (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Smartcard Smartcard;
		public class MemberElement_Smartcard : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Smartcard (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubscriberLineNumber SubscriberLineNumber;
		public class MemberElement_SubscriberLineNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubscriberLineNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SwitchAudit SwitchAudit;
		public class MemberElement_SwitchAudit : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SwitchAudit (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TechnicalProtection TechnicalProtection;
		public class MemberElement_TechnicalProtection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TechnicalProtection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TechnicalProtectionBaseType this [int i] { get { return At(i);} } 
			public TechnicalProtectionBaseType At(int index) {return new TechnicalProtectionBaseType(owner.GetElementAt(info, index));}
			public TechnicalProtectionBaseType First { get  {return new TechnicalProtectionBaseType(owner.GetElementFirst(info));} }
			public TechnicalProtectionBaseType Last { get {return new TechnicalProtectionBaseType(owner.GetElementLast(info));} }
			public TechnicalProtectionBaseType Append(){return new TechnicalProtectionBaseType(owner.CreateElement(info));}
			public TechnicalProtectionBaseType AppendWithPrefix(string prefix) {return new TechnicalProtectionBaseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TechnicalProtectionBaseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TimeSyncToken TimeSyncToken;
		public class MemberElement_TimeSyncToken : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TimeSyncToken (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TimeSyncTokenType this [int i] { get { return At(i);} } 
			public TimeSyncTokenType At(int index) {return new TimeSyncTokenType(owner.GetElementAt(info, index));}
			public TimeSyncTokenType First { get  {return new TimeSyncTokenType(owner.GetElementFirst(info));} }
			public TimeSyncTokenType Last { get {return new TimeSyncTokenType(owner.GetElementLast(info));} }
			public TimeSyncTokenType Append(){return new TimeSyncTokenType(owner.CreateElement(info));}
			public TimeSyncTokenType AppendWithPrefix(string prefix) {return new TimeSyncTokenType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TimeSyncTokenType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Token Token;
		public class MemberElement_Token : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Token (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TokenType this [int i] { get { return At(i);} } 
			public TokenType At(int index) {return new TokenType(owner.GetElementAt(info, index));}
			public TokenType First { get  {return new TokenType(owner.GetElementFirst(info));} }
			public TokenType Last { get {return new TokenType(owner.GetElementLast(info));} }
			public TokenType Append(){return new TokenType(owner.CreateElement(info));}
			public TokenType AppendWithPrefix(string prefix) {return new TokenType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TokenType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_UserSuffix UserSuffix;
		public class MemberElement_UserSuffix : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_UserSuffix (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_WTLS WTLS;
		public class MemberElement_WTLS : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_WTLS (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_WrittenConsent WrittenConsent;
		public class MemberElement_WrittenConsent : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_WrittenConsent (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ZeroKnowledge ZeroKnowledge;
		public class MemberElement_ZeroKnowledge : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ZeroKnowledge (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExtensionOnlyType this [int i] { get { return At(i);} } 
			public ExtensionOnlyType At(int index) {return new ExtensionOnlyType(owner.GetElementAt(info, index));}
			public ExtensionOnlyType First { get  {return new ExtensionOnlyType(owner.GetElementFirst(info));} }
			public ExtensionOnlyType Last { get {return new ExtensionOnlyType(owner.GetElementLast(info));} }
			public ExtensionOnlyType Append(){return new ExtensionOnlyType(owner.CreateElement(info));}
			public ExtensionOnlyType AppendWithPrefix(string prefix) {return new ExtensionOnlyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExtensionOnlyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("saml-schema-authn-context-mobiletwofactor-reg-2.0", "urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract")); 				
		}
		
	} // class saml_schema_authn_context_mobiletwofactor_reg_2_02

	public class GenerationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_GenerationType]); }}


		public GenerationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			mechanism = new MemberAttribute_mechanism (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_GenerationType_altova_mechanism]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new GenerationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_mechanism mechanism;
		public class MemberAttribute_mechanism
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_mechanism (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public mechanismType.EnumValues EnumerationValue
			{
				get
				{			
					return (mechanismType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
		
	} // class GenerationType

	public class mechanismType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_mechanismType]); }}


		public enum EnumValues
		{
			eprincipalchosen = 0, // principalchosen
			eautomatic = 1, // automatic
			Invalid = -1, // Invalid value
		};

		public mechanismType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class mechanismType

	public class PhysicalVerificationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_PhysicalVerificationType]); }}


		public PhysicalVerificationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			credentialLevel = new MemberAttribute_credentialLevel (this, saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Members[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_mi_altova_PhysicalVerificationType_altova_credentialLevel]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PhysicalVerificationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_credentialLevel credentialLevel;
		public class MemberAttribute_credentialLevel
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_credentialLevel (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public credentialLevelType.EnumValues EnumerationValue
			{
				get
				{			
					return (credentialLevelType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
		
	} // class PhysicalVerificationType

	public class credentialLevelType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_credentialLevelType]); }}


		public enum EnumValues
		{
			eprimary = 0, // primary
			esecondary = 1, // secondary
			Invalid = -1, // Invalid value
		};

		public credentialLevelType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class credentialLevelType

	public class nymType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_nymType2]); }}


		public enum EnumValues
		{
			eanonymity = 0, // anonymity
			everinymity = 1, // verinymity
			epseudonymity = 2, // pseudonymity
			Invalid = -1, // Invalid value
		};

		public nymType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nymType2

	public class mediumType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_mediumType2]); }}


		public enum EnumValues
		{
			eMobileDevice = 0, // MobileDevice
			eMobileAuthCard = 1, // MobileAuthCard
			esmartcard = 2, // smartcard
			Invalid = -1, // Invalid value
		};

		public mediumType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class mediumType2

	public class minType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo.binder.Types[saml_schema_authn_context_mobiletwofactor_reg_2_0_TypeInfo._altova_ti_altova_minType]); }}


		public minType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class minType


}
