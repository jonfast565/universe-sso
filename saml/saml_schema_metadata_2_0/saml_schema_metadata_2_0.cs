////////////////////////////////////////////////////////////////////////
//
// saml_schema_metadata_2_0.cs
//
// This file was generated by XMLSpy 2020r2sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace saml_schema_metadata_2_0
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}



namespace ds
{	
	public class CanonicalizationMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_CanonicalizationMethodType]); }}


		public CanonicalizationMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_CanonicalizationMethodType_altova_Algorithm]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new CanonicalizationMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_CanonicalizationMethodType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_CanonicalizationMethodType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("CanonicalizationMethodType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class CanonicalizationMethodType

	public class CryptoBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_CryptoBinary]); }}


		public CryptoBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class CryptoBinary

	public class DSAKeyValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_DSAKeyValueType]); }}


		public DSAKeyValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			P = new MemberElement_P (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_P]);
			Q = new MemberElement_Q (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_Q]);
			G = new MemberElement_G (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_G]);
			Y = new MemberElement_Y (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_Y]);
			J = new MemberElement_J (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_J]);
			Seed = new MemberElement_Seed (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_Seed]);
			PgenCounter = new MemberElement_PgenCounter (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DSAKeyValueType_altova_PgenCounter]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DSAKeyValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_P P;
		public class MemberElement_P : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_P (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Q Q;
		public class MemberElement_Q : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Q (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_G G;
		public class MemberElement_G : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_G (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Y Y;
		public class MemberElement_Y : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Y (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_J J;
		public class MemberElement_J : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_J (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Seed Seed;
		public class MemberElement_Seed : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Seed (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PgenCounter PgenCounter;
		public class MemberElement_PgenCounter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PgenCounter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DSAKeyValueType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class DSAKeyValueType

	public class DigestMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_DigestMethodType]); }}


		public DigestMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DigestMethodType_altova_Algorithm]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DigestMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DigestMethodType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DigestMethodType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DigestMethodType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class DigestMethodType

	public class DigestValueType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_DigestValueType]); }}


		public DigestValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class DigestValueType

	public class HMACOutputLengthType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_HMACOutputLengthType]); }}


		public HMACOutputLengthType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class HMACOutputLengthType

	public class KeyInfoType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_KeyInfoType]); }}


		public KeyInfoType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_Id]);

			KeyName = new MemberElement_KeyName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_KeyName]);
			KeyValue = new MemberElement_KeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_KeyValue]);
			RetrievalMethod = new MemberElement_RetrievalMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_RetrievalMethod]);
			X509Data = new MemberElement_X509Data (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_X509Data]);
			PGPData = new MemberElement_PGPData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_PGPData]);
			SPKIData = new MemberElement_SPKIData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_SPKIData]);
			MgmtData = new MemberElement_MgmtData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_MgmtData]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyInfoType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyInfoType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_KeyName KeyName;
		public class MemberElement_KeyName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyValue KeyValue;
		public class MemberElement_KeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyValueType this [int i] { get { return At(i);} } 
			public ds.KeyValueType At(int index) {return new ds.KeyValueType(owner.GetElementAt(info, index));}
			public ds.KeyValueType First { get  {return new ds.KeyValueType(owner.GetElementFirst(info));} }
			public ds.KeyValueType Last { get {return new ds.KeyValueType(owner.GetElementLast(info));} }
			public ds.KeyValueType Append(){return new ds.KeyValueType(owner.CreateElement(info));}
			public ds.KeyValueType AppendWithPrefix(string prefix) {return new ds.KeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RetrievalMethod RetrievalMethod;
		public class MemberElement_RetrievalMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RetrievalMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.RetrievalMethodType this [int i] { get { return At(i);} } 
			public ds.RetrievalMethodType At(int index) {return new ds.RetrievalMethodType(owner.GetElementAt(info, index));}
			public ds.RetrievalMethodType First { get  {return new ds.RetrievalMethodType(owner.GetElementFirst(info));} }
			public ds.RetrievalMethodType Last { get {return new ds.RetrievalMethodType(owner.GetElementLast(info));} }
			public ds.RetrievalMethodType Append(){return new ds.RetrievalMethodType(owner.CreateElement(info));}
			public ds.RetrievalMethodType AppendWithPrefix(string prefix) {return new ds.RetrievalMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.RetrievalMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509Data X509Data;
		public class MemberElement_X509Data : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509Data (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.X509DataType this [int i] { get { return At(i);} } 
			public ds.X509DataType At(int index) {return new ds.X509DataType(owner.GetElementAt(info, index));}
			public ds.X509DataType First { get  {return new ds.X509DataType(owner.GetElementFirst(info));} }
			public ds.X509DataType Last { get {return new ds.X509DataType(owner.GetElementLast(info));} }
			public ds.X509DataType Append(){return new ds.X509DataType(owner.CreateElement(info));}
			public ds.X509DataType AppendWithPrefix(string prefix) {return new ds.X509DataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.X509DataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PGPData PGPData;
		public class MemberElement_PGPData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PGPData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.PGPDataType this [int i] { get { return At(i);} } 
			public ds.PGPDataType At(int index) {return new ds.PGPDataType(owner.GetElementAt(info, index));}
			public ds.PGPDataType First { get  {return new ds.PGPDataType(owner.GetElementFirst(info));} }
			public ds.PGPDataType Last { get {return new ds.PGPDataType(owner.GetElementLast(info));} }
			public ds.PGPDataType Append(){return new ds.PGPDataType(owner.CreateElement(info));}
			public ds.PGPDataType AppendWithPrefix(string prefix) {return new ds.PGPDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.PGPDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SPKIData SPKIData;
		public class MemberElement_SPKIData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SPKIData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SPKIDataType this [int i] { get { return At(i);} } 
			public ds.SPKIDataType At(int index) {return new ds.SPKIDataType(owner.GetElementAt(info, index));}
			public ds.SPKIDataType First { get  {return new ds.SPKIDataType(owner.GetElementFirst(info));} }
			public ds.SPKIDataType Last { get {return new ds.SPKIDataType(owner.GetElementLast(info));} }
			public ds.SPKIDataType Append(){return new ds.SPKIDataType(owner.CreateElement(info));}
			public ds.SPKIDataType AppendWithPrefix(string prefix) {return new ds.SPKIDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SPKIDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MgmtData MgmtData;
		public class MemberElement_MgmtData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MgmtData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyInfoType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class KeyInfoType

	public class KeyValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_KeyValueType]); }}


		public KeyValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			DSAKeyValue = new MemberElement_DSAKeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyValueType_altova_DSAKeyValue]);
			RSAKeyValue = new MemberElement_RSAKeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyValueType_altova_RSAKeyValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyValueType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_KeyValueType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_DSAKeyValue DSAKeyValue;
		public class MemberElement_DSAKeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DSAKeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DSAKeyValueType this [int i] { get { return At(i);} } 
			public ds.DSAKeyValueType At(int index) {return new ds.DSAKeyValueType(owner.GetElementAt(info, index));}
			public ds.DSAKeyValueType First { get  {return new ds.DSAKeyValueType(owner.GetElementFirst(info));} }
			public ds.DSAKeyValueType Last { get {return new ds.DSAKeyValueType(owner.GetElementLast(info));} }
			public ds.DSAKeyValueType Append(){return new ds.DSAKeyValueType(owner.CreateElement(info));}
			public ds.DSAKeyValueType AppendWithPrefix(string prefix) {return new ds.DSAKeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DSAKeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RSAKeyValue RSAKeyValue;
		public class MemberElement_RSAKeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RSAKeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.RSAKeyValueType this [int i] { get { return At(i);} } 
			public ds.RSAKeyValueType At(int index) {return new ds.RSAKeyValueType(owner.GetElementAt(info, index));}
			public ds.RSAKeyValueType First { get  {return new ds.RSAKeyValueType(owner.GetElementFirst(info));} }
			public ds.RSAKeyValueType Last { get {return new ds.RSAKeyValueType(owner.GetElementLast(info));} }
			public ds.RSAKeyValueType Append(){return new ds.RSAKeyValueType(owner.CreateElement(info));}
			public ds.RSAKeyValueType AppendWithPrefix(string prefix) {return new ds.RSAKeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.RSAKeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyValueType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class KeyValueType

	public class ManifestType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_ManifestType]); }}


		public ManifestType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ManifestType_altova_Id]);

			Reference = new MemberElement_Reference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ManifestType_altova_Reference]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ManifestType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Reference Reference;
		public class MemberElement_Reference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Reference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ReferenceType this [int i] { get { return At(i);} } 
			public ds.ReferenceType At(int index) {return new ds.ReferenceType(owner.GetElementAt(info, index));}
			public ds.ReferenceType First { get  {return new ds.ReferenceType(owner.GetElementFirst(info));} }
			public ds.ReferenceType Last { get {return new ds.ReferenceType(owner.GetElementLast(info));} }
			public ds.ReferenceType Append(){return new ds.ReferenceType(owner.CreateElement(info));}
			public ds.ReferenceType AppendWithPrefix(string prefix) {return new ds.ReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ManifestType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class ManifestType

	public class ObjectType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_ObjectType]); }}


		public ObjectType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ObjectType_altova_Id]);
			MimeType = new MemberAttribute_MimeType (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ObjectType_altova_MimeType]);
			Encoding = new MemberAttribute_Encoding (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ObjectType_altova_Encoding]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ObjectType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_MimeType MimeType;
		public class MemberAttribute_MimeType
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_MimeType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Encoding Encoding;
		public class MemberAttribute_Encoding
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Encoding (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ObjectType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ObjectType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ObjectType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class ObjectType

	public class PGPDataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_PGPDataType]); }}


		public PGPDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			PGPKeyID = new MemberElement_PGPKeyID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_PGPDataType_altova_PGPKeyID]);
			PGPKeyPacket = new MemberElement_PGPKeyPacket (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_PGPDataType_altova_PGPKeyPacket]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PGPDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_PGPKeyID PGPKeyID;
		public class MemberElement_PGPKeyID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PGPKeyID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PGPKeyPacket PGPKeyPacket;
		public class MemberElement_PGPKeyPacket : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PGPKeyPacket (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PGPDataType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class PGPDataType

	public class RSAKeyValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_RSAKeyValueType]); }}


		public RSAKeyValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Modulus = new MemberElement_Modulus (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_RSAKeyValueType_altova_Modulus]);
			Exponent = new MemberElement_Exponent (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_RSAKeyValueType_altova_Exponent]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RSAKeyValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Modulus Modulus;
		public class MemberElement_Modulus : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Modulus (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Exponent Exponent;
		public class MemberElement_Exponent : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Exponent (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CryptoBinaryType this [int i] { get { return At(i);} } 
			public ds.CryptoBinaryType At(int index) {return new ds.CryptoBinaryType(owner.GetElementAt(info, index));}
			public ds.CryptoBinaryType First { get  {return new ds.CryptoBinaryType(owner.GetElementFirst(info));} }
			public ds.CryptoBinaryType Last { get {return new ds.CryptoBinaryType(owner.GetElementLast(info));} }
			public ds.CryptoBinaryType Append(){return new ds.CryptoBinaryType(owner.CreateElement(info));}
			public ds.CryptoBinaryType AppendWithPrefix(string prefix) {return new ds.CryptoBinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CryptoBinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RSAKeyValueType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class RSAKeyValueType

	public class ReferenceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_ReferenceType]); }}


		public ReferenceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_Id]);
			URI = new MemberAttribute_URI (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_URI]);
			Type2 = new MemberAttribute_Type2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_Type2]);

			Transforms = new MemberElement_Transforms (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_Transforms]);
			DigestMethod = new MemberElement_DigestMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_DigestMethod]);
			DigestValue = new MemberElement_DigestValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_ReferenceType_altova_DigestValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ReferenceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_URI URI;
		public class MemberAttribute_URI
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_URI (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Type2 Type2;
		public class MemberAttribute_Type2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Transforms Transforms;
		public class MemberElement_Transforms : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transforms (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformsType this [int i] { get { return At(i);} } 
			public ds.TransformsType At(int index) {return new ds.TransformsType(owner.GetElementAt(info, index));}
			public ds.TransformsType First { get  {return new ds.TransformsType(owner.GetElementFirst(info));} }
			public ds.TransformsType Last { get {return new ds.TransformsType(owner.GetElementLast(info));} }
			public ds.TransformsType Append(){return new ds.TransformsType(owner.CreateElement(info));}
			public ds.TransformsType AppendWithPrefix(string prefix) {return new ds.TransformsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DigestMethod DigestMethod;
		public class MemberElement_DigestMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigestMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DigestMethodType this [int i] { get { return At(i);} } 
			public ds.DigestMethodType At(int index) {return new ds.DigestMethodType(owner.GetElementAt(info, index));}
			public ds.DigestMethodType First { get  {return new ds.DigestMethodType(owner.GetElementFirst(info));} }
			public ds.DigestMethodType Last { get {return new ds.DigestMethodType(owner.GetElementLast(info));} }
			public ds.DigestMethodType Append(){return new ds.DigestMethodType(owner.CreateElement(info));}
			public ds.DigestMethodType AppendWithPrefix(string prefix) {return new ds.DigestMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DigestMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DigestValue DigestValue;
		public class MemberElement_DigestValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigestValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DigestValueTypeType this [int i] { get { return At(i);} } 
			public ds.DigestValueTypeType At(int index) {return new ds.DigestValueTypeType(owner.GetElementAt(info, index));}
			public ds.DigestValueTypeType First { get  {return new ds.DigestValueTypeType(owner.GetElementFirst(info));} }
			public ds.DigestValueTypeType Last { get {return new ds.DigestValueTypeType(owner.GetElementLast(info));} }
			public ds.DigestValueTypeType Append(){return new ds.DigestValueTypeType(owner.CreateElement(info));}
			public ds.DigestValueTypeType AppendWithPrefix(string prefix) {return new ds.DigestValueTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DigestValueTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ReferenceType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class ReferenceType

	public class RetrievalMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_RetrievalMethodType]); }}


		public RetrievalMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			URI = new MemberAttribute_URI (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_RetrievalMethodType_altova_URI]);
			Type2 = new MemberAttribute_Type2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_RetrievalMethodType_altova_Type2]);

			Transforms = new MemberElement_Transforms (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_RetrievalMethodType_altova_Transforms]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RetrievalMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_URI URI;
		public class MemberAttribute_URI
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_URI (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Type2 Type2;
		public class MemberAttribute_Type2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Transforms Transforms;
		public class MemberElement_Transforms : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transforms (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformsType this [int i] { get { return At(i);} } 
			public ds.TransformsType At(int index) {return new ds.TransformsType(owner.GetElementAt(info, index));}
			public ds.TransformsType First { get  {return new ds.TransformsType(owner.GetElementFirst(info));} }
			public ds.TransformsType Last { get {return new ds.TransformsType(owner.GetElementLast(info));} }
			public ds.TransformsType Append(){return new ds.TransformsType(owner.CreateElement(info));}
			public ds.TransformsType AppendWithPrefix(string prefix) {return new ds.TransformsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RetrievalMethodType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class RetrievalMethodType

	public class SPKIDataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SPKIDataType]); }}


		public SPKIDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			SPKISexp = new MemberElement_SPKISexp (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SPKIDataType_altova_SPKISexp]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SPKIDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_SPKISexp SPKISexp;
		public class MemberElement_SPKISexp : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SPKISexp (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SPKIDataType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SPKIDataType

	public class SignatureMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignatureMethodType]); }}


		public SignatureMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureMethodType_altova_Algorithm]);

			HMACOutputLength = new MemberElement_HMACOutputLength (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureMethodType_altova_HMACOutputLength]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignatureMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureMethodType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureMethodType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_HMACOutputLength HMACOutputLength;
		public class MemberElement_HMACOutputLength : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_HMACOutputLength (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.HMACOutputLengthTypeType this [int i] { get { return At(i);} } 
			public ds.HMACOutputLengthTypeType At(int index) {return new ds.HMACOutputLengthTypeType(owner.GetElementAt(info, index));}
			public ds.HMACOutputLengthTypeType First { get  {return new ds.HMACOutputLengthTypeType(owner.GetElementFirst(info));} }
			public ds.HMACOutputLengthTypeType Last { get {return new ds.HMACOutputLengthTypeType(owner.GetElementLast(info));} }
			public ds.HMACOutputLengthTypeType Append(){return new ds.HMACOutputLengthTypeType(owner.CreateElement(info));}
			public ds.HMACOutputLengthTypeType AppendWithPrefix(string prefix) {return new ds.HMACOutputLengthTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.HMACOutputLengthTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignatureMethodType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignatureMethodType

	public class SignaturePropertiesType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignaturePropertiesType]); }}


		public SignaturePropertiesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertiesType_altova_Id]);

			SignatureProperty = new MemberElement_SignatureProperty (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertiesType_altova_SignatureProperty]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignaturePropertiesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_SignatureProperty SignatureProperty;
		public class MemberElement_SignatureProperty : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureProperty (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignaturePropertyType this [int i] { get { return At(i);} } 
			public ds.SignaturePropertyType At(int index) {return new ds.SignaturePropertyType(owner.GetElementAt(info, index));}
			public ds.SignaturePropertyType First { get  {return new ds.SignaturePropertyType(owner.GetElementFirst(info));} }
			public ds.SignaturePropertyType Last { get {return new ds.SignaturePropertyType(owner.GetElementLast(info));} }
			public ds.SignaturePropertyType Append(){return new ds.SignaturePropertyType(owner.CreateElement(info));}
			public ds.SignaturePropertyType AppendWithPrefix(string prefix) {return new ds.SignaturePropertyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignaturePropertyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignaturePropertiesType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignaturePropertiesType

	public class SignaturePropertyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignaturePropertyType]); }}


		public SignaturePropertyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Target = new MemberAttribute_Target (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertyType_altova_Target]);
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertyType_altova_Id]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignaturePropertyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Target Target;
		public class MemberAttribute_Target
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Target (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignaturePropertyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignaturePropertyType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignaturePropertyType

	public class SignatureType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignatureType]); }}


		public SignatureType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureType_altova_Id]);

			SignedInfo = new MemberElement_SignedInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureType_altova_SignedInfo]);
			SignatureValue = new MemberElement_SignatureValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureType_altova_SignatureValue]);
			KeyInfo = new MemberElement_KeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureType_altova_KeyInfo]);
			Object2 = new MemberElement_Object2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureType_altova_Object2]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignatureType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_SignedInfo SignedInfo;
		public class MemberElement_SignedInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignedInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignedInfoType this [int i] { get { return At(i);} } 
			public ds.SignedInfoType At(int index) {return new ds.SignedInfoType(owner.GetElementAt(info, index));}
			public ds.SignedInfoType First { get  {return new ds.SignedInfoType(owner.GetElementFirst(info));} }
			public ds.SignedInfoType Last { get {return new ds.SignedInfoType(owner.GetElementLast(info));} }
			public ds.SignedInfoType Append(){return new ds.SignedInfoType(owner.CreateElement(info));}
			public ds.SignedInfoType AppendWithPrefix(string prefix) {return new ds.SignedInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignedInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureValue SignatureValue;
		public class MemberElement_SignatureValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureValueType this [int i] { get { return At(i);} } 
			public ds.SignatureValueType At(int index) {return new ds.SignatureValueType(owner.GetElementAt(info, index));}
			public ds.SignatureValueType First { get  {return new ds.SignatureValueType(owner.GetElementFirst(info));} }
			public ds.SignatureValueType Last { get {return new ds.SignatureValueType(owner.GetElementLast(info));} }
			public ds.SignatureValueType Append(){return new ds.SignatureValueType(owner.CreateElement(info));}
			public ds.SignatureValueType AppendWithPrefix(string prefix) {return new ds.SignatureValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyInfo KeyInfo;
		public class MemberElement_KeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Object2 Object2;
		public class MemberElement_Object2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Object2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ObjectType this [int i] { get { return At(i);} } 
			public ds.ObjectType At(int index) {return new ds.ObjectType(owner.GetElementAt(info, index));}
			public ds.ObjectType First { get  {return new ds.ObjectType(owner.GetElementFirst(info));} }
			public ds.ObjectType Last { get {return new ds.ObjectType(owner.GetElementLast(info));} }
			public ds.ObjectType Append(){return new ds.ObjectType(owner.CreateElement(info));}
			public ds.ObjectType AppendWithPrefix(string prefix) {return new ds.ObjectType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ObjectType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignatureType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignatureType

	public class SignatureValueType : xs.base64BinaryType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignatureValueType]); }}


		public SignatureValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignatureValueType_altova_Id]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignatureValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignatureValueType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignatureValueType

	public class SignedInfoType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_SignedInfoType]); }}


		public SignedInfoType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignedInfoType_altova_Id]);

			CanonicalizationMethod = new MemberElement_CanonicalizationMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignedInfoType_altova_CanonicalizationMethod]);
			SignatureMethod = new MemberElement_SignatureMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignedInfoType_altova_SignatureMethod]);
			Reference = new MemberElement_Reference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_SignedInfoType_altova_Reference]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SignedInfoType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_CanonicalizationMethod CanonicalizationMethod;
		public class MemberElement_CanonicalizationMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CanonicalizationMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CanonicalizationMethodType this [int i] { get { return At(i);} } 
			public ds.CanonicalizationMethodType At(int index) {return new ds.CanonicalizationMethodType(owner.GetElementAt(info, index));}
			public ds.CanonicalizationMethodType First { get  {return new ds.CanonicalizationMethodType(owner.GetElementFirst(info));} }
			public ds.CanonicalizationMethodType Last { get {return new ds.CanonicalizationMethodType(owner.GetElementLast(info));} }
			public ds.CanonicalizationMethodType Append(){return new ds.CanonicalizationMethodType(owner.CreateElement(info));}
			public ds.CanonicalizationMethodType AppendWithPrefix(string prefix) {return new ds.CanonicalizationMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CanonicalizationMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureMethod SignatureMethod;
		public class MemberElement_SignatureMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureMethodType this [int i] { get { return At(i);} } 
			public ds.SignatureMethodType At(int index) {return new ds.SignatureMethodType(owner.GetElementAt(info, index));}
			public ds.SignatureMethodType First { get  {return new ds.SignatureMethodType(owner.GetElementFirst(info));} }
			public ds.SignatureMethodType Last { get {return new ds.SignatureMethodType(owner.GetElementLast(info));} }
			public ds.SignatureMethodType Append(){return new ds.SignatureMethodType(owner.CreateElement(info));}
			public ds.SignatureMethodType AppendWithPrefix(string prefix) {return new ds.SignatureMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Reference Reference;
		public class MemberElement_Reference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Reference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ReferenceType this [int i] { get { return At(i);} } 
			public ds.ReferenceType At(int index) {return new ds.ReferenceType(owner.GetElementAt(info, index));}
			public ds.ReferenceType First { get  {return new ds.ReferenceType(owner.GetElementFirst(info));} }
			public ds.ReferenceType Last { get {return new ds.ReferenceType(owner.GetElementLast(info));} }
			public ds.ReferenceType Append(){return new ds.ReferenceType(owner.CreateElement(info));}
			public ds.ReferenceType AppendWithPrefix(string prefix) {return new ds.ReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SignedInfoType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class SignedInfoType

	public class TransformType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_TransformType]); }}


		public TransformType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_TransformType_altova_Algorithm]);

			XPath = new MemberElement_XPath (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_TransformType_altova_XPath]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TransformType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_TransformType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_TransformType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_XPath XPath;
		public class MemberElement_XPath : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_XPath (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TransformType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class TransformType

	public class TransformsType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_TransformsType]); }}


		public TransformsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Transform = new MemberElement_Transform (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_TransformsType_altova_Transform]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TransformsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Transform Transform;
		public class MemberElement_Transform : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transform (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformType this [int i] { get { return At(i);} } 
			public ds.TransformType At(int index) {return new ds.TransformType(owner.GetElementAt(info, index));}
			public ds.TransformType First { get  {return new ds.TransformType(owner.GetElementFirst(info));} }
			public ds.TransformType Last { get {return new ds.TransformType(owner.GetElementLast(info));} }
			public ds.TransformType Append(){return new ds.TransformType(owner.CreateElement(info));}
			public ds.TransformType AppendWithPrefix(string prefix) {return new ds.TransformType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TransformsType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class TransformsType

	public class X509DataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_X509DataType]); }}


		public X509DataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			X509IssuerSerial = new MemberElement_X509IssuerSerial (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509DataType_altova_X509IssuerSerial]);
			X509SKI = new MemberElement_X509SKI (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509DataType_altova_X509SKI]);
			X509SubjectName = new MemberElement_X509SubjectName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509DataType_altova_X509SubjectName]);
			X509Certificate = new MemberElement_X509Certificate (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509DataType_altova_X509Certificate]);
			X509CRL = new MemberElement_X509CRL (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509DataType_altova_X509CRL]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new X509DataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_X509IssuerSerial X509IssuerSerial;
		public class MemberElement_X509IssuerSerial : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509IssuerSerial (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.X509IssuerSerialType this [int i] { get { return At(i);} } 
			public ds.X509IssuerSerialType At(int index) {return new ds.X509IssuerSerialType(owner.GetElementAt(info, index));}
			public ds.X509IssuerSerialType First { get  {return new ds.X509IssuerSerialType(owner.GetElementFirst(info));} }
			public ds.X509IssuerSerialType Last { get {return new ds.X509IssuerSerialType(owner.GetElementLast(info));} }
			public ds.X509IssuerSerialType Append(){return new ds.X509IssuerSerialType(owner.CreateElement(info));}
			public ds.X509IssuerSerialType AppendWithPrefix(string prefix) {return new ds.X509IssuerSerialType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.X509IssuerSerialType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509SKI X509SKI;
		public class MemberElement_X509SKI : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509SKI (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509SubjectName X509SubjectName;
		public class MemberElement_X509SubjectName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509SubjectName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509Certificate X509Certificate;
		public class MemberElement_X509Certificate : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509Certificate (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509CRL X509CRL;
		public class MemberElement_X509CRL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509CRL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("X509DataType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class X509DataType

	public class X509IssuerSerialType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_X509IssuerSerialType]); }}


		public X509IssuerSerialType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			X509IssuerName = new MemberElement_X509IssuerName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509IssuerSerialType_altova_X509IssuerName]);
			X509SerialNumber = new MemberElement_X509SerialNumber (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_X509IssuerSerialType_altova_X509SerialNumber]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new X509IssuerSerialType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_X509IssuerName X509IssuerName;
		public class MemberElement_X509IssuerName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509IssuerName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509SerialNumber X509SerialNumber;
		public class MemberElement_X509SerialNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509SerialNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.integerType this [int i] { get { return At(i);} } 
			public xs.integerType At(int index) {return new xs.integerType(owner.GetElementAt(info, index));}
			public xs.integerType First { get  {return new xs.integerType(owner.GetElementFirst(info));} }
			public xs.integerType Last { get {return new xs.integerType(owner.GetElementLast(info));} }
			public xs.integerType Append(){return new xs.integerType(owner.CreateElement(info));}
			public xs.integerType AppendWithPrefix(string prefix) {return new xs.integerType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.integerType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("X509IssuerSerialType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class X509IssuerSerialType

	public class DigestValueTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_DigestValueTypeType]); }}


		public DigestValueTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DigestValueTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public byte[] Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DigestValueTypeType_altova_unnamed];
				return (byte[])Altova.Xml.XmlTreeOperations.CastToBinary(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_DigestValueTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DigestValueType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class DigestValueTypeType

	public class CryptoBinaryType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_CryptoBinaryType]); }}


		public CryptoBinaryType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new CryptoBinaryType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public byte[] Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_CryptoBinaryType_altova_unnamed];
				return (byte[])Altova.Xml.XmlTreeOperations.CastToBinary(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_CryptoBinaryType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("CryptoBinary", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class CryptoBinaryType

	public class HMACOutputLengthTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_ds_altova_HMACOutputLengthTypeType]); }}


		public HMACOutputLengthTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new HMACOutputLengthTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public decimal Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_HMACOutputLengthTypeType_altova_unnamed];
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_ds_altova_HMACOutputLengthTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("HMACOutputLengthType", "http://www.w3.org/2000/09/xmldsig#")); 				
		}
		
	} // class HMACOutputLengthTypeType


} // namespace ds


namespace xenc
{	
	public class AgreementMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_AgreementMethodType]); }}


		public AgreementMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_Algorithm]);

			KA_Nonce = new MemberElement_KA_Nonce (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_KA_Nonce]);
			OriginatorKeyInfo = new MemberElement_OriginatorKeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_OriginatorKeyInfo]);
			RecipientKeyInfo = new MemberElement_RecipientKeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_RecipientKeyInfo]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AgreementMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_AgreementMethodType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_KA_Nonce KA_Nonce;
		public class MemberElement_KA_Nonce : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KA_Nonce (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OriginatorKeyInfo OriginatorKeyInfo;
		public class MemberElement_OriginatorKeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OriginatorKeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RecipientKeyInfo RecipientKeyInfo;
		public class MemberElement_RecipientKeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RecipientKeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AgreementMethodType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class AgreementMethodType

	public class CipherDataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_CipherDataType]); }}


		public CipherDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			CipherValue = new MemberElement_CipherValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_CipherDataType_altova_CipherValue]);
			CipherReference = new MemberElement_CipherReference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_CipherDataType_altova_CipherReference]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new CipherDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_CipherValue CipherValue;
		public class MemberElement_CipherValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CipherValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CipherReference CipherReference;
		public class MemberElement_CipherReference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CipherReference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.CipherReferenceType this [int i] { get { return At(i);} } 
			public xenc.CipherReferenceType At(int index) {return new xenc.CipherReferenceType(owner.GetElementAt(info, index));}
			public xenc.CipherReferenceType First { get  {return new xenc.CipherReferenceType(owner.GetElementFirst(info));} }
			public xenc.CipherReferenceType Last { get {return new xenc.CipherReferenceType(owner.GetElementLast(info));} }
			public xenc.CipherReferenceType Append(){return new xenc.CipherReferenceType(owner.CreateElement(info));}
			public xenc.CipherReferenceType AppendWithPrefix(string prefix) {return new xenc.CipherReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.CipherReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("CipherDataType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class CipherDataType

	public class CipherReferenceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_CipherReferenceType]); }}


		public CipherReferenceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			URI = new MemberAttribute_URI (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_CipherReferenceType_altova_URI]);

			Transforms = new MemberElement_Transforms (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_CipherReferenceType_altova_Transforms]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new CipherReferenceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_URI URI;
		public class MemberAttribute_URI
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_URI (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Transforms Transforms;
		public class MemberElement_Transforms : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transforms (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.TransformsType this [int i] { get { return At(i);} } 
			public xenc.TransformsType At(int index) {return new xenc.TransformsType(owner.GetElementAt(info, index));}
			public xenc.TransformsType First { get  {return new xenc.TransformsType(owner.GetElementFirst(info));} }
			public xenc.TransformsType Last { get {return new xenc.TransformsType(owner.GetElementLast(info));} }
			public xenc.TransformsType Append(){return new xenc.TransformsType(owner.CreateElement(info));}
			public xenc.TransformsType AppendWithPrefix(string prefix) {return new xenc.TransformsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.TransformsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("CipherReferenceType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class CipherReferenceType

	public class EncryptedDataType : xenc.EncryptedType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptedDataType]); }}


		public EncryptedDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptedDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptedDataType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptedDataType

	public class EncryptedKeyType : xenc.EncryptedType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptedKeyType]); }}


		public EncryptedKeyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Recipient = new MemberAttribute_Recipient (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedKeyType_altova_Recipient]);

			ReferenceList = new MemberElement_ReferenceList (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedKeyType_altova_ReferenceList]);
			CarriedKeyName = new MemberElement_CarriedKeyName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedKeyType_altova_CarriedKeyName]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptedKeyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Recipient Recipient;
		public class MemberAttribute_Recipient
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Recipient (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_ReferenceList ReferenceList;
		public class MemberElement_ReferenceList : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ReferenceList (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ReferenceListType this [int i] { get { return At(i);} } 
			public md.ReferenceListType At(int index) {return new md.ReferenceListType(owner.GetElementAt(info, index));}
			public md.ReferenceListType First { get  {return new md.ReferenceListType(owner.GetElementFirst(info));} }
			public md.ReferenceListType Last { get {return new md.ReferenceListType(owner.GetElementLast(info));} }
			public md.ReferenceListType Append(){return new md.ReferenceListType(owner.CreateElement(info));}
			public md.ReferenceListType AppendWithPrefix(string prefix) {return new md.ReferenceListType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ReferenceListType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CarriedKeyName CarriedKeyName;
		public class MemberElement_CarriedKeyName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CarriedKeyName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptedKeyType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptedKeyType

	public class EncryptedType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptedType]); }}


		public EncryptedType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_Id]);
			Type2 = new MemberAttribute_Type2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_Type2]);
			MimeType = new MemberAttribute_MimeType (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_MimeType]);
			Encoding = new MemberAttribute_Encoding (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_Encoding]);

			EncryptionMethod = new MemberElement_EncryptionMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_EncryptionMethod]);
			KeyInfo = new MemberElement_KeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_KeyInfo]);
			CipherData = new MemberElement_CipherData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_CipherData]);
			EncryptionProperties = new MemberElement_EncryptionProperties (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptedType_altova_EncryptionProperties]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptedType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Type2 Type2;
		public class MemberAttribute_Type2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_MimeType MimeType;
		public class MemberAttribute_MimeType
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_MimeType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Encoding Encoding;
		public class MemberAttribute_Encoding
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Encoding (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_EncryptionMethod EncryptionMethod;
		public class MemberElement_EncryptionMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionMethodType this [int i] { get { return At(i);} } 
			public xenc.EncryptionMethodType At(int index) {return new xenc.EncryptionMethodType(owner.GetElementAt(info, index));}
			public xenc.EncryptionMethodType First { get  {return new xenc.EncryptionMethodType(owner.GetElementFirst(info));} }
			public xenc.EncryptionMethodType Last { get {return new xenc.EncryptionMethodType(owner.GetElementLast(info));} }
			public xenc.EncryptionMethodType Append(){return new xenc.EncryptionMethodType(owner.CreateElement(info));}
			public xenc.EncryptionMethodType AppendWithPrefix(string prefix) {return new xenc.EncryptionMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyInfo KeyInfo;
		public class MemberElement_KeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CipherData CipherData;
		public class MemberElement_CipherData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CipherData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.CipherDataType this [int i] { get { return At(i);} } 
			public xenc.CipherDataType At(int index) {return new xenc.CipherDataType(owner.GetElementAt(info, index));}
			public xenc.CipherDataType First { get  {return new xenc.CipherDataType(owner.GetElementFirst(info));} }
			public xenc.CipherDataType Last { get {return new xenc.CipherDataType(owner.GetElementLast(info));} }
			public xenc.CipherDataType Append(){return new xenc.CipherDataType(owner.CreateElement(info));}
			public xenc.CipherDataType AppendWithPrefix(string prefix) {return new xenc.CipherDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.CipherDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptionProperties EncryptionProperties;
		public class MemberElement_EncryptionProperties : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionProperties (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionPropertiesType this [int i] { get { return At(i);} } 
			public xenc.EncryptionPropertiesType At(int index) {return new xenc.EncryptionPropertiesType(owner.GetElementAt(info, index));}
			public xenc.EncryptionPropertiesType First { get  {return new xenc.EncryptionPropertiesType(owner.GetElementFirst(info));} }
			public xenc.EncryptionPropertiesType Last { get {return new xenc.EncryptionPropertiesType(owner.GetElementLast(info));} }
			public xenc.EncryptionPropertiesType Append(){return new xenc.EncryptionPropertiesType(owner.CreateElement(info));}
			public xenc.EncryptionPropertiesType AppendWithPrefix(string prefix) {return new xenc.EncryptionPropertiesType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionPropertiesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptedType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptedType

	public class EncryptionMethodType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptionMethodType]); }}


		public EncryptionMethodType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Algorithm = new MemberAttribute_Algorithm (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionMethodType_altova_Algorithm]);

			KeySize = new MemberElement_KeySize (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionMethodType_altova_KeySize]);
			OAEPparams = new MemberElement_OAEPparams (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionMethodType_altova_OAEPparams]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptionMethodType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Algorithm Algorithm;
		public class MemberAttribute_Algorithm
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Algorithm (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionMethodType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionMethodType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public MemberElement_KeySize KeySize;
		public class MemberElement_KeySize : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeySize (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.KeySizeTypeType this [int i] { get { return At(i);} } 
			public xenc.KeySizeTypeType At(int index) {return new xenc.KeySizeTypeType(owner.GetElementAt(info, index));}
			public xenc.KeySizeTypeType First { get  {return new xenc.KeySizeTypeType(owner.GetElementFirst(info));} }
			public xenc.KeySizeTypeType Last { get {return new xenc.KeySizeTypeType(owner.GetElementLast(info));} }
			public xenc.KeySizeTypeType Append(){return new xenc.KeySizeTypeType(owner.CreateElement(info));}
			public xenc.KeySizeTypeType AppendWithPrefix(string prefix) {return new xenc.KeySizeTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.KeySizeTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OAEPparams OAEPparams;
		public class MemberElement_OAEPparams : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OAEPparams (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.base64BinaryType this [int i] { get { return At(i);} } 
			public xs.base64BinaryType At(int index) {return new xs.base64BinaryType(owner.GetElementAt(info, index));}
			public xs.base64BinaryType First { get  {return new xs.base64BinaryType(owner.GetElementFirst(info));} }
			public xs.base64BinaryType Last { get {return new xs.base64BinaryType(owner.GetElementLast(info));} }
			public xs.base64BinaryType Append(){return new xs.base64BinaryType(owner.CreateElement(info));}
			public xs.base64BinaryType AppendWithPrefix(string prefix) {return new xs.base64BinaryType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.base64BinaryType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptionMethodType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptionMethodType

	public class EncryptionPropertiesType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptionPropertiesType]); }}


		public EncryptionPropertiesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertiesType_altova_Id]);

			EncryptionProperty = new MemberElement_EncryptionProperty (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertiesType_altova_EncryptionProperty]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptionPropertiesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_EncryptionProperty EncryptionProperty;
		public class MemberElement_EncryptionProperty : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionProperty (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionPropertyType this [int i] { get { return At(i);} } 
			public xenc.EncryptionPropertyType At(int index) {return new xenc.EncryptionPropertyType(owner.GetElementAt(info, index));}
			public xenc.EncryptionPropertyType First { get  {return new xenc.EncryptionPropertyType(owner.GetElementFirst(info));} }
			public xenc.EncryptionPropertyType Last { get {return new xenc.EncryptionPropertyType(owner.GetElementLast(info));} }
			public xenc.EncryptionPropertyType Append(){return new xenc.EncryptionPropertyType(owner.CreateElement(info));}
			public xenc.EncryptionPropertyType AppendWithPrefix(string prefix) {return new xenc.EncryptionPropertyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionPropertyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptionPropertiesType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptionPropertiesType

	public class EncryptionPropertyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_EncryptionPropertyType]); }}


		public EncryptionPropertyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Target = new MemberAttribute_Target (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertyType_altova_Target]);
			Id = new MemberAttribute_Id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertyType_altova_Id]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptionPropertyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Target Target;
		public class MemberAttribute_Target
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Target (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Id Id;
		public class MemberAttribute_Id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_EncryptionPropertyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptionPropertyType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class EncryptionPropertyType

	public class KeySizeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_KeySizeType]); }}


		public KeySizeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class KeySizeType

	public class ReferenceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_ReferenceType]); }}


		public ReferenceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			URI = new MemberAttribute_URI (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_ReferenceType_altova_URI]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ReferenceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_URI URI;
		public class MemberAttribute_URI
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_URI (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ReferenceType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class ReferenceType

	public class TransformsType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_TransformsType]); }}


		public TransformsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Transform = new MemberElement_Transform (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_TransformsType_altova_Transform]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TransformsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Transform Transform;
		public class MemberElement_Transform : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transform (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformType this [int i] { get { return At(i);} } 
			public ds.TransformType At(int index) {return new ds.TransformType(owner.GetElementAt(info, index));}
			public ds.TransformType First { get  {return new ds.TransformType(owner.GetElementFirst(info));} }
			public ds.TransformType Last { get {return new ds.TransformType(owner.GetElementLast(info));} }
			public ds.TransformType Append(){return new ds.TransformType(owner.CreateElement(info));}
			public ds.TransformType AppendWithPrefix(string prefix) {return new ds.TransformType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TransformsType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class TransformsType

	public class KeySizeTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xenc_altova_KeySizeTypeType]); }}


		public KeySizeTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeySizeTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public decimal Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_KeySizeTypeType_altova_unnamed];
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xenc_altova_KeySizeTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeySizeType", "http://www.w3.org/2001/04/xmlenc#")); 				
		}
		
	} // class KeySizeTypeType


} // namespace xenc


namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}


		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES

	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_ENTITY]); }}


		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY

	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_ID]); }}


		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID

	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_IDREF]); }}


		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF

	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_IDREFS]); }}


		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS

	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_NCName]); }}


		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName

	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}


		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN

	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}


		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS

	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_NOTATION]); }}


		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION

	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_Name]); }}


		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name

	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_QName]); }}


		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName

	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}


		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType

	public class anyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_anyType]); }}


		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType

	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_anyURI]); }}


		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI

	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_base64Binary]); }}


		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary

	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_boolean]); }}


		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean

	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_byte2]); }}


		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2

	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_date]); }}


		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date

	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_dateTime]); }}


		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime

	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_decimal2]); }}


		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2

	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_double2]); }}


		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2

	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_duration]); }}


		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration

	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_float2]); }}


		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2

	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_gDay]); }}


		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay

	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_gMonth]); }}


		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth

	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}


		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay

	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_gYear]); }}


		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear

	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}


		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth

	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_hexBinary]); }}


		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary

	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_int2]); }}


		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2

	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_integer]); }}


		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer

	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_language]); }}


		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language

	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_long2]); }}


		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2

	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}


		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger

	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}


		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger

	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}


		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger

	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_normalizedString]); }}


		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString

	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}


		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger

	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_short2]); }}


		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2

	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_string2]); }}


		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2

	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_time]); }}


		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time

	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_token]); }}


		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token

	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}


		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte

	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}


		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt

	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}


		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong

	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}


		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort

	public class stringType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_stringType]); }}


		public stringType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new stringType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class stringType

	public class NCNameType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_NCNameType]); }}


		public NCNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new NCNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_NCNameType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_NCNameType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("NCName", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class NCNameType

	public class anyURIType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_anyURIType]); }}


		public anyURIType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyURIType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_anyURIType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_anyURIType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyURI", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyURIType

	public class base64BinaryType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_base64BinaryType]); }}


		public base64BinaryType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new base64BinaryType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public byte[] Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_base64BinaryType_altova_unnamed];
				return (byte[])Altova.Xml.XmlTreeOperations.CastToBinary(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_base64BinaryType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("base64Binary", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class base64BinaryType

	public class integerType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_xs_altova_integerType]); }}


		public integerType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new integerType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public decimal Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_integerType_altova_unnamed];
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_xs_altova_integerType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("integer", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class integerType


} // namespace xs


namespace xml
{	

} // namespace xml


namespace saml
{	
	public class ActionType : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_ActionType]); }}


		public ActionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Namespace2 = new MemberAttribute_Namespace2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ActionType_altova_Namespace2]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ActionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Namespace2 Namespace2;
		public class MemberAttribute_Namespace2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Namespace2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ActionType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class ActionType

	public class AdviceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AdviceType]); }}


		public AdviceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AssertionIDRef = new MemberElement_AssertionIDRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AdviceType_altova_AssertionIDRef]);
			AssertionURIRef = new MemberElement_AssertionURIRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AdviceType_altova_AssertionURIRef]);
			Assertion = new MemberElement_Assertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AdviceType_altova_Assertion]);
			EncryptedAssertion = new MemberElement_EncryptedAssertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AdviceType_altova_EncryptedAssertion]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AdviceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AssertionIDRef AssertionIDRef;
		public class MemberElement_AssertionIDRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.NCNameType this [int i] { get { return At(i);} } 
			public xs.NCNameType At(int index) {return new xs.NCNameType(owner.GetElementAt(info, index));}
			public xs.NCNameType First { get  {return new xs.NCNameType(owner.GetElementFirst(info));} }
			public xs.NCNameType Last { get {return new xs.NCNameType(owner.GetElementLast(info));} }
			public xs.NCNameType Append(){return new xs.NCNameType(owner.CreateElement(info));}
			public xs.NCNameType AppendWithPrefix(string prefix) {return new xs.NCNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.NCNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionURIRef AssertionURIRef;
		public class MemberElement_AssertionURIRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionURIRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Assertion Assertion;
		public class MemberElement_Assertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Assertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AssertionType this [int i] { get { return At(i);} } 
			public saml.AssertionType At(int index) {return new saml.AssertionType(owner.GetElementAt(info, index));}
			public saml.AssertionType First { get  {return new saml.AssertionType(owner.GetElementFirst(info));} }
			public saml.AssertionType Last { get {return new saml.AssertionType(owner.GetElementLast(info));} }
			public saml.AssertionType Append(){return new saml.AssertionType(owner.CreateElement(info));}
			public saml.AssertionType AppendWithPrefix(string prefix) {return new saml.AssertionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AssertionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedAssertion EncryptedAssertion;
		public class MemberElement_EncryptedAssertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedAssertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AdviceType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AdviceType

	public class AssertionType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AssertionType]); }}


		public AssertionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Version = new MemberAttribute_Version (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Version]);
			ID = new MemberAttribute_ID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_ID]);
			IssueInstant = new MemberAttribute_IssueInstant (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_IssueInstant]);

			Issuer = new MemberElement_Issuer (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Issuer]);
			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Signature]);
			Subject = new MemberElement_Subject (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Subject]);
			Conditions = new MemberElement_Conditions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Conditions]);
			Advice = new MemberElement_Advice (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Advice]);
			Statement = new MemberElement_Statement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_Statement]);
			AuthnStatement = new MemberElement_AuthnStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_AuthnStatement]);
			AuthzDecisionStatement = new MemberElement_AuthzDecisionStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_AuthzDecisionStatement]);
			AttributeStatement = new MemberElement_AttributeStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AssertionType_altova_AttributeStatement]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AssertionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Version Version;
		public class MemberAttribute_Version
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Version (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_IssueInstant IssueInstant;
		public class MemberAttribute_IssueInstant
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_IssueInstant (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Issuer Issuer;
		public class MemberElement_Issuer : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Issuer (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.NameIDType this [int i] { get { return At(i);} } 
			public saml.NameIDType At(int index) {return new saml.NameIDType(owner.GetElementAt(info, index));}
			public saml.NameIDType First { get  {return new saml.NameIDType(owner.GetElementFirst(info));} }
			public saml.NameIDType Last { get {return new saml.NameIDType(owner.GetElementLast(info));} }
			public saml.NameIDType Append(){return new saml.NameIDType(owner.CreateElement(info));}
			public saml.NameIDType AppendWithPrefix(string prefix) {return new saml.NameIDType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.NameIDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Subject Subject;
		public class MemberElement_Subject : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Subject (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectType this [int i] { get { return At(i);} } 
			public saml.SubjectType At(int index) {return new saml.SubjectType(owner.GetElementAt(info, index));}
			public saml.SubjectType First { get  {return new saml.SubjectType(owner.GetElementFirst(info));} }
			public saml.SubjectType Last { get {return new saml.SubjectType(owner.GetElementLast(info));} }
			public saml.SubjectType Append(){return new saml.SubjectType(owner.CreateElement(info));}
			public saml.SubjectType AppendWithPrefix(string prefix) {return new saml.SubjectType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Conditions Conditions;
		public class MemberElement_Conditions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Conditions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ConditionsType this [int i] { get { return At(i);} } 
			public saml.ConditionsType At(int index) {return new saml.ConditionsType(owner.GetElementAt(info, index));}
			public saml.ConditionsType First { get  {return new saml.ConditionsType(owner.GetElementFirst(info));} }
			public saml.ConditionsType Last { get {return new saml.ConditionsType(owner.GetElementLast(info));} }
			public saml.ConditionsType Append(){return new saml.ConditionsType(owner.CreateElement(info));}
			public saml.ConditionsType AppendWithPrefix(string prefix) {return new saml.ConditionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ConditionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Advice Advice;
		public class MemberElement_Advice : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Advice (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AdviceType this [int i] { get { return At(i);} } 
			public saml.AdviceType At(int index) {return new saml.AdviceType(owner.GetElementAt(info, index));}
			public saml.AdviceType First { get  {return new saml.AdviceType(owner.GetElementFirst(info));} }
			public saml.AdviceType Last { get {return new saml.AdviceType(owner.GetElementLast(info));} }
			public saml.AdviceType Append(){return new saml.AdviceType(owner.CreateElement(info));}
			public saml.AdviceType AppendWithPrefix(string prefix) {return new saml.AdviceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AdviceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Statement Statement;
		public class MemberElement_Statement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Statement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.StatementAbstractType this [int i] { get { return At(i);} } 
			public saml.StatementAbstractType At(int index) {return new saml.StatementAbstractType(owner.GetElementAt(info, index));}
			public saml.StatementAbstractType First { get  {return new saml.StatementAbstractType(owner.GetElementFirst(info));} }
			public saml.StatementAbstractType Last { get {return new saml.StatementAbstractType(owner.GetElementLast(info));} }
			public saml.StatementAbstractType Append(){return new saml.StatementAbstractType(owner.CreateElement(info));}
			public saml.StatementAbstractType AppendWithPrefix(string prefix) {return new saml.StatementAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.StatementAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnStatement AuthnStatement;
		public class MemberElement_AuthnStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthnStatementType this [int i] { get { return At(i);} } 
			public saml.AuthnStatementType At(int index) {return new saml.AuthnStatementType(owner.GetElementAt(info, index));}
			public saml.AuthnStatementType First { get  {return new saml.AuthnStatementType(owner.GetElementFirst(info));} }
			public saml.AuthnStatementType Last { get {return new saml.AuthnStatementType(owner.GetElementLast(info));} }
			public saml.AuthnStatementType Append(){return new saml.AuthnStatementType(owner.CreateElement(info));}
			public saml.AuthnStatementType AppendWithPrefix(string prefix) {return new saml.AuthnStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthnStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthzDecisionStatement AuthzDecisionStatement;
		public class MemberElement_AuthzDecisionStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthzDecisionStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthzDecisionStatementType this [int i] { get { return At(i);} } 
			public saml.AuthzDecisionStatementType At(int index) {return new saml.AuthzDecisionStatementType(owner.GetElementAt(info, index));}
			public saml.AuthzDecisionStatementType First { get  {return new saml.AuthzDecisionStatementType(owner.GetElementFirst(info));} }
			public saml.AuthzDecisionStatementType Last { get {return new saml.AuthzDecisionStatementType(owner.GetElementLast(info));} }
			public saml.AuthzDecisionStatementType Append(){return new saml.AuthzDecisionStatementType(owner.CreateElement(info));}
			public saml.AuthzDecisionStatementType AppendWithPrefix(string prefix) {return new saml.AuthzDecisionStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthzDecisionStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeStatement AttributeStatement;
		public class MemberElement_AttributeStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeStatementType this [int i] { get { return At(i);} } 
			public saml.AttributeStatementType At(int index) {return new saml.AttributeStatementType(owner.GetElementAt(info, index));}
			public saml.AttributeStatementType First { get  {return new saml.AttributeStatementType(owner.GetElementFirst(info));} }
			public saml.AttributeStatementType Last { get {return new saml.AttributeStatementType(owner.GetElementLast(info));} }
			public saml.AttributeStatementType Append(){return new saml.AttributeStatementType(owner.CreateElement(info));}
			public saml.AttributeStatementType AppendWithPrefix(string prefix) {return new saml.AttributeStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AssertionType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AssertionType

	public class AttributeStatementType : saml.StatementAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AttributeStatementType]); }}


		public AttributeStatementType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Attribute = new MemberElement_Attribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeStatementType_altova_Attribute]);
			EncryptedAttribute = new MemberElement_EncryptedAttribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeStatementType_altova_EncryptedAttribute]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AttributeStatementType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Attribute Attribute;
		public class MemberElement_Attribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Attribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeType this [int i] { get { return At(i);} } 
			public saml.AttributeType At(int index) {return new saml.AttributeType(owner.GetElementAt(info, index));}
			public saml.AttributeType First { get  {return new saml.AttributeType(owner.GetElementFirst(info));} }
			public saml.AttributeType Last { get {return new saml.AttributeType(owner.GetElementLast(info));} }
			public saml.AttributeType Append(){return new saml.AttributeType(owner.CreateElement(info));}
			public saml.AttributeType AppendWithPrefix(string prefix) {return new saml.AttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedAttribute EncryptedAttribute;
		public class MemberElement_EncryptedAttribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedAttribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AttributeStatementType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AttributeStatementType

	public class AttributeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AttributeType]); }}


		public AttributeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeType_altova_Name]);
			NameFormat = new MemberAttribute_NameFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeType_altova_NameFormat]);
			FriendlyName = new MemberAttribute_FriendlyName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeType_altova_FriendlyName]);

			AttributeValue = new MemberElement_AttributeValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AttributeType_altova_AttributeValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AttributeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_NameFormat NameFormat;
		public class MemberAttribute_NameFormat
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NameFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_FriendlyName FriendlyName;
		public class MemberAttribute_FriendlyName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_FriendlyName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_AttributeValue AttributeValue;
		public class MemberElement_AttributeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyType this [int i] { get { return At(i);} } 
			public xs.anyType At(int index) {return new xs.anyType(owner.GetElementAt(info, index));}
			public xs.anyType First { get  {return new xs.anyType(owner.GetElementFirst(info));} }
			public xs.anyType Last { get {return new xs.anyType(owner.GetElementLast(info));} }
			public xs.anyType Append(){return new xs.anyType(owner.CreateElement(info));}
			public xs.anyType AppendWithPrefix(string prefix) {return new xs.anyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AttributeType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AttributeType

	public class AudienceRestrictionType : saml.ConditionAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AudienceRestrictionType]); }}


		public AudienceRestrictionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Audience = new MemberElement_Audience (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AudienceRestrictionType_altova_Audience]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AudienceRestrictionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Audience Audience;
		public class MemberElement_Audience : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Audience (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AudienceRestrictionType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AudienceRestrictionType

	public class AuthnContextType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AuthnContextType]); }}


		public AuthnContextType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AuthnContextClassRef = new MemberElement_AuthnContextClassRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnContextType_altova_AuthnContextClassRef]);
			AuthnContextDecl = new MemberElement_AuthnContextDecl (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnContextType_altova_AuthnContextDecl]);
			AuthnContextDeclRef = new MemberElement_AuthnContextDeclRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnContextType_altova_AuthnContextDeclRef]);
			AuthenticatingAuthority = new MemberElement_AuthenticatingAuthority (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnContextType_altova_AuthenticatingAuthority]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthnContextType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AuthnContextClassRef AuthnContextClassRef;
		public class MemberElement_AuthnContextClassRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextClassRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContextDecl AuthnContextDecl;
		public class MemberElement_AuthnContextDecl : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextDecl (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyType this [int i] { get { return At(i);} } 
			public xs.anyType At(int index) {return new xs.anyType(owner.GetElementAt(info, index));}
			public xs.anyType First { get  {return new xs.anyType(owner.GetElementFirst(info));} }
			public xs.anyType Last { get {return new xs.anyType(owner.GetElementLast(info));} }
			public xs.anyType Append(){return new xs.anyType(owner.CreateElement(info));}
			public xs.anyType AppendWithPrefix(string prefix) {return new xs.anyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContextDeclRef AuthnContextDeclRef;
		public class MemberElement_AuthnContextDeclRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextDeclRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthenticatingAuthority AuthenticatingAuthority;
		public class MemberElement_AuthenticatingAuthority : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthenticatingAuthority (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthnContextType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AuthnContextType

	public class AuthnStatementType : saml.StatementAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AuthnStatementType]); }}


		public AuthnStatementType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			AuthnInstant = new MemberAttribute_AuthnInstant (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnStatementType_altova_AuthnInstant]);
			SessionIndex = new MemberAttribute_SessionIndex (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnStatementType_altova_SessionIndex]);
			SessionNotOnOrAfter = new MemberAttribute_SessionNotOnOrAfter (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnStatementType_altova_SessionNotOnOrAfter]);

			SubjectLocality = new MemberElement_SubjectLocality (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnStatementType_altova_SubjectLocality]);
			AuthnContext = new MemberElement_AuthnContext (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthnStatementType_altova_AuthnContext]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthnStatementType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_AuthnInstant AuthnInstant;
		public class MemberAttribute_AuthnInstant
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_AuthnInstant (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_SessionIndex SessionIndex;
		public class MemberAttribute_SessionIndex
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SessionIndex (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_SessionNotOnOrAfter SessionNotOnOrAfter;
		public class MemberAttribute_SessionNotOnOrAfter
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SessionNotOnOrAfter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_SubjectLocality SubjectLocality;
		public class MemberElement_SubjectLocality : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectLocality (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectLocalityType this [int i] { get { return At(i);} } 
			public saml.SubjectLocalityType At(int index) {return new saml.SubjectLocalityType(owner.GetElementAt(info, index));}
			public saml.SubjectLocalityType First { get  {return new saml.SubjectLocalityType(owner.GetElementFirst(info));} }
			public saml.SubjectLocalityType Last { get {return new saml.SubjectLocalityType(owner.GetElementLast(info));} }
			public saml.SubjectLocalityType Append(){return new saml.SubjectLocalityType(owner.CreateElement(info));}
			public saml.SubjectLocalityType AppendWithPrefix(string prefix) {return new saml.SubjectLocalityType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectLocalityType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContext AuthnContext;
		public class MemberElement_AuthnContext : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContext (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthnContextType this [int i] { get { return At(i);} } 
			public saml.AuthnContextType At(int index) {return new saml.AuthnContextType(owner.GetElementAt(info, index));}
			public saml.AuthnContextType First { get  {return new saml.AuthnContextType(owner.GetElementFirst(info));} }
			public saml.AuthnContextType Last { get {return new saml.AuthnContextType(owner.GetElementLast(info));} }
			public saml.AuthnContextType Append(){return new saml.AuthnContextType(owner.CreateElement(info));}
			public saml.AuthnContextType AppendWithPrefix(string prefix) {return new saml.AuthnContextType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthnContextType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthnStatementType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AuthnStatementType

	public class AuthzDecisionStatementType : saml.StatementAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_AuthzDecisionStatementType]); }}


		public AuthzDecisionStatementType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Resource = new MemberAttribute_Resource (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthzDecisionStatementType_altova_Resource]);
			Decision = new MemberAttribute_Decision (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthzDecisionStatementType_altova_Decision]);

			Action = new MemberElement_Action (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthzDecisionStatementType_altova_Action]);
			Evidence = new MemberElement_Evidence (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_AuthzDecisionStatementType_altova_Evidence]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthzDecisionStatementType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Resource Resource;
		public class MemberAttribute_Resource
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Resource (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Decision Decision;
		public class MemberAttribute_Decision
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Decision (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public saml.DecisionType.EnumValues EnumerationValue
			{
				get
				{			
					return (saml.DecisionType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 3);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 3) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_Action Action;
		public class MemberElement_Action : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Action (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ActionType this [int i] { get { return At(i);} } 
			public saml.ActionType At(int index) {return new saml.ActionType(owner.GetElementAt(info, index));}
			public saml.ActionType First { get  {return new saml.ActionType(owner.GetElementFirst(info));} }
			public saml.ActionType Last { get {return new saml.ActionType(owner.GetElementLast(info));} }
			public saml.ActionType Append(){return new saml.ActionType(owner.CreateElement(info));}
			public saml.ActionType AppendWithPrefix(string prefix) {return new saml.ActionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ActionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Evidence Evidence;
		public class MemberElement_Evidence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Evidence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EvidenceType this [int i] { get { return At(i);} } 
			public saml.EvidenceType At(int index) {return new saml.EvidenceType(owner.GetElementAt(info, index));}
			public saml.EvidenceType First { get  {return new saml.EvidenceType(owner.GetElementFirst(info));} }
			public saml.EvidenceType Last { get {return new saml.EvidenceType(owner.GetElementLast(info));} }
			public saml.EvidenceType Append(){return new saml.EvidenceType(owner.CreateElement(info));}
			public saml.EvidenceType AppendWithPrefix(string prefix) {return new saml.EvidenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EvidenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthzDecisionStatementType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class AuthzDecisionStatementType

	public class BaseIDAbstractType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_BaseIDAbstractType]); }}


		public BaseIDAbstractType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			NameQualifier = new MemberAttribute_NameQualifier (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_BaseIDAbstractType_altova_NameQualifier]);
			SPNameQualifier = new MemberAttribute_SPNameQualifier (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_BaseIDAbstractType_altova_SPNameQualifier]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new BaseIDAbstractType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_NameQualifier NameQualifier;
		public class MemberAttribute_NameQualifier
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NameQualifier (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_SPNameQualifier SPNameQualifier;
		public class MemberAttribute_SPNameQualifier
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SPNameQualifier (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("BaseIDAbstractType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class BaseIDAbstractType

	public class ConditionAbstractType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_ConditionAbstractType]); }}


		public ConditionAbstractType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ConditionAbstractType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ConditionAbstractType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class ConditionAbstractType

	public class ConditionsType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_ConditionsType]); }}


		public ConditionsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			NotBefore = new MemberAttribute_NotBefore (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_NotBefore]);
			NotOnOrAfter = new MemberAttribute_NotOnOrAfter (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_NotOnOrAfter]);

			Condition = new MemberElement_Condition (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_Condition]);
			AudienceRestriction = new MemberElement_AudienceRestriction (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_AudienceRestriction]);
			OneTimeUse = new MemberElement_OneTimeUse (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_OneTimeUse]);
			ProxyRestriction = new MemberElement_ProxyRestriction (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ConditionsType_altova_ProxyRestriction]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ConditionsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_NotBefore NotBefore;
		public class MemberAttribute_NotBefore
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotBefore (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_NotOnOrAfter NotOnOrAfter;
		public class MemberAttribute_NotOnOrAfter
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotOnOrAfter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Condition Condition;
		public class MemberElement_Condition : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Condition (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ConditionAbstractType this [int i] { get { return At(i);} } 
			public saml.ConditionAbstractType At(int index) {return new saml.ConditionAbstractType(owner.GetElementAt(info, index));}
			public saml.ConditionAbstractType First { get  {return new saml.ConditionAbstractType(owner.GetElementFirst(info));} }
			public saml.ConditionAbstractType Last { get {return new saml.ConditionAbstractType(owner.GetElementLast(info));} }
			public saml.ConditionAbstractType Append(){return new saml.ConditionAbstractType(owner.CreateElement(info));}
			public saml.ConditionAbstractType AppendWithPrefix(string prefix) {return new saml.ConditionAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ConditionAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AudienceRestriction AudienceRestriction;
		public class MemberElement_AudienceRestriction : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AudienceRestriction (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AudienceRestrictionType this [int i] { get { return At(i);} } 
			public saml.AudienceRestrictionType At(int index) {return new saml.AudienceRestrictionType(owner.GetElementAt(info, index));}
			public saml.AudienceRestrictionType First { get  {return new saml.AudienceRestrictionType(owner.GetElementFirst(info));} }
			public saml.AudienceRestrictionType Last { get {return new saml.AudienceRestrictionType(owner.GetElementLast(info));} }
			public saml.AudienceRestrictionType Append(){return new saml.AudienceRestrictionType(owner.CreateElement(info));}
			public saml.AudienceRestrictionType AppendWithPrefix(string prefix) {return new saml.AudienceRestrictionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AudienceRestrictionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OneTimeUse OneTimeUse;
		public class MemberElement_OneTimeUse : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OneTimeUse (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.OneTimeUseType this [int i] { get { return At(i);} } 
			public saml.OneTimeUseType At(int index) {return new saml.OneTimeUseType(owner.GetElementAt(info, index));}
			public saml.OneTimeUseType First { get  {return new saml.OneTimeUseType(owner.GetElementFirst(info));} }
			public saml.OneTimeUseType Last { get {return new saml.OneTimeUseType(owner.GetElementLast(info));} }
			public saml.OneTimeUseType Append(){return new saml.OneTimeUseType(owner.CreateElement(info));}
			public saml.OneTimeUseType AppendWithPrefix(string prefix) {return new saml.OneTimeUseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.OneTimeUseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ProxyRestriction ProxyRestriction;
		public class MemberElement_ProxyRestriction : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ProxyRestriction (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ProxyRestrictionType this [int i] { get { return At(i);} } 
			public saml.ProxyRestrictionType At(int index) {return new saml.ProxyRestrictionType(owner.GetElementAt(info, index));}
			public saml.ProxyRestrictionType First { get  {return new saml.ProxyRestrictionType(owner.GetElementFirst(info));} }
			public saml.ProxyRestrictionType Last { get {return new saml.ProxyRestrictionType(owner.GetElementLast(info));} }
			public saml.ProxyRestrictionType Append(){return new saml.ProxyRestrictionType(owner.CreateElement(info));}
			public saml.ProxyRestrictionType AppendWithPrefix(string prefix) {return new saml.ProxyRestrictionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ProxyRestrictionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ConditionsType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class ConditionsType

	public class DecisionType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_DecisionType]); }}


		public enum EnumValues
		{
			ePermit = 0, // Permit
			eDeny = 1, // Deny
			eIndeterminate = 2, // Indeterminate
			Invalid = -1, // Invalid value
		};

		public DecisionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class DecisionType

	public class EncryptedElementType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_EncryptedElementType]); }}


		public EncryptedElementType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			EncryptedData = new MemberElement_EncryptedData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EncryptedElementType_altova_EncryptedData]);
			EncryptedKey = new MemberElement_EncryptedKey (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EncryptedElementType_altova_EncryptedKey]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EncryptedElementType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_EncryptedData EncryptedData;
		public class MemberElement_EncryptedData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptedDataType this [int i] { get { return At(i);} } 
			public xenc.EncryptedDataType At(int index) {return new xenc.EncryptedDataType(owner.GetElementAt(info, index));}
			public xenc.EncryptedDataType First { get  {return new xenc.EncryptedDataType(owner.GetElementFirst(info));} }
			public xenc.EncryptedDataType Last { get {return new xenc.EncryptedDataType(owner.GetElementLast(info));} }
			public xenc.EncryptedDataType Append(){return new xenc.EncryptedDataType(owner.CreateElement(info));}
			public xenc.EncryptedDataType AppendWithPrefix(string prefix) {return new xenc.EncryptedDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptedDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedKey EncryptedKey;
		public class MemberElement_EncryptedKey : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedKey (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptedKeyType this [int i] { get { return At(i);} } 
			public xenc.EncryptedKeyType At(int index) {return new xenc.EncryptedKeyType(owner.GetElementAt(info, index));}
			public xenc.EncryptedKeyType First { get  {return new xenc.EncryptedKeyType(owner.GetElementFirst(info));} }
			public xenc.EncryptedKeyType Last { get {return new xenc.EncryptedKeyType(owner.GetElementLast(info));} }
			public xenc.EncryptedKeyType Append(){return new xenc.EncryptedKeyType(owner.CreateElement(info));}
			public xenc.EncryptedKeyType AppendWithPrefix(string prefix) {return new xenc.EncryptedKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptedKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EncryptedElementType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class EncryptedElementType

	public class EvidenceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_EvidenceType]); }}


		public EvidenceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AssertionIDRef = new MemberElement_AssertionIDRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EvidenceType_altova_AssertionIDRef]);
			AssertionURIRef = new MemberElement_AssertionURIRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EvidenceType_altova_AssertionURIRef]);
			Assertion = new MemberElement_Assertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EvidenceType_altova_Assertion]);
			EncryptedAssertion = new MemberElement_EncryptedAssertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_EvidenceType_altova_EncryptedAssertion]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EvidenceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AssertionIDRef AssertionIDRef;
		public class MemberElement_AssertionIDRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.NCNameType this [int i] { get { return At(i);} } 
			public xs.NCNameType At(int index) {return new xs.NCNameType(owner.GetElementAt(info, index));}
			public xs.NCNameType First { get  {return new xs.NCNameType(owner.GetElementFirst(info));} }
			public xs.NCNameType Last { get {return new xs.NCNameType(owner.GetElementLast(info));} }
			public xs.NCNameType Append(){return new xs.NCNameType(owner.CreateElement(info));}
			public xs.NCNameType AppendWithPrefix(string prefix) {return new xs.NCNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.NCNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionURIRef AssertionURIRef;
		public class MemberElement_AssertionURIRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionURIRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Assertion Assertion;
		public class MemberElement_Assertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Assertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AssertionType this [int i] { get { return At(i);} } 
			public saml.AssertionType At(int index) {return new saml.AssertionType(owner.GetElementAt(info, index));}
			public saml.AssertionType First { get  {return new saml.AssertionType(owner.GetElementFirst(info));} }
			public saml.AssertionType Last { get {return new saml.AssertionType(owner.GetElementLast(info));} }
			public saml.AssertionType Append(){return new saml.AssertionType(owner.CreateElement(info));}
			public saml.AssertionType AppendWithPrefix(string prefix) {return new saml.AssertionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AssertionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedAssertion EncryptedAssertion;
		public class MemberElement_EncryptedAssertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedAssertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EvidenceType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class EvidenceType

	public class KeyInfoConfirmationDataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_KeyInfoConfirmationDataType]); }}


		public KeyInfoConfirmationDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			NotBefore = new MemberAttribute_NotBefore (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_NotBefore]);
			NotOnOrAfter = new MemberAttribute_NotOnOrAfter (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_NotOnOrAfter]);
			Recipient = new MemberAttribute_Recipient (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_Recipient]);
			InResponseTo = new MemberAttribute_InResponseTo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_InResponseTo]);
			Address = new MemberAttribute_Address (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_Address]);

			KeyInfo = new MemberElement_KeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_KeyInfoConfirmationDataType_altova_KeyInfo]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyInfoConfirmationDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_NotBefore NotBefore;
		public class MemberAttribute_NotBefore
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotBefore (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_NotOnOrAfter NotOnOrAfter;
		public class MemberAttribute_NotOnOrAfter
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotOnOrAfter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Recipient Recipient;
		public class MemberAttribute_Recipient
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Recipient (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_InResponseTo InResponseTo;
		public class MemberAttribute_InResponseTo
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_InResponseTo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Address Address;
		public class MemberAttribute_Address
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Address (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_KeyInfo KeyInfo;
		public class MemberElement_KeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyInfoConfirmationDataType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class KeyInfoConfirmationDataType

	public class NameIDType : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_NameIDType]); }}


		public NameIDType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			NameQualifier = new MemberAttribute_NameQualifier (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_NameIDType_altova_NameQualifier]);
			SPNameQualifier = new MemberAttribute_SPNameQualifier (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_NameIDType_altova_SPNameQualifier]);
			Format = new MemberAttribute_Format (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_NameIDType_altova_Format]);
			SPProvidedID = new MemberAttribute_SPProvidedID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_NameIDType_altova_SPProvidedID]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new NameIDType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_NameQualifier NameQualifier;
		public class MemberAttribute_NameQualifier
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NameQualifier (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_SPNameQualifier SPNameQualifier;
		public class MemberAttribute_SPNameQualifier
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SPNameQualifier (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Format Format;
		public class MemberAttribute_Format
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Format (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_SPProvidedID SPProvidedID;
		public class MemberAttribute_SPProvidedID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_SPProvidedID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("NameIDType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class NameIDType

	public class OneTimeUseType : saml.ConditionAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_OneTimeUseType]); }}


		public OneTimeUseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new OneTimeUseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("OneTimeUseType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class OneTimeUseType

	public class ProxyRestrictionType : saml.ConditionAbstractType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_ProxyRestrictionType]); }}


		public ProxyRestrictionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Count = new MemberAttribute_Count (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ProxyRestrictionType_altova_Count]);

			Audience = new MemberElement_Audience (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_ProxyRestrictionType_altova_Audience]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ProxyRestrictionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Count Count;
		public class MemberAttribute_Count
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Count (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public decimal Value { get {
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Audience Audience;
		public class MemberElement_Audience : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Audience (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ProxyRestrictionType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class ProxyRestrictionType

	public class StatementAbstractType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_StatementAbstractType]); }}


		public StatementAbstractType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new StatementAbstractType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("StatementAbstractType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class StatementAbstractType

	public class SubjectConfirmationDataType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_SubjectConfirmationDataType]); }}


		public SubjectConfirmationDataType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			NotBefore = new MemberAttribute_NotBefore (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_NotBefore]);
			NotOnOrAfter = new MemberAttribute_NotOnOrAfter (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_NotOnOrAfter]);
			Recipient = new MemberAttribute_Recipient (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_Recipient]);
			InResponseTo = new MemberAttribute_InResponseTo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_InResponseTo]);
			Address = new MemberAttribute_Address (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_Address]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SubjectConfirmationDataType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_NotBefore NotBefore;
		public class MemberAttribute_NotBefore
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotBefore (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_NotOnOrAfter NotOnOrAfter;
		public class MemberAttribute_NotOnOrAfter
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_NotOnOrAfter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Recipient Recipient;
		public class MemberAttribute_Recipient
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Recipient (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_InResponseTo InResponseTo;
		public class MemberAttribute_InResponseTo
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_InResponseTo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Address Address;
		public class MemberAttribute_Address
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Address (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationDataType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SubjectConfirmationDataType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class SubjectConfirmationDataType

	public class SubjectConfirmationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_SubjectConfirmationType]); }}


		public SubjectConfirmationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Method = new MemberAttribute_Method (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationType_altova_Method]);

			BaseID = new MemberElement_BaseID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationType_altova_BaseID]);
			NameID = new MemberElement_NameID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationType_altova_NameID]);
			EncryptedID = new MemberElement_EncryptedID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationType_altova_EncryptedID]);
			SubjectConfirmationData = new MemberElement_SubjectConfirmationData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectConfirmationType_altova_SubjectConfirmationData]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SubjectConfirmationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Method Method;
		public class MemberAttribute_Method
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Method (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_BaseID BaseID;
		public class MemberElement_BaseID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BaseID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.BaseIDAbstractType this [int i] { get { return At(i);} } 
			public saml.BaseIDAbstractType At(int index) {return new saml.BaseIDAbstractType(owner.GetElementAt(info, index));}
			public saml.BaseIDAbstractType First { get  {return new saml.BaseIDAbstractType(owner.GetElementFirst(info));} }
			public saml.BaseIDAbstractType Last { get {return new saml.BaseIDAbstractType(owner.GetElementLast(info));} }
			public saml.BaseIDAbstractType Append(){return new saml.BaseIDAbstractType(owner.CreateElement(info));}
			public saml.BaseIDAbstractType AppendWithPrefix(string prefix) {return new saml.BaseIDAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.BaseIDAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameID NameID;
		public class MemberElement_NameID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.NameIDType this [int i] { get { return At(i);} } 
			public saml.NameIDType At(int index) {return new saml.NameIDType(owner.GetElementAt(info, index));}
			public saml.NameIDType First { get  {return new saml.NameIDType(owner.GetElementFirst(info));} }
			public saml.NameIDType Last { get {return new saml.NameIDType(owner.GetElementLast(info));} }
			public saml.NameIDType Append(){return new saml.NameIDType(owner.CreateElement(info));}
			public saml.NameIDType AppendWithPrefix(string prefix) {return new saml.NameIDType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.NameIDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedID EncryptedID;
		public class MemberElement_EncryptedID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubjectConfirmationData SubjectConfirmationData;
		public class MemberElement_SubjectConfirmationData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectConfirmationData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectConfirmationDataType this [int i] { get { return At(i);} } 
			public saml.SubjectConfirmationDataType At(int index) {return new saml.SubjectConfirmationDataType(owner.GetElementAt(info, index));}
			public saml.SubjectConfirmationDataType First { get  {return new saml.SubjectConfirmationDataType(owner.GetElementFirst(info));} }
			public saml.SubjectConfirmationDataType Last { get {return new saml.SubjectConfirmationDataType(owner.GetElementLast(info));} }
			public saml.SubjectConfirmationDataType Append(){return new saml.SubjectConfirmationDataType(owner.CreateElement(info));}
			public saml.SubjectConfirmationDataType AppendWithPrefix(string prefix) {return new saml.SubjectConfirmationDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectConfirmationDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SubjectConfirmationType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class SubjectConfirmationType

	public class SubjectLocalityType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_SubjectLocalityType]); }}


		public SubjectLocalityType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Address = new MemberAttribute_Address (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectLocalityType_altova_Address]);
			DNSName = new MemberAttribute_DNSName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectLocalityType_altova_DNSName]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SubjectLocalityType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Address Address;
		public class MemberAttribute_Address
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Address (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_DNSName DNSName;
		public class MemberAttribute_DNSName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_DNSName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SubjectLocalityType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class SubjectLocalityType

	public class SubjectType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_saml_altova_SubjectType]); }}


		public SubjectType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			BaseID = new MemberElement_BaseID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectType_altova_BaseID]);
			NameID = new MemberElement_NameID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectType_altova_NameID]);
			EncryptedID = new MemberElement_EncryptedID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectType_altova_EncryptedID]);
			SubjectConfirmation = new MemberElement_SubjectConfirmation (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_saml_altova_SubjectType_altova_SubjectConfirmation]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SubjectType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_BaseID BaseID;
		public class MemberElement_BaseID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BaseID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.BaseIDAbstractType this [int i] { get { return At(i);} } 
			public saml.BaseIDAbstractType At(int index) {return new saml.BaseIDAbstractType(owner.GetElementAt(info, index));}
			public saml.BaseIDAbstractType First { get  {return new saml.BaseIDAbstractType(owner.GetElementFirst(info));} }
			public saml.BaseIDAbstractType Last { get {return new saml.BaseIDAbstractType(owner.GetElementLast(info));} }
			public saml.BaseIDAbstractType Append(){return new saml.BaseIDAbstractType(owner.CreateElement(info));}
			public saml.BaseIDAbstractType AppendWithPrefix(string prefix) {return new saml.BaseIDAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.BaseIDAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameID NameID;
		public class MemberElement_NameID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.NameIDType this [int i] { get { return At(i);} } 
			public saml.NameIDType At(int index) {return new saml.NameIDType(owner.GetElementAt(info, index));}
			public saml.NameIDType First { get  {return new saml.NameIDType(owner.GetElementFirst(info));} }
			public saml.NameIDType Last { get {return new saml.NameIDType(owner.GetElementLast(info));} }
			public saml.NameIDType Append(){return new saml.NameIDType(owner.CreateElement(info));}
			public saml.NameIDType AppendWithPrefix(string prefix) {return new saml.NameIDType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.NameIDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedID EncryptedID;
		public class MemberElement_EncryptedID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubjectConfirmation SubjectConfirmation;
		public class MemberElement_SubjectConfirmation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectConfirmation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectConfirmationType this [int i] { get { return At(i);} } 
			public saml.SubjectConfirmationType At(int index) {return new saml.SubjectConfirmationType(owner.GetElementAt(info, index));}
			public saml.SubjectConfirmationType First { get  {return new saml.SubjectConfirmationType(owner.GetElementFirst(info));} }
			public saml.SubjectConfirmationType Last { get {return new saml.SubjectConfirmationType(owner.GetElementLast(info));} }
			public saml.SubjectConfirmationType Append(){return new saml.SubjectConfirmationType(owner.CreateElement(info));}
			public saml.SubjectConfirmationType AppendWithPrefix(string prefix) {return new saml.SubjectConfirmationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectConfirmationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SubjectType", "urn:oasis:names:tc:SAML:2.0:assertion")); 				
		}
		
	} // class SubjectType


} // namespace saml


namespace md
{	
	public class AdditionalMetadataLocationType : xs.anyURIType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_AdditionalMetadataLocationType]); }}


		public AdditionalMetadataLocationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			namespace2 = new MemberAttribute_namespace2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AdditionalMetadataLocationType_altova_namespace2]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AdditionalMetadataLocationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_namespace2 namespace2;
		public class MemberAttribute_namespace2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_namespace2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AdditionalMetadataLocationType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class AdditionalMetadataLocationType

	public class AffiliationDescriptorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_AffiliationDescriptorType]); }}


		public AffiliationDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			affiliationOwnerID = new MemberAttribute_affiliationOwnerID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_affiliationOwnerID]);
			validUntil = new MemberAttribute_validUntil (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_validUntil]);
			cacheDuration = new MemberAttribute_cacheDuration (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_cacheDuration]);
			ID = new MemberAttribute_ID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_ID]);

			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_Signature]);
			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_Extensions]);
			AffiliateMember = new MemberElement_AffiliateMember (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_AffiliateMember]);
			KeyDescriptor = new MemberElement_KeyDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AffiliationDescriptorType_altova_KeyDescriptor]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AffiliationDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_affiliationOwnerID affiliationOwnerID;
		public class MemberAttribute_affiliationOwnerID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_affiliationOwnerID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_validUntil validUntil;
		public class MemberAttribute_validUntil
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_validUntil (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_cacheDuration cacheDuration;
		public class MemberAttribute_cacheDuration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_cacheDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.Duration Value { get {
				return (Altova.Types.Duration)Altova.Xml.XmlTreeOperations.CastToDuration(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AffiliateMember AffiliateMember;
		public class MemberElement_AffiliateMember : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AffiliateMember (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.entityIDTypeType this [int i] { get { return At(i);} } 
			public md.entityIDTypeType At(int index) {return new md.entityIDTypeType(owner.GetElementAt(info, index));}
			public md.entityIDTypeType First { get  {return new md.entityIDTypeType(owner.GetElementFirst(info));} }
			public md.entityIDTypeType Last { get {return new md.entityIDTypeType(owner.GetElementLast(info));} }
			public md.entityIDTypeType Append(){return new md.entityIDTypeType(owner.CreateElement(info));}
			public md.entityIDTypeType AppendWithPrefix(string prefix) {return new md.entityIDTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.entityIDTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyDescriptor KeyDescriptor;
		public class MemberElement_KeyDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.KeyDescriptorType this [int i] { get { return At(i);} } 
			public md.KeyDescriptorType At(int index) {return new md.KeyDescriptorType(owner.GetElementAt(info, index));}
			public md.KeyDescriptorType First { get  {return new md.KeyDescriptorType(owner.GetElementFirst(info));} }
			public md.KeyDescriptorType Last { get {return new md.KeyDescriptorType(owner.GetElementLast(info));} }
			public md.KeyDescriptorType Append(){return new md.KeyDescriptorType(owner.CreateElement(info));}
			public md.KeyDescriptorType AppendWithPrefix(string prefix) {return new md.KeyDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.KeyDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AffiliationDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class AffiliationDescriptorType

	public class AttributeAuthorityDescriptorType : md.RoleDescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_AttributeAuthorityDescriptorType]); }}


		public AttributeAuthorityDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AttributeService = new MemberElement_AttributeService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeAuthorityDescriptorType_altova_AttributeService]);
			AssertionIDRequestService = new MemberElement_AssertionIDRequestService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeAuthorityDescriptorType_altova_AssertionIDRequestService]);
			NameIDFormat = new MemberElement_NameIDFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeAuthorityDescriptorType_altova_NameIDFormat]);
			AttributeProfile = new MemberElement_AttributeProfile (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeAuthorityDescriptorType_altova_AttributeProfile]);
			Attribute = new MemberElement_Attribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeAuthorityDescriptorType_altova_Attribute]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AttributeAuthorityDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AttributeService AttributeService;
		public class MemberElement_AttributeService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRequestService AssertionIDRequestService;
		public class MemberElement_AssertionIDRequestService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRequestService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDFormat NameIDFormat;
		public class MemberElement_NameIDFormat : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeProfile AttributeProfile;
		public class MemberElement_AttributeProfile : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeProfile (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Attribute Attribute;
		public class MemberElement_Attribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Attribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeType this [int i] { get { return At(i);} } 
			public saml.AttributeType At(int index) {return new saml.AttributeType(owner.GetElementAt(info, index));}
			public saml.AttributeType First { get  {return new saml.AttributeType(owner.GetElementFirst(info));} }
			public saml.AttributeType Last { get {return new saml.AttributeType(owner.GetElementLast(info));} }
			public saml.AttributeType Append(){return new saml.AttributeType(owner.CreateElement(info));}
			public saml.AttributeType AppendWithPrefix(string prefix) {return new saml.AttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AttributeAuthorityDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class AttributeAuthorityDescriptorType

	public class AttributeConsumingServiceType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_AttributeConsumingServiceType]); }}


		public AttributeConsumingServiceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			index = new MemberAttribute_index (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeConsumingServiceType_altova_index]);
			isDefault = new MemberAttribute_isDefault (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeConsumingServiceType_altova_isDefault]);

			ServiceName = new MemberElement_ServiceName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeConsumingServiceType_altova_ServiceName]);
			ServiceDescription = new MemberElement_ServiceDescription (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeConsumingServiceType_altova_ServiceDescription]);
			RequestedAttribute = new MemberElement_RequestedAttribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AttributeConsumingServiceType_altova_RequestedAttribute]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AttributeConsumingServiceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_index index;
		public class MemberAttribute_index
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_index (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public uint Value { get {
				return (uint)Altova.Xml.XmlTreeOperations.CastToUInt(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_isDefault isDefault;
		public class MemberAttribute_isDefault
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_isDefault (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_ServiceName ServiceName;
		public class MemberElement_ServiceName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ServiceName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ServiceDescription ServiceDescription;
		public class MemberElement_ServiceDescription : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ServiceDescription (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RequestedAttribute RequestedAttribute;
		public class MemberElement_RequestedAttribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RequestedAttribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.RequestedAttributeType this [int i] { get { return At(i);} } 
			public md.RequestedAttributeType At(int index) {return new md.RequestedAttributeType(owner.GetElementAt(info, index));}
			public md.RequestedAttributeType First { get  {return new md.RequestedAttributeType(owner.GetElementFirst(info));} }
			public md.RequestedAttributeType Last { get {return new md.RequestedAttributeType(owner.GetElementLast(info));} }
			public md.RequestedAttributeType Append(){return new md.RequestedAttributeType(owner.CreateElement(info));}
			public md.RequestedAttributeType AppendWithPrefix(string prefix) {return new md.RequestedAttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.RequestedAttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AttributeConsumingServiceType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class AttributeConsumingServiceType

	public class AuthnAuthorityDescriptorType : md.RoleDescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_AuthnAuthorityDescriptorType]); }}


		public AuthnAuthorityDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AuthnQueryService = new MemberElement_AuthnQueryService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AuthnAuthorityDescriptorType_altova_AuthnQueryService]);
			AssertionIDRequestService = new MemberElement_AssertionIDRequestService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AuthnAuthorityDescriptorType_altova_AssertionIDRequestService]);
			NameIDFormat = new MemberElement_NameIDFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_AuthnAuthorityDescriptorType_altova_NameIDFormat]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AuthnAuthorityDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AuthnQueryService AuthnQueryService;
		public class MemberElement_AuthnQueryService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnQueryService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRequestService AssertionIDRequestService;
		public class MemberElement_AssertionIDRequestService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRequestService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDFormat NameIDFormat;
		public class MemberElement_NameIDFormat : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AuthnAuthorityDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class AuthnAuthorityDescriptorType

	public class ContactType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_ContactType]); }}


		public ContactType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			contactType2 = new MemberAttribute_contactType2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_contactType2]);

			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_Extensions]);
			Company = new MemberElement_Company (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_Company]);
			GivenName = new MemberElement_GivenName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_GivenName]);
			SurName = new MemberElement_SurName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_SurName]);
			EmailAddress = new MemberElement_EmailAddress (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_EmailAddress]);
			TelephoneNumber = new MemberElement_TelephoneNumber (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ContactType_altova_TelephoneNumber]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ContactType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_contactType2 contactType2;
		public class MemberAttribute_contactType2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_contactType2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public md.ContactTypeType.EnumValues EnumerationValue
			{
				get
				{			
					return (md.ContactTypeType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 5);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 5) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Company Company;
		public class MemberElement_Company : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Company (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GivenName GivenName;
		public class MemberElement_GivenName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GivenName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SurName SurName;
		public class MemberElement_SurName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SurName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EmailAddress EmailAddress;
		public class MemberElement_EmailAddress : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EmailAddress (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TelephoneNumber TelephoneNumber;
		public class MemberElement_TelephoneNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TelephoneNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ContactType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class ContactType

	public class ContactTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_ContactTypeType]); }}


		public enum EnumValues
		{
			etechnical = 0, // technical
			esupport = 1, // support
			eadministrative = 2, // administrative
			ebilling = 3, // billing
			eother = 4, // other
			Invalid = -1, // Invalid value
		};

		public ContactTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ContactTypeType

	public class EndpointType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_EndpointType]); }}


		public EndpointType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Binding = new MemberAttribute_Binding (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EndpointType_altova_Binding]);
			Location = new MemberAttribute_Location (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EndpointType_altova_Location]);
			ResponseLocation = new MemberAttribute_ResponseLocation (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EndpointType_altova_ResponseLocation]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EndpointType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Binding Binding;
		public class MemberAttribute_Binding
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Binding (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Location Location;
		public class MemberAttribute_Location
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Location (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_ResponseLocation ResponseLocation;
		public class MemberAttribute_ResponseLocation
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ResponseLocation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EndpointType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class EndpointType

	public class EntitiesDescriptorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_EntitiesDescriptorType]); }}


		public EntitiesDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			validUntil = new MemberAttribute_validUntil (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_validUntil]);
			cacheDuration = new MemberAttribute_cacheDuration (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_cacheDuration]);
			ID = new MemberAttribute_ID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_ID]);
			Name = new MemberAttribute_Name (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_Name]);

			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_Signature]);
			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_Extensions]);
			EntityDescriptor = new MemberElement_EntityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_EntityDescriptor]);
			EntitiesDescriptor = new MemberElement_EntitiesDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntitiesDescriptorType_altova_EntitiesDescriptor]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EntitiesDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_validUntil validUntil;
		public class MemberAttribute_validUntil
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_validUntil (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_cacheDuration cacheDuration;
		public class MemberAttribute_cacheDuration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_cacheDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.Duration Value { get {
				return (Altova.Types.Duration)Altova.Xml.XmlTreeOperations.CastToDuration(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EntityDescriptor EntityDescriptor;
		public class MemberElement_EntityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EntityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EntityDescriptorType this [int i] { get { return At(i);} } 
			public md.EntityDescriptorType At(int index) {return new md.EntityDescriptorType(owner.GetElementAt(info, index));}
			public md.EntityDescriptorType First { get  {return new md.EntityDescriptorType(owner.GetElementFirst(info));} }
			public md.EntityDescriptorType Last { get {return new md.EntityDescriptorType(owner.GetElementLast(info));} }
			public md.EntityDescriptorType Append(){return new md.EntityDescriptorType(owner.CreateElement(info));}
			public md.EntityDescriptorType AppendWithPrefix(string prefix) {return new md.EntityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EntityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EntitiesDescriptor EntitiesDescriptor;
		public class MemberElement_EntitiesDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EntitiesDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EntitiesDescriptorType this [int i] { get { return At(i);} } 
			public md.EntitiesDescriptorType At(int index) {return new md.EntitiesDescriptorType(owner.GetElementAt(info, index));}
			public md.EntitiesDescriptorType First { get  {return new md.EntitiesDescriptorType(owner.GetElementFirst(info));} }
			public md.EntitiesDescriptorType Last { get {return new md.EntitiesDescriptorType(owner.GetElementLast(info));} }
			public md.EntitiesDescriptorType Append(){return new md.EntitiesDescriptorType(owner.CreateElement(info));}
			public md.EntitiesDescriptorType AppendWithPrefix(string prefix) {return new md.EntitiesDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EntitiesDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EntitiesDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class EntitiesDescriptorType

	public class EntityDescriptorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_EntityDescriptorType]); }}


		public EntityDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			entityID = new MemberAttribute_entityID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_entityID]);
			validUntil = new MemberAttribute_validUntil (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_validUntil]);
			cacheDuration = new MemberAttribute_cacheDuration (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_cacheDuration]);
			ID = new MemberAttribute_ID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_ID]);

			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_Signature]);
			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_Extensions]);
			RoleDescriptor = new MemberElement_RoleDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_RoleDescriptor]);
			IDPSSODescriptor = new MemberElement_IDPSSODescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_IDPSSODescriptor]);
			SPSSODescriptor = new MemberElement_SPSSODescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_SPSSODescriptor]);
			AuthnAuthorityDescriptor = new MemberElement_AuthnAuthorityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_AuthnAuthorityDescriptor]);
			AttributeAuthorityDescriptor = new MemberElement_AttributeAuthorityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_AttributeAuthorityDescriptor]);
			PDPDescriptor = new MemberElement_PDPDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_PDPDescriptor]);
			AffiliationDescriptor = new MemberElement_AffiliationDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_AffiliationDescriptor]);
			Organization = new MemberElement_Organization (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_Organization]);
			ContactPerson = new MemberElement_ContactPerson (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_ContactPerson]);
			AdditionalMetadataLocation = new MemberElement_AdditionalMetadataLocation (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_EntityDescriptorType_altova_AdditionalMetadataLocation]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EntityDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_entityID entityID;
		public class MemberAttribute_entityID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_entityID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_validUntil validUntil;
		public class MemberAttribute_validUntil
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_validUntil (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_cacheDuration cacheDuration;
		public class MemberAttribute_cacheDuration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_cacheDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.Duration Value { get {
				return (Altova.Types.Duration)Altova.Xml.XmlTreeOperations.CastToDuration(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RoleDescriptor RoleDescriptor;
		public class MemberElement_RoleDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RoleDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.RoleDescriptorType this [int i] { get { return At(i);} } 
			public md.RoleDescriptorType At(int index) {return new md.RoleDescriptorType(owner.GetElementAt(info, index));}
			public md.RoleDescriptorType First { get  {return new md.RoleDescriptorType(owner.GetElementFirst(info));} }
			public md.RoleDescriptorType Last { get {return new md.RoleDescriptorType(owner.GetElementLast(info));} }
			public md.RoleDescriptorType Append(){return new md.RoleDescriptorType(owner.CreateElement(info));}
			public md.RoleDescriptorType AppendWithPrefix(string prefix) {return new md.RoleDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.RoleDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IDPSSODescriptor IDPSSODescriptor;
		public class MemberElement_IDPSSODescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IDPSSODescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IDPSSODescriptorType this [int i] { get { return At(i);} } 
			public md.IDPSSODescriptorType At(int index) {return new md.IDPSSODescriptorType(owner.GetElementAt(info, index));}
			public md.IDPSSODescriptorType First { get  {return new md.IDPSSODescriptorType(owner.GetElementFirst(info));} }
			public md.IDPSSODescriptorType Last { get {return new md.IDPSSODescriptorType(owner.GetElementLast(info));} }
			public md.IDPSSODescriptorType Append(){return new md.IDPSSODescriptorType(owner.CreateElement(info));}
			public md.IDPSSODescriptorType AppendWithPrefix(string prefix) {return new md.IDPSSODescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IDPSSODescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SPSSODescriptor SPSSODescriptor;
		public class MemberElement_SPSSODescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SPSSODescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.SPSSODescriptorType this [int i] { get { return At(i);} } 
			public md.SPSSODescriptorType At(int index) {return new md.SPSSODescriptorType(owner.GetElementAt(info, index));}
			public md.SPSSODescriptorType First { get  {return new md.SPSSODescriptorType(owner.GetElementFirst(info));} }
			public md.SPSSODescriptorType Last { get {return new md.SPSSODescriptorType(owner.GetElementLast(info));} }
			public md.SPSSODescriptorType Append(){return new md.SPSSODescriptorType(owner.CreateElement(info));}
			public md.SPSSODescriptorType AppendWithPrefix(string prefix) {return new md.SPSSODescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.SPSSODescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnAuthorityDescriptor AuthnAuthorityDescriptor;
		public class MemberElement_AuthnAuthorityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnAuthorityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AuthnAuthorityDescriptorType this [int i] { get { return At(i);} } 
			public md.AuthnAuthorityDescriptorType At(int index) {return new md.AuthnAuthorityDescriptorType(owner.GetElementAt(info, index));}
			public md.AuthnAuthorityDescriptorType First { get  {return new md.AuthnAuthorityDescriptorType(owner.GetElementFirst(info));} }
			public md.AuthnAuthorityDescriptorType Last { get {return new md.AuthnAuthorityDescriptorType(owner.GetElementLast(info));} }
			public md.AuthnAuthorityDescriptorType Append(){return new md.AuthnAuthorityDescriptorType(owner.CreateElement(info));}
			public md.AuthnAuthorityDescriptorType AppendWithPrefix(string prefix) {return new md.AuthnAuthorityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AuthnAuthorityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeAuthorityDescriptor AttributeAuthorityDescriptor;
		public class MemberElement_AttributeAuthorityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeAuthorityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AttributeAuthorityDescriptorType this [int i] { get { return At(i);} } 
			public md.AttributeAuthorityDescriptorType At(int index) {return new md.AttributeAuthorityDescriptorType(owner.GetElementAt(info, index));}
			public md.AttributeAuthorityDescriptorType First { get  {return new md.AttributeAuthorityDescriptorType(owner.GetElementFirst(info));} }
			public md.AttributeAuthorityDescriptorType Last { get {return new md.AttributeAuthorityDescriptorType(owner.GetElementLast(info));} }
			public md.AttributeAuthorityDescriptorType Append(){return new md.AttributeAuthorityDescriptorType(owner.CreateElement(info));}
			public md.AttributeAuthorityDescriptorType AppendWithPrefix(string prefix) {return new md.AttributeAuthorityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AttributeAuthorityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PDPDescriptor PDPDescriptor;
		public class MemberElement_PDPDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PDPDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.PDPDescriptorType this [int i] { get { return At(i);} } 
			public md.PDPDescriptorType At(int index) {return new md.PDPDescriptorType(owner.GetElementAt(info, index));}
			public md.PDPDescriptorType First { get  {return new md.PDPDescriptorType(owner.GetElementFirst(info));} }
			public md.PDPDescriptorType Last { get {return new md.PDPDescriptorType(owner.GetElementLast(info));} }
			public md.PDPDescriptorType Append(){return new md.PDPDescriptorType(owner.CreateElement(info));}
			public md.PDPDescriptorType AppendWithPrefix(string prefix) {return new md.PDPDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.PDPDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AffiliationDescriptor AffiliationDescriptor;
		public class MemberElement_AffiliationDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AffiliationDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AffiliationDescriptorType this [int i] { get { return At(i);} } 
			public md.AffiliationDescriptorType At(int index) {return new md.AffiliationDescriptorType(owner.GetElementAt(info, index));}
			public md.AffiliationDescriptorType First { get  {return new md.AffiliationDescriptorType(owner.GetElementFirst(info));} }
			public md.AffiliationDescriptorType Last { get {return new md.AffiliationDescriptorType(owner.GetElementLast(info));} }
			public md.AffiliationDescriptorType Append(){return new md.AffiliationDescriptorType(owner.CreateElement(info));}
			public md.AffiliationDescriptorType AppendWithPrefix(string prefix) {return new md.AffiliationDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AffiliationDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Organization Organization;
		public class MemberElement_Organization : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Organization (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.OrganizationType this [int i] { get { return At(i);} } 
			public md.OrganizationType At(int index) {return new md.OrganizationType(owner.GetElementAt(info, index));}
			public md.OrganizationType First { get  {return new md.OrganizationType(owner.GetElementFirst(info));} }
			public md.OrganizationType Last { get {return new md.OrganizationType(owner.GetElementLast(info));} }
			public md.OrganizationType Append(){return new md.OrganizationType(owner.CreateElement(info));}
			public md.OrganizationType AppendWithPrefix(string prefix) {return new md.OrganizationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.OrganizationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ContactPerson ContactPerson;
		public class MemberElement_ContactPerson : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ContactPerson (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ContactType this [int i] { get { return At(i);} } 
			public md.ContactType At(int index) {return new md.ContactType(owner.GetElementAt(info, index));}
			public md.ContactType First { get  {return new md.ContactType(owner.GetElementFirst(info));} }
			public md.ContactType Last { get {return new md.ContactType(owner.GetElementLast(info));} }
			public md.ContactType Append(){return new md.ContactType(owner.CreateElement(info));}
			public md.ContactType AppendWithPrefix(string prefix) {return new md.ContactType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ContactType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AdditionalMetadataLocation AdditionalMetadataLocation;
		public class MemberElement_AdditionalMetadataLocation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AdditionalMetadataLocation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AdditionalMetadataLocationType this [int i] { get { return At(i);} } 
			public md.AdditionalMetadataLocationType At(int index) {return new md.AdditionalMetadataLocationType(owner.GetElementAt(info, index));}
			public md.AdditionalMetadataLocationType First { get  {return new md.AdditionalMetadataLocationType(owner.GetElementFirst(info));} }
			public md.AdditionalMetadataLocationType Last { get {return new md.AdditionalMetadataLocationType(owner.GetElementLast(info));} }
			public md.AdditionalMetadataLocationType Append(){return new md.AdditionalMetadataLocationType(owner.CreateElement(info));}
			public md.AdditionalMetadataLocationType AppendWithPrefix(string prefix) {return new md.AdditionalMetadataLocationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AdditionalMetadataLocationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EntityDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class EntityDescriptorType

	public class ExtensionsType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_ExtensionsType]); }}


		public ExtensionsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ExtensionsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ExtensionsType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class ExtensionsType

	public class IDPSSODescriptorType : md.SSODescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_IDPSSODescriptorType]); }}


		public IDPSSODescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			WantAuthnRequestsSigned = new MemberAttribute_WantAuthnRequestsSigned (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_WantAuthnRequestsSigned]);

			SingleSignOnService = new MemberElement_SingleSignOnService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_SingleSignOnService]);
			NameIDMappingService = new MemberElement_NameIDMappingService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_NameIDMappingService]);
			AssertionIDRequestService = new MemberElement_AssertionIDRequestService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_AssertionIDRequestService]);
			AttributeProfile = new MemberElement_AttributeProfile (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_AttributeProfile]);
			Attribute = new MemberElement_Attribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IDPSSODescriptorType_altova_Attribute]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new IDPSSODescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_WantAuthnRequestsSigned WantAuthnRequestsSigned;
		public class MemberAttribute_WantAuthnRequestsSigned
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_WantAuthnRequestsSigned (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_SingleSignOnService SingleSignOnService;
		public class MemberElement_SingleSignOnService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SingleSignOnService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDMappingService NameIDMappingService;
		public class MemberElement_NameIDMappingService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDMappingService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRequestService AssertionIDRequestService;
		public class MemberElement_AssertionIDRequestService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRequestService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeProfile AttributeProfile;
		public class MemberElement_AttributeProfile : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeProfile (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Attribute Attribute;
		public class MemberElement_Attribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Attribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeType this [int i] { get { return At(i);} } 
			public saml.AttributeType At(int index) {return new saml.AttributeType(owner.GetElementAt(info, index));}
			public saml.AttributeType First { get  {return new saml.AttributeType(owner.GetElementFirst(info));} }
			public saml.AttributeType Last { get {return new saml.AttributeType(owner.GetElementLast(info));} }
			public saml.AttributeType Append(){return new saml.AttributeType(owner.CreateElement(info));}
			public saml.AttributeType AppendWithPrefix(string prefix) {return new saml.AttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("IDPSSODescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class IDPSSODescriptorType

	public class IndexedEndpointType : md.EndpointType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_IndexedEndpointType]); }}


		public IndexedEndpointType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			index = new MemberAttribute_index (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IndexedEndpointType_altova_index]);
			isDefault = new MemberAttribute_isDefault (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_IndexedEndpointType_altova_isDefault]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new IndexedEndpointType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_index index;
		public class MemberAttribute_index
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_index (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public uint Value { get {
				return (uint)Altova.Xml.XmlTreeOperations.CastToUInt(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_isDefault isDefault;
		public class MemberAttribute_isDefault
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_isDefault (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("IndexedEndpointType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class IndexedEndpointType

	public class KeyDescriptorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_KeyDescriptorType]); }}


		public KeyDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			use = new MemberAttribute_use (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_KeyDescriptorType_altova_use]);

			KeyInfo = new MemberElement_KeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_KeyDescriptorType_altova_KeyInfo]);
			EncryptionMethod = new MemberElement_EncryptionMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_KeyDescriptorType_altova_EncryptionMethod]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new KeyDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_use use;
		public class MemberAttribute_use
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_use (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public md.KeyTypes.EnumValues EnumerationValue
			{
				get
				{			
					return (md.KeyTypes.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_KeyInfo KeyInfo;
		public class MemberElement_KeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptionMethod EncryptionMethod;
		public class MemberElement_EncryptionMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionMethodType this [int i] { get { return At(i);} } 
			public xenc.EncryptionMethodType At(int index) {return new xenc.EncryptionMethodType(owner.GetElementAt(info, index));}
			public xenc.EncryptionMethodType First { get  {return new xenc.EncryptionMethodType(owner.GetElementFirst(info));} }
			public xenc.EncryptionMethodType Last { get {return new xenc.EncryptionMethodType(owner.GetElementLast(info));} }
			public xenc.EncryptionMethodType Append(){return new xenc.EncryptionMethodType(owner.CreateElement(info));}
			public xenc.EncryptionMethodType AppendWithPrefix(string prefix) {return new xenc.EncryptionMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("KeyDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class KeyDescriptorType

	public class KeyTypes : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_KeyTypes]); }}


		public enum EnumValues
		{
			eencryption = 0, // encryption
			esigning = 1, // signing
			Invalid = -1, // Invalid value
		};

		public KeyTypes(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class KeyTypes

	public class OrganizationType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_OrganizationType]); }}


		public OrganizationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_OrganizationType_altova_Extensions]);
			OrganizationName = new MemberElement_OrganizationName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_OrganizationType_altova_OrganizationName]);
			OrganizationDisplayName = new MemberElement_OrganizationDisplayName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_OrganizationType_altova_OrganizationDisplayName]);
			OrganizationURL = new MemberElement_OrganizationURL (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_OrganizationType_altova_OrganizationURL]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new OrganizationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationName OrganizationName;
		public class MemberElement_OrganizationName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationDisplayName OrganizationDisplayName;
		public class MemberElement_OrganizationDisplayName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationDisplayName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationURL OrganizationURL;
		public class MemberElement_OrganizationURL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationURL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedURIType this [int i] { get { return At(i);} } 
			public md.localizedURIType At(int index) {return new md.localizedURIType(owner.GetElementAt(info, index));}
			public md.localizedURIType First { get  {return new md.localizedURIType(owner.GetElementFirst(info));} }
			public md.localizedURIType Last { get {return new md.localizedURIType(owner.GetElementLast(info));} }
			public md.localizedURIType Append(){return new md.localizedURIType(owner.CreateElement(info));}
			public md.localizedURIType AppendWithPrefix(string prefix) {return new md.localizedURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("OrganizationType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class OrganizationType

	public class PDPDescriptorType : md.RoleDescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_PDPDescriptorType]); }}


		public PDPDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			AuthzService = new MemberElement_AuthzService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_PDPDescriptorType_altova_AuthzService]);
			AssertionIDRequestService = new MemberElement_AssertionIDRequestService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_PDPDescriptorType_altova_AssertionIDRequestService]);
			NameIDFormat = new MemberElement_NameIDFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_PDPDescriptorType_altova_NameIDFormat]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PDPDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_AuthzService AuthzService;
		public class MemberElement_AuthzService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthzService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRequestService AssertionIDRequestService;
		public class MemberElement_AssertionIDRequestService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRequestService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDFormat NameIDFormat;
		public class MemberElement_NameIDFormat : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PDPDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class PDPDescriptorType

	public class RequestedAttributeType : saml.AttributeType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_RequestedAttributeType]); }}


		public RequestedAttributeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			isRequired = new MemberAttribute_isRequired (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RequestedAttributeType_altova_isRequired]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RequestedAttributeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_isRequired isRequired;
		public class MemberAttribute_isRequired
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_isRequired (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RequestedAttributeType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class RequestedAttributeType

	public class RoleDescriptorType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_RoleDescriptorType]); }}


		public RoleDescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			ID = new MemberAttribute_ID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_ID]);
			validUntil = new MemberAttribute_validUntil (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_validUntil]);
			cacheDuration = new MemberAttribute_cacheDuration (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_cacheDuration]);
			protocolSupportEnumeration = new MemberAttribute_protocolSupportEnumeration (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_protocolSupportEnumeration]);
			errorURL = new MemberAttribute_errorURL (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_errorURL]);

			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_Signature]);
			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_Extensions]);
			KeyDescriptor = new MemberElement_KeyDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_KeyDescriptor]);
			Organization = new MemberElement_Organization (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_Organization]);
			ContactPerson = new MemberElement_ContactPerson (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_RoleDescriptorType_altova_ContactPerson]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RoleDescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_ID ID;
		public class MemberAttribute_ID
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_validUntil validUntil;
		public class MemberAttribute_validUntil
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_validUntil (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.DateTime Value { get {
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_cacheDuration cacheDuration;
		public class MemberAttribute_cacheDuration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_cacheDuration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public Altova.Types.Duration Value { get {
				return (Altova.Types.Duration)Altova.Xml.XmlTreeOperations.CastToDuration(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_protocolSupportEnumeration protocolSupportEnumeration;
		public class MemberAttribute_protocolSupportEnumeration
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_protocolSupportEnumeration (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_errorURL errorURL;
		public class MemberAttribute_errorURL
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_errorURL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyDescriptor KeyDescriptor;
		public class MemberElement_KeyDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.KeyDescriptorType this [int i] { get { return At(i);} } 
			public md.KeyDescriptorType At(int index) {return new md.KeyDescriptorType(owner.GetElementAt(info, index));}
			public md.KeyDescriptorType First { get  {return new md.KeyDescriptorType(owner.GetElementFirst(info));} }
			public md.KeyDescriptorType Last { get {return new md.KeyDescriptorType(owner.GetElementLast(info));} }
			public md.KeyDescriptorType Append(){return new md.KeyDescriptorType(owner.CreateElement(info));}
			public md.KeyDescriptorType AppendWithPrefix(string prefix) {return new md.KeyDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.KeyDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Organization Organization;
		public class MemberElement_Organization : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Organization (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.OrganizationType this [int i] { get { return At(i);} } 
			public md.OrganizationType At(int index) {return new md.OrganizationType(owner.GetElementAt(info, index));}
			public md.OrganizationType First { get  {return new md.OrganizationType(owner.GetElementFirst(info));} }
			public md.OrganizationType Last { get {return new md.OrganizationType(owner.GetElementLast(info));} }
			public md.OrganizationType Append(){return new md.OrganizationType(owner.CreateElement(info));}
			public md.OrganizationType AppendWithPrefix(string prefix) {return new md.OrganizationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.OrganizationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ContactPerson ContactPerson;
		public class MemberElement_ContactPerson : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ContactPerson (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ContactType this [int i] { get { return At(i);} } 
			public md.ContactType At(int index) {return new md.ContactType(owner.GetElementAt(info, index));}
			public md.ContactType First { get  {return new md.ContactType(owner.GetElementFirst(info));} }
			public md.ContactType Last { get {return new md.ContactType(owner.GetElementLast(info));} }
			public md.ContactType Append(){return new md.ContactType(owner.CreateElement(info));}
			public md.ContactType AppendWithPrefix(string prefix) {return new md.ContactType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ContactType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RoleDescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class RoleDescriptorType

	public class SPSSODescriptorType : md.SSODescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_SPSSODescriptorType]); }}


		public SPSSODescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			AuthnRequestsSigned = new MemberAttribute_AuthnRequestsSigned (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SPSSODescriptorType_altova_AuthnRequestsSigned]);
			WantAssertionsSigned = new MemberAttribute_WantAssertionsSigned (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SPSSODescriptorType_altova_WantAssertionsSigned]);

			AssertionConsumerService = new MemberElement_AssertionConsumerService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SPSSODescriptorType_altova_AssertionConsumerService]);
			AttributeConsumingService = new MemberElement_AttributeConsumingService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SPSSODescriptorType_altova_AttributeConsumingService]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SPSSODescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_AuthnRequestsSigned AuthnRequestsSigned;
		public class MemberAttribute_AuthnRequestsSigned
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_AuthnRequestsSigned (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_WantAssertionsSigned WantAssertionsSigned;
		public class MemberAttribute_WantAssertionsSigned
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_WantAssertionsSigned (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public bool Value { get {
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_AssertionConsumerService AssertionConsumerService;
		public class MemberElement_AssertionConsumerService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionConsumerService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IndexedEndpointType this [int i] { get { return At(i);} } 
			public md.IndexedEndpointType At(int index) {return new md.IndexedEndpointType(owner.GetElementAt(info, index));}
			public md.IndexedEndpointType First { get  {return new md.IndexedEndpointType(owner.GetElementFirst(info));} }
			public md.IndexedEndpointType Last { get {return new md.IndexedEndpointType(owner.GetElementLast(info));} }
			public md.IndexedEndpointType Append(){return new md.IndexedEndpointType(owner.CreateElement(info));}
			public md.IndexedEndpointType AppendWithPrefix(string prefix) {return new md.IndexedEndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IndexedEndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeConsumingService AttributeConsumingService;
		public class MemberElement_AttributeConsumingService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeConsumingService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AttributeConsumingServiceType this [int i] { get { return At(i);} } 
			public md.AttributeConsumingServiceType At(int index) {return new md.AttributeConsumingServiceType(owner.GetElementAt(info, index));}
			public md.AttributeConsumingServiceType First { get  {return new md.AttributeConsumingServiceType(owner.GetElementFirst(info));} }
			public md.AttributeConsumingServiceType Last { get {return new md.AttributeConsumingServiceType(owner.GetElementLast(info));} }
			public md.AttributeConsumingServiceType Append(){return new md.AttributeConsumingServiceType(owner.CreateElement(info));}
			public md.AttributeConsumingServiceType AppendWithPrefix(string prefix) {return new md.AttributeConsumingServiceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AttributeConsumingServiceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SPSSODescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class SPSSODescriptorType

	public class SSODescriptorType : md.RoleDescriptorType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_SSODescriptorType]); }}


		public SSODescriptorType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			ArtifactResolutionService = new MemberElement_ArtifactResolutionService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SSODescriptorType_altova_ArtifactResolutionService]);
			SingleLogoutService = new MemberElement_SingleLogoutService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SSODescriptorType_altova_SingleLogoutService]);
			ManageNameIDService = new MemberElement_ManageNameIDService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SSODescriptorType_altova_ManageNameIDService]);
			NameIDFormat = new MemberElement_NameIDFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_SSODescriptorType_altova_NameIDFormat]);
		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SSODescriptorType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_ArtifactResolutionService ArtifactResolutionService;
		public class MemberElement_ArtifactResolutionService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ArtifactResolutionService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IndexedEndpointType this [int i] { get { return At(i);} } 
			public md.IndexedEndpointType At(int index) {return new md.IndexedEndpointType(owner.GetElementAt(info, index));}
			public md.IndexedEndpointType First { get  {return new md.IndexedEndpointType(owner.GetElementFirst(info));} }
			public md.IndexedEndpointType Last { get {return new md.IndexedEndpointType(owner.GetElementLast(info));} }
			public md.IndexedEndpointType Append(){return new md.IndexedEndpointType(owner.CreateElement(info));}
			public md.IndexedEndpointType AppendWithPrefix(string prefix) {return new md.IndexedEndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IndexedEndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SingleLogoutService SingleLogoutService;
		public class MemberElement_SingleLogoutService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SingleLogoutService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ManageNameIDService ManageNameIDService;
		public class MemberElement_ManageNameIDService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ManageNameIDService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDFormat NameIDFormat;
		public class MemberElement_NameIDFormat : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("SSODescriptorType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class SSODescriptorType

	public class anyURIListType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_anyURIListType]); }}


		public anyURIListType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURIListType

	public class entityIDType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_entityIDType]); }}


		public entityIDType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class entityIDType

	public class localizedNameType : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_localizedNameType]); }}


		public localizedNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			lang = new MemberAttribute_lang (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_localizedNameType_altova_lang]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new localizedNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_lang lang;
		public class MemberAttribute_lang
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_lang (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("localizedNameType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class localizedNameType

	public class localizedURIType : xs.anyURIType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_localizedURIType]); }}


		public localizedURIType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			lang = new MemberAttribute_lang (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_localizedURIType_altova_lang]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new localizedURIType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_lang lang;
		public class MemberAttribute_lang
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_lang (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("localizedURIType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class localizedURIType

	public class saml_schema_metadata_2_02 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_saml_schema_metadata_2_02]); }}


		public static saml_schema_metadata_2_02 LoadFromFile(string filename) 
		{
			return new saml_schema_metadata_2_02(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static saml_schema_metadata_2_02 LoadFromString(string xmlstring) 
		{
			return new saml_schema_metadata_2_02(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static saml_schema_metadata_2_02 LoadFromBinary(byte[] binary) 
		{
			return new saml_schema_metadata_2_02(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, false, "\r\n");
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, omitXmlDecl, "\r\n");
		}

		public void SaveToFileWithLineEnd(string filename, bool prettyPrint, bool omitXmlDecl, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint, omitXmlDecl, lineend);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, "\r\n" );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, false, encoding, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, bool bBigEndian, bool bBOM, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint, omitXmlDecl, lineend);
		}

		public string SaveToString(bool prettyPrint)
		{
			return SaveToString( prettyPrint, false);
		}

		public string SaveToString(bool prettyPrint, bool omitXmlDecl)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint, omitXmlDecl);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static saml_schema_metadata_2_02 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static saml_schema_metadata_2_02 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new saml_schema_metadata_2_02(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}

		static public void DeclareAllNamespacesFromSchema(Altova.Xml.ElementType node)
		{
			foreach (var ns in saml_schema_metadata_2_0_TypeInfo.binder.Namespaces)
				if (ns.namespaceURI != "")
					node.DeclareNamespace(ns.prefix, ns.namespaceURI);
		}


		public saml_schema_metadata_2_02(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			base2 = new MemberAttribute_base2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_base2]);
			id = new MemberAttribute_id (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_id]);
			lang = new MemberAttribute_lang (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_lang]);
			space = new MemberAttribute_space (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_space]);

			CanonicalizationMethod = new MemberElement_CanonicalizationMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_CanonicalizationMethod]);
			DSAKeyValue = new MemberElement_DSAKeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_DSAKeyValue]);
			DigestMethod = new MemberElement_DigestMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_DigestMethod]);
			DigestValue = new MemberElement_DigestValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_DigestValue]);
			KeyInfo = new MemberElement_KeyInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_KeyInfo]);
			KeyName = new MemberElement_KeyName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_KeyName]);
			KeyValue = new MemberElement_KeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_KeyValue]);
			Manifest = new MemberElement_Manifest (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Manifest]);
			MgmtData = new MemberElement_MgmtData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_MgmtData]);
			Object2 = new MemberElement_Object2 (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Object2]);
			PGPData = new MemberElement_PGPData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_PGPData]);
			RSAKeyValue = new MemberElement_RSAKeyValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_RSAKeyValue]);
			Reference = new MemberElement_Reference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Reference]);
			RetrievalMethod = new MemberElement_RetrievalMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_RetrievalMethod]);
			SPKIData = new MemberElement_SPKIData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SPKIData]);
			Signature = new MemberElement_Signature (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Signature]);
			SignatureMethod = new MemberElement_SignatureMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SignatureMethod]);
			SignatureProperties = new MemberElement_SignatureProperties (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SignatureProperties]);
			SignatureProperty = new MemberElement_SignatureProperty (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SignatureProperty]);
			SignatureValue = new MemberElement_SignatureValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SignatureValue]);
			SignedInfo = new MemberElement_SignedInfo (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SignedInfo]);
			Transform = new MemberElement_Transform (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Transform]);
			Transforms = new MemberElement_Transforms (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Transforms]);
			X509Data = new MemberElement_X509Data (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_X509Data]);
			AgreementMethod = new MemberElement_AgreementMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AgreementMethod]);
			CipherData = new MemberElement_CipherData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_CipherData]);
			CipherReference = new MemberElement_CipherReference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_CipherReference]);
			EncryptedData = new MemberElement_EncryptedData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptedData]);
			EncryptedKey = new MemberElement_EncryptedKey (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptedKey]);
			EncryptionProperties = new MemberElement_EncryptionProperties (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptionProperties]);
			EncryptionProperty = new MemberElement_EncryptionProperty (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptionProperty]);
			ReferenceList = new MemberElement_ReferenceList (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ReferenceList]);
			Action = new MemberElement_Action (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Action]);
			Advice = new MemberElement_Advice (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Advice]);
			Assertion = new MemberElement_Assertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Assertion]);
			AssertionIDRef = new MemberElement_AssertionIDRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AssertionIDRef]);
			AssertionURIRef = new MemberElement_AssertionURIRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AssertionURIRef]);
			Attribute = new MemberElement_Attribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Attribute]);
			AttributeStatement = new MemberElement_AttributeStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeStatement]);
			AttributeValue = new MemberElement_AttributeValue (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeValue]);
			Audience = new MemberElement_Audience (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Audience]);
			AudienceRestriction = new MemberElement_AudienceRestriction (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AudienceRestriction]);
			AuthenticatingAuthority = new MemberElement_AuthenticatingAuthority (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthenticatingAuthority]);
			AuthnContext = new MemberElement_AuthnContext (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnContext]);
			AuthnContextClassRef = new MemberElement_AuthnContextClassRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnContextClassRef]);
			AuthnContextDecl = new MemberElement_AuthnContextDecl (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnContextDecl]);
			AuthnContextDeclRef = new MemberElement_AuthnContextDeclRef (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnContextDeclRef]);
			AuthnStatement = new MemberElement_AuthnStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnStatement]);
			AuthzDecisionStatement = new MemberElement_AuthzDecisionStatement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthzDecisionStatement]);
			BaseID = new MemberElement_BaseID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_BaseID]);
			Condition = new MemberElement_Condition (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Condition]);
			Conditions = new MemberElement_Conditions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Conditions]);
			EncryptedAssertion = new MemberElement_EncryptedAssertion (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptedAssertion]);
			EncryptedAttribute = new MemberElement_EncryptedAttribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptedAttribute]);
			EncryptedID = new MemberElement_EncryptedID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptedID]);
			Evidence = new MemberElement_Evidence (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Evidence]);
			Issuer = new MemberElement_Issuer (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Issuer]);
			NameID = new MemberElement_NameID (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_NameID]);
			OneTimeUse = new MemberElement_OneTimeUse (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_OneTimeUse]);
			ProxyRestriction = new MemberElement_ProxyRestriction (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ProxyRestriction]);
			Statement = new MemberElement_Statement (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Statement]);
			Subject = new MemberElement_Subject (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Subject]);
			SubjectConfirmation = new MemberElement_SubjectConfirmation (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SubjectConfirmation]);
			SubjectConfirmationData = new MemberElement_SubjectConfirmationData (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SubjectConfirmationData]);
			SubjectLocality = new MemberElement_SubjectLocality (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SubjectLocality]);
			AdditionalMetadataLocation = new MemberElement_AdditionalMetadataLocation (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AdditionalMetadataLocation]);
			AffiliateMember = new MemberElement_AffiliateMember (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AffiliateMember]);
			AffiliationDescriptor = new MemberElement_AffiliationDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AffiliationDescriptor]);
			ArtifactResolutionService = new MemberElement_ArtifactResolutionService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ArtifactResolutionService]);
			AssertionConsumerService = new MemberElement_AssertionConsumerService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AssertionConsumerService]);
			AssertionIDRequestService = new MemberElement_AssertionIDRequestService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AssertionIDRequestService]);
			AttributeAuthorityDescriptor = new MemberElement_AttributeAuthorityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeAuthorityDescriptor]);
			AttributeConsumingService = new MemberElement_AttributeConsumingService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeConsumingService]);
			AttributeProfile = new MemberElement_AttributeProfile (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeProfile]);
			AttributeService = new MemberElement_AttributeService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AttributeService]);
			AuthnAuthorityDescriptor = new MemberElement_AuthnAuthorityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnAuthorityDescriptor]);
			AuthnQueryService = new MemberElement_AuthnQueryService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthnQueryService]);
			AuthzService = new MemberElement_AuthzService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_AuthzService]);
			Company = new MemberElement_Company (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Company]);
			ContactPerson = new MemberElement_ContactPerson (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ContactPerson]);
			EmailAddress = new MemberElement_EmailAddress (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EmailAddress]);
			EncryptionMethod = new MemberElement_EncryptionMethod (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EncryptionMethod]);
			EntitiesDescriptor = new MemberElement_EntitiesDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EntitiesDescriptor]);
			EntityDescriptor = new MemberElement_EntityDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_EntityDescriptor]);
			Extensions = new MemberElement_Extensions (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Extensions]);
			GivenName = new MemberElement_GivenName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_GivenName]);
			IDPSSODescriptor = new MemberElement_IDPSSODescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_IDPSSODescriptor]);
			KeyDescriptor = new MemberElement_KeyDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_KeyDescriptor]);
			ManageNameIDService = new MemberElement_ManageNameIDService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ManageNameIDService]);
			NameIDFormat = new MemberElement_NameIDFormat (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_NameIDFormat]);
			NameIDMappingService = new MemberElement_NameIDMappingService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_NameIDMappingService]);
			Organization = new MemberElement_Organization (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_Organization]);
			OrganizationDisplayName = new MemberElement_OrganizationDisplayName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_OrganizationDisplayName]);
			OrganizationName = new MemberElement_OrganizationName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_OrganizationName]);
			OrganizationURL = new MemberElement_OrganizationURL (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_OrganizationURL]);
			PDPDescriptor = new MemberElement_PDPDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_PDPDescriptor]);
			RequestedAttribute = new MemberElement_RequestedAttribute (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_RequestedAttribute]);
			RoleDescriptor = new MemberElement_RoleDescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_RoleDescriptor]);
			SPSSODescriptor = new MemberElement_SPSSODescriptor (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SPSSODescriptor]);
			ServiceDescription = new MemberElement_ServiceDescription (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ServiceDescription]);
			ServiceName = new MemberElement_ServiceName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_ServiceName]);
			SingleLogoutService = new MemberElement_SingleLogoutService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SingleLogoutService]);
			SingleSignOnService = new MemberElement_SingleSignOnService (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SingleSignOnService]);
			SurName = new MemberElement_SurName (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_SurName]);
			TelephoneNumber = new MemberElement_TelephoneNumber (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_saml_schema_metadata_2_02_altova_TelephoneNumber]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new saml_schema_metadata_2_02((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_base2 base2;
		public class MemberAttribute_base2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_base2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_id id;
		public class MemberAttribute_id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_lang lang;
		public class MemberAttribute_lang
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_lang (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_space space;
		public class MemberAttribute_space
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_space (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public md.spaceType.EnumValues EnumerationValue
			{
				get
				{			
					return (md.spaceType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_CanonicalizationMethod CanonicalizationMethod;
		public class MemberElement_CanonicalizationMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CanonicalizationMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.CanonicalizationMethodType this [int i] { get { return At(i);} } 
			public ds.CanonicalizationMethodType At(int index) {return new ds.CanonicalizationMethodType(owner.GetElementAt(info, index));}
			public ds.CanonicalizationMethodType First { get  {return new ds.CanonicalizationMethodType(owner.GetElementFirst(info));} }
			public ds.CanonicalizationMethodType Last { get {return new ds.CanonicalizationMethodType(owner.GetElementLast(info));} }
			public ds.CanonicalizationMethodType Append(){return new ds.CanonicalizationMethodType(owner.CreateElement(info));}
			public ds.CanonicalizationMethodType AppendWithPrefix(string prefix) {return new ds.CanonicalizationMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.CanonicalizationMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DSAKeyValue DSAKeyValue;
		public class MemberElement_DSAKeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DSAKeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DSAKeyValueType this [int i] { get { return At(i);} } 
			public ds.DSAKeyValueType At(int index) {return new ds.DSAKeyValueType(owner.GetElementAt(info, index));}
			public ds.DSAKeyValueType First { get  {return new ds.DSAKeyValueType(owner.GetElementFirst(info));} }
			public ds.DSAKeyValueType Last { get {return new ds.DSAKeyValueType(owner.GetElementLast(info));} }
			public ds.DSAKeyValueType Append(){return new ds.DSAKeyValueType(owner.CreateElement(info));}
			public ds.DSAKeyValueType AppendWithPrefix(string prefix) {return new ds.DSAKeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DSAKeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DigestMethod DigestMethod;
		public class MemberElement_DigestMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigestMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DigestMethodType this [int i] { get { return At(i);} } 
			public ds.DigestMethodType At(int index) {return new ds.DigestMethodType(owner.GetElementAt(info, index));}
			public ds.DigestMethodType First { get  {return new ds.DigestMethodType(owner.GetElementFirst(info));} }
			public ds.DigestMethodType Last { get {return new ds.DigestMethodType(owner.GetElementLast(info));} }
			public ds.DigestMethodType Append(){return new ds.DigestMethodType(owner.CreateElement(info));}
			public ds.DigestMethodType AppendWithPrefix(string prefix) {return new ds.DigestMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DigestMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DigestValue DigestValue;
		public class MemberElement_DigestValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DigestValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.DigestValueTypeType this [int i] { get { return At(i);} } 
			public ds.DigestValueTypeType At(int index) {return new ds.DigestValueTypeType(owner.GetElementAt(info, index));}
			public ds.DigestValueTypeType First { get  {return new ds.DigestValueTypeType(owner.GetElementFirst(info));} }
			public ds.DigestValueTypeType Last { get {return new ds.DigestValueTypeType(owner.GetElementLast(info));} }
			public ds.DigestValueTypeType Append(){return new ds.DigestValueTypeType(owner.CreateElement(info));}
			public ds.DigestValueTypeType AppendWithPrefix(string prefix) {return new ds.DigestValueTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.DigestValueTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyInfo KeyInfo;
		public class MemberElement_KeyInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyInfoType this [int i] { get { return At(i);} } 
			public ds.KeyInfoType At(int index) {return new ds.KeyInfoType(owner.GetElementAt(info, index));}
			public ds.KeyInfoType First { get  {return new ds.KeyInfoType(owner.GetElementFirst(info));} }
			public ds.KeyInfoType Last { get {return new ds.KeyInfoType(owner.GetElementLast(info));} }
			public ds.KeyInfoType Append(){return new ds.KeyInfoType(owner.CreateElement(info));}
			public ds.KeyInfoType AppendWithPrefix(string prefix) {return new ds.KeyInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyName KeyName;
		public class MemberElement_KeyName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyValue KeyValue;
		public class MemberElement_KeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.KeyValueType this [int i] { get { return At(i);} } 
			public ds.KeyValueType At(int index) {return new ds.KeyValueType(owner.GetElementAt(info, index));}
			public ds.KeyValueType First { get  {return new ds.KeyValueType(owner.GetElementFirst(info));} }
			public ds.KeyValueType Last { get {return new ds.KeyValueType(owner.GetElementLast(info));} }
			public ds.KeyValueType Append(){return new ds.KeyValueType(owner.CreateElement(info));}
			public ds.KeyValueType AppendWithPrefix(string prefix) {return new ds.KeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.KeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Manifest Manifest;
		public class MemberElement_Manifest : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Manifest (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ManifestType this [int i] { get { return At(i);} } 
			public ds.ManifestType At(int index) {return new ds.ManifestType(owner.GetElementAt(info, index));}
			public ds.ManifestType First { get  {return new ds.ManifestType(owner.GetElementFirst(info));} }
			public ds.ManifestType Last { get {return new ds.ManifestType(owner.GetElementLast(info));} }
			public ds.ManifestType Append(){return new ds.ManifestType(owner.CreateElement(info));}
			public ds.ManifestType AppendWithPrefix(string prefix) {return new ds.ManifestType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ManifestType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MgmtData MgmtData;
		public class MemberElement_MgmtData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MgmtData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Object2 Object2;
		public class MemberElement_Object2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Object2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ObjectType this [int i] { get { return At(i);} } 
			public ds.ObjectType At(int index) {return new ds.ObjectType(owner.GetElementAt(info, index));}
			public ds.ObjectType First { get  {return new ds.ObjectType(owner.GetElementFirst(info));} }
			public ds.ObjectType Last { get {return new ds.ObjectType(owner.GetElementLast(info));} }
			public ds.ObjectType Append(){return new ds.ObjectType(owner.CreateElement(info));}
			public ds.ObjectType AppendWithPrefix(string prefix) {return new ds.ObjectType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ObjectType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PGPData PGPData;
		public class MemberElement_PGPData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PGPData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.PGPDataType this [int i] { get { return At(i);} } 
			public ds.PGPDataType At(int index) {return new ds.PGPDataType(owner.GetElementAt(info, index));}
			public ds.PGPDataType First { get  {return new ds.PGPDataType(owner.GetElementFirst(info));} }
			public ds.PGPDataType Last { get {return new ds.PGPDataType(owner.GetElementLast(info));} }
			public ds.PGPDataType Append(){return new ds.PGPDataType(owner.CreateElement(info));}
			public ds.PGPDataType AppendWithPrefix(string prefix) {return new ds.PGPDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.PGPDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RSAKeyValue RSAKeyValue;
		public class MemberElement_RSAKeyValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RSAKeyValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.RSAKeyValueType this [int i] { get { return At(i);} } 
			public ds.RSAKeyValueType At(int index) {return new ds.RSAKeyValueType(owner.GetElementAt(info, index));}
			public ds.RSAKeyValueType First { get  {return new ds.RSAKeyValueType(owner.GetElementFirst(info));} }
			public ds.RSAKeyValueType Last { get {return new ds.RSAKeyValueType(owner.GetElementLast(info));} }
			public ds.RSAKeyValueType Append(){return new ds.RSAKeyValueType(owner.CreateElement(info));}
			public ds.RSAKeyValueType AppendWithPrefix(string prefix) {return new ds.RSAKeyValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.RSAKeyValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Reference Reference;
		public class MemberElement_Reference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Reference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.ReferenceType this [int i] { get { return At(i);} } 
			public ds.ReferenceType At(int index) {return new ds.ReferenceType(owner.GetElementAt(info, index));}
			public ds.ReferenceType First { get  {return new ds.ReferenceType(owner.GetElementFirst(info));} }
			public ds.ReferenceType Last { get {return new ds.ReferenceType(owner.GetElementLast(info));} }
			public ds.ReferenceType Append(){return new ds.ReferenceType(owner.CreateElement(info));}
			public ds.ReferenceType AppendWithPrefix(string prefix) {return new ds.ReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.ReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RetrievalMethod RetrievalMethod;
		public class MemberElement_RetrievalMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RetrievalMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.RetrievalMethodType this [int i] { get { return At(i);} } 
			public ds.RetrievalMethodType At(int index) {return new ds.RetrievalMethodType(owner.GetElementAt(info, index));}
			public ds.RetrievalMethodType First { get  {return new ds.RetrievalMethodType(owner.GetElementFirst(info));} }
			public ds.RetrievalMethodType Last { get {return new ds.RetrievalMethodType(owner.GetElementLast(info));} }
			public ds.RetrievalMethodType Append(){return new ds.RetrievalMethodType(owner.CreateElement(info));}
			public ds.RetrievalMethodType AppendWithPrefix(string prefix) {return new ds.RetrievalMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.RetrievalMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SPKIData SPKIData;
		public class MemberElement_SPKIData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SPKIData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SPKIDataType this [int i] { get { return At(i);} } 
			public ds.SPKIDataType At(int index) {return new ds.SPKIDataType(owner.GetElementAt(info, index));}
			public ds.SPKIDataType First { get  {return new ds.SPKIDataType(owner.GetElementFirst(info));} }
			public ds.SPKIDataType Last { get {return new ds.SPKIDataType(owner.GetElementLast(info));} }
			public ds.SPKIDataType Append(){return new ds.SPKIDataType(owner.CreateElement(info));}
			public ds.SPKIDataType AppendWithPrefix(string prefix) {return new ds.SPKIDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SPKIDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Signature Signature;
		public class MemberElement_Signature : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Signature (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureType this [int i] { get { return At(i);} } 
			public ds.SignatureType At(int index) {return new ds.SignatureType(owner.GetElementAt(info, index));}
			public ds.SignatureType First { get  {return new ds.SignatureType(owner.GetElementFirst(info));} }
			public ds.SignatureType Last { get {return new ds.SignatureType(owner.GetElementLast(info));} }
			public ds.SignatureType Append(){return new ds.SignatureType(owner.CreateElement(info));}
			public ds.SignatureType AppendWithPrefix(string prefix) {return new ds.SignatureType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureMethod SignatureMethod;
		public class MemberElement_SignatureMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureMethodType this [int i] { get { return At(i);} } 
			public ds.SignatureMethodType At(int index) {return new ds.SignatureMethodType(owner.GetElementAt(info, index));}
			public ds.SignatureMethodType First { get  {return new ds.SignatureMethodType(owner.GetElementFirst(info));} }
			public ds.SignatureMethodType Last { get {return new ds.SignatureMethodType(owner.GetElementLast(info));} }
			public ds.SignatureMethodType Append(){return new ds.SignatureMethodType(owner.CreateElement(info));}
			public ds.SignatureMethodType AppendWithPrefix(string prefix) {return new ds.SignatureMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureProperties SignatureProperties;
		public class MemberElement_SignatureProperties : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureProperties (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignaturePropertiesType this [int i] { get { return At(i);} } 
			public ds.SignaturePropertiesType At(int index) {return new ds.SignaturePropertiesType(owner.GetElementAt(info, index));}
			public ds.SignaturePropertiesType First { get  {return new ds.SignaturePropertiesType(owner.GetElementFirst(info));} }
			public ds.SignaturePropertiesType Last { get {return new ds.SignaturePropertiesType(owner.GetElementLast(info));} }
			public ds.SignaturePropertiesType Append(){return new ds.SignaturePropertiesType(owner.CreateElement(info));}
			public ds.SignaturePropertiesType AppendWithPrefix(string prefix) {return new ds.SignaturePropertiesType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignaturePropertiesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureProperty SignatureProperty;
		public class MemberElement_SignatureProperty : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureProperty (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignaturePropertyType this [int i] { get { return At(i);} } 
			public ds.SignaturePropertyType At(int index) {return new ds.SignaturePropertyType(owner.GetElementAt(info, index));}
			public ds.SignaturePropertyType First { get  {return new ds.SignaturePropertyType(owner.GetElementFirst(info));} }
			public ds.SignaturePropertyType Last { get {return new ds.SignaturePropertyType(owner.GetElementLast(info));} }
			public ds.SignaturePropertyType Append(){return new ds.SignaturePropertyType(owner.CreateElement(info));}
			public ds.SignaturePropertyType AppendWithPrefix(string prefix) {return new ds.SignaturePropertyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignaturePropertyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignatureValue SignatureValue;
		public class MemberElement_SignatureValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignatureValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignatureValueType this [int i] { get { return At(i);} } 
			public ds.SignatureValueType At(int index) {return new ds.SignatureValueType(owner.GetElementAt(info, index));}
			public ds.SignatureValueType First { get  {return new ds.SignatureValueType(owner.GetElementFirst(info));} }
			public ds.SignatureValueType Last { get {return new ds.SignatureValueType(owner.GetElementLast(info));} }
			public ds.SignatureValueType Append(){return new ds.SignatureValueType(owner.CreateElement(info));}
			public ds.SignatureValueType AppendWithPrefix(string prefix) {return new ds.SignatureValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignatureValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SignedInfo SignedInfo;
		public class MemberElement_SignedInfo : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SignedInfo (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.SignedInfoType this [int i] { get { return At(i);} } 
			public ds.SignedInfoType At(int index) {return new ds.SignedInfoType(owner.GetElementAt(info, index));}
			public ds.SignedInfoType First { get  {return new ds.SignedInfoType(owner.GetElementFirst(info));} }
			public ds.SignedInfoType Last { get {return new ds.SignedInfoType(owner.GetElementLast(info));} }
			public ds.SignedInfoType Append(){return new ds.SignedInfoType(owner.CreateElement(info));}
			public ds.SignedInfoType AppendWithPrefix(string prefix) {return new ds.SignedInfoType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.SignedInfoType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Transform Transform;
		public class MemberElement_Transform : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transform (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformType this [int i] { get { return At(i);} } 
			public ds.TransformType At(int index) {return new ds.TransformType(owner.GetElementAt(info, index));}
			public ds.TransformType First { get  {return new ds.TransformType(owner.GetElementFirst(info));} }
			public ds.TransformType Last { get {return new ds.TransformType(owner.GetElementLast(info));} }
			public ds.TransformType Append(){return new ds.TransformType(owner.CreateElement(info));}
			public ds.TransformType AppendWithPrefix(string prefix) {return new ds.TransformType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Transforms Transforms;
		public class MemberElement_Transforms : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Transforms (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.TransformsType this [int i] { get { return At(i);} } 
			public ds.TransformsType At(int index) {return new ds.TransformsType(owner.GetElementAt(info, index));}
			public ds.TransformsType First { get  {return new ds.TransformsType(owner.GetElementFirst(info));} }
			public ds.TransformsType Last { get {return new ds.TransformsType(owner.GetElementLast(info));} }
			public ds.TransformsType Append(){return new ds.TransformsType(owner.CreateElement(info));}
			public ds.TransformsType AppendWithPrefix(string prefix) {return new ds.TransformsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.TransformsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_X509Data X509Data;
		public class MemberElement_X509Data : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_X509Data (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ds.X509DataType this [int i] { get { return At(i);} } 
			public ds.X509DataType At(int index) {return new ds.X509DataType(owner.GetElementAt(info, index));}
			public ds.X509DataType First { get  {return new ds.X509DataType(owner.GetElementFirst(info));} }
			public ds.X509DataType Last { get {return new ds.X509DataType(owner.GetElementLast(info));} }
			public ds.X509DataType Append(){return new ds.X509DataType(owner.CreateElement(info));}
			public ds.X509DataType AppendWithPrefix(string prefix) {return new ds.X509DataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ds.X509DataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AgreementMethod AgreementMethod;
		public class MemberElement_AgreementMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AgreementMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.AgreementMethodType this [int i] { get { return At(i);} } 
			public xenc.AgreementMethodType At(int index) {return new xenc.AgreementMethodType(owner.GetElementAt(info, index));}
			public xenc.AgreementMethodType First { get  {return new xenc.AgreementMethodType(owner.GetElementFirst(info));} }
			public xenc.AgreementMethodType Last { get {return new xenc.AgreementMethodType(owner.GetElementLast(info));} }
			public xenc.AgreementMethodType Append(){return new xenc.AgreementMethodType(owner.CreateElement(info));}
			public xenc.AgreementMethodType AppendWithPrefix(string prefix) {return new xenc.AgreementMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.AgreementMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CipherData CipherData;
		public class MemberElement_CipherData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CipherData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.CipherDataType this [int i] { get { return At(i);} } 
			public xenc.CipherDataType At(int index) {return new xenc.CipherDataType(owner.GetElementAt(info, index));}
			public xenc.CipherDataType First { get  {return new xenc.CipherDataType(owner.GetElementFirst(info));} }
			public xenc.CipherDataType Last { get {return new xenc.CipherDataType(owner.GetElementLast(info));} }
			public xenc.CipherDataType Append(){return new xenc.CipherDataType(owner.CreateElement(info));}
			public xenc.CipherDataType AppendWithPrefix(string prefix) {return new xenc.CipherDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.CipherDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CipherReference CipherReference;
		public class MemberElement_CipherReference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CipherReference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.CipherReferenceType this [int i] { get { return At(i);} } 
			public xenc.CipherReferenceType At(int index) {return new xenc.CipherReferenceType(owner.GetElementAt(info, index));}
			public xenc.CipherReferenceType First { get  {return new xenc.CipherReferenceType(owner.GetElementFirst(info));} }
			public xenc.CipherReferenceType Last { get {return new xenc.CipherReferenceType(owner.GetElementLast(info));} }
			public xenc.CipherReferenceType Append(){return new xenc.CipherReferenceType(owner.CreateElement(info));}
			public xenc.CipherReferenceType AppendWithPrefix(string prefix) {return new xenc.CipherReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.CipherReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedData EncryptedData;
		public class MemberElement_EncryptedData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptedDataType this [int i] { get { return At(i);} } 
			public xenc.EncryptedDataType At(int index) {return new xenc.EncryptedDataType(owner.GetElementAt(info, index));}
			public xenc.EncryptedDataType First { get  {return new xenc.EncryptedDataType(owner.GetElementFirst(info));} }
			public xenc.EncryptedDataType Last { get {return new xenc.EncryptedDataType(owner.GetElementLast(info));} }
			public xenc.EncryptedDataType Append(){return new xenc.EncryptedDataType(owner.CreateElement(info));}
			public xenc.EncryptedDataType AppendWithPrefix(string prefix) {return new xenc.EncryptedDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptedDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedKey EncryptedKey;
		public class MemberElement_EncryptedKey : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedKey (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptedKeyType this [int i] { get { return At(i);} } 
			public xenc.EncryptedKeyType At(int index) {return new xenc.EncryptedKeyType(owner.GetElementAt(info, index));}
			public xenc.EncryptedKeyType First { get  {return new xenc.EncryptedKeyType(owner.GetElementFirst(info));} }
			public xenc.EncryptedKeyType Last { get {return new xenc.EncryptedKeyType(owner.GetElementLast(info));} }
			public xenc.EncryptedKeyType Append(){return new xenc.EncryptedKeyType(owner.CreateElement(info));}
			public xenc.EncryptedKeyType AppendWithPrefix(string prefix) {return new xenc.EncryptedKeyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptedKeyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptionProperties EncryptionProperties;
		public class MemberElement_EncryptionProperties : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionProperties (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionPropertiesType this [int i] { get { return At(i);} } 
			public xenc.EncryptionPropertiesType At(int index) {return new xenc.EncryptionPropertiesType(owner.GetElementAt(info, index));}
			public xenc.EncryptionPropertiesType First { get  {return new xenc.EncryptionPropertiesType(owner.GetElementFirst(info));} }
			public xenc.EncryptionPropertiesType Last { get {return new xenc.EncryptionPropertiesType(owner.GetElementLast(info));} }
			public xenc.EncryptionPropertiesType Append(){return new xenc.EncryptionPropertiesType(owner.CreateElement(info));}
			public xenc.EncryptionPropertiesType AppendWithPrefix(string prefix) {return new xenc.EncryptionPropertiesType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionPropertiesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptionProperty EncryptionProperty;
		public class MemberElement_EncryptionProperty : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionProperty (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionPropertyType this [int i] { get { return At(i);} } 
			public xenc.EncryptionPropertyType At(int index) {return new xenc.EncryptionPropertyType(owner.GetElementAt(info, index));}
			public xenc.EncryptionPropertyType First { get  {return new xenc.EncryptionPropertyType(owner.GetElementFirst(info));} }
			public xenc.EncryptionPropertyType Last { get {return new xenc.EncryptionPropertyType(owner.GetElementLast(info));} }
			public xenc.EncryptionPropertyType Append(){return new xenc.EncryptionPropertyType(owner.CreateElement(info));}
			public xenc.EncryptionPropertyType AppendWithPrefix(string prefix) {return new xenc.EncryptionPropertyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionPropertyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ReferenceList ReferenceList;
		public class MemberElement_ReferenceList : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ReferenceList (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ReferenceListType this [int i] { get { return At(i);} } 
			public md.ReferenceListType At(int index) {return new md.ReferenceListType(owner.GetElementAt(info, index));}
			public md.ReferenceListType First { get  {return new md.ReferenceListType(owner.GetElementFirst(info));} }
			public md.ReferenceListType Last { get {return new md.ReferenceListType(owner.GetElementLast(info));} }
			public md.ReferenceListType Append(){return new md.ReferenceListType(owner.CreateElement(info));}
			public md.ReferenceListType AppendWithPrefix(string prefix) {return new md.ReferenceListType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ReferenceListType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Action Action;
		public class MemberElement_Action : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Action (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ActionType this [int i] { get { return At(i);} } 
			public saml.ActionType At(int index) {return new saml.ActionType(owner.GetElementAt(info, index));}
			public saml.ActionType First { get  {return new saml.ActionType(owner.GetElementFirst(info));} }
			public saml.ActionType Last { get {return new saml.ActionType(owner.GetElementLast(info));} }
			public saml.ActionType Append(){return new saml.ActionType(owner.CreateElement(info));}
			public saml.ActionType AppendWithPrefix(string prefix) {return new saml.ActionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ActionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Advice Advice;
		public class MemberElement_Advice : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Advice (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AdviceType this [int i] { get { return At(i);} } 
			public saml.AdviceType At(int index) {return new saml.AdviceType(owner.GetElementAt(info, index));}
			public saml.AdviceType First { get  {return new saml.AdviceType(owner.GetElementFirst(info));} }
			public saml.AdviceType Last { get {return new saml.AdviceType(owner.GetElementLast(info));} }
			public saml.AdviceType Append(){return new saml.AdviceType(owner.CreateElement(info));}
			public saml.AdviceType AppendWithPrefix(string prefix) {return new saml.AdviceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AdviceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Assertion Assertion;
		public class MemberElement_Assertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Assertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AssertionType this [int i] { get { return At(i);} } 
			public saml.AssertionType At(int index) {return new saml.AssertionType(owner.GetElementAt(info, index));}
			public saml.AssertionType First { get  {return new saml.AssertionType(owner.GetElementFirst(info));} }
			public saml.AssertionType Last { get {return new saml.AssertionType(owner.GetElementLast(info));} }
			public saml.AssertionType Append(){return new saml.AssertionType(owner.CreateElement(info));}
			public saml.AssertionType AppendWithPrefix(string prefix) {return new saml.AssertionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AssertionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRef AssertionIDRef;
		public class MemberElement_AssertionIDRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.NCNameType this [int i] { get { return At(i);} } 
			public xs.NCNameType At(int index) {return new xs.NCNameType(owner.GetElementAt(info, index));}
			public xs.NCNameType First { get  {return new xs.NCNameType(owner.GetElementFirst(info));} }
			public xs.NCNameType Last { get {return new xs.NCNameType(owner.GetElementLast(info));} }
			public xs.NCNameType Append(){return new xs.NCNameType(owner.CreateElement(info));}
			public xs.NCNameType AppendWithPrefix(string prefix) {return new xs.NCNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.NCNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionURIRef AssertionURIRef;
		public class MemberElement_AssertionURIRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionURIRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Attribute Attribute;
		public class MemberElement_Attribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Attribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeType this [int i] { get { return At(i);} } 
			public saml.AttributeType At(int index) {return new saml.AttributeType(owner.GetElementAt(info, index));}
			public saml.AttributeType First { get  {return new saml.AttributeType(owner.GetElementFirst(info));} }
			public saml.AttributeType Last { get {return new saml.AttributeType(owner.GetElementLast(info));} }
			public saml.AttributeType Append(){return new saml.AttributeType(owner.CreateElement(info));}
			public saml.AttributeType AppendWithPrefix(string prefix) {return new saml.AttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeStatement AttributeStatement;
		public class MemberElement_AttributeStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AttributeStatementType this [int i] { get { return At(i);} } 
			public saml.AttributeStatementType At(int index) {return new saml.AttributeStatementType(owner.GetElementAt(info, index));}
			public saml.AttributeStatementType First { get  {return new saml.AttributeStatementType(owner.GetElementFirst(info));} }
			public saml.AttributeStatementType Last { get {return new saml.AttributeStatementType(owner.GetElementLast(info));} }
			public saml.AttributeStatementType Append(){return new saml.AttributeStatementType(owner.CreateElement(info));}
			public saml.AttributeStatementType AppendWithPrefix(string prefix) {return new saml.AttributeStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AttributeStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeValue AttributeValue;
		public class MemberElement_AttributeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyType this [int i] { get { return At(i);} } 
			public xs.anyType At(int index) {return new xs.anyType(owner.GetElementAt(info, index));}
			public xs.anyType First { get  {return new xs.anyType(owner.GetElementFirst(info));} }
			public xs.anyType Last { get {return new xs.anyType(owner.GetElementLast(info));} }
			public xs.anyType Append(){return new xs.anyType(owner.CreateElement(info));}
			public xs.anyType AppendWithPrefix(string prefix) {return new xs.anyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Audience Audience;
		public class MemberElement_Audience : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Audience (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AudienceRestriction AudienceRestriction;
		public class MemberElement_AudienceRestriction : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AudienceRestriction (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AudienceRestrictionType this [int i] { get { return At(i);} } 
			public saml.AudienceRestrictionType At(int index) {return new saml.AudienceRestrictionType(owner.GetElementAt(info, index));}
			public saml.AudienceRestrictionType First { get  {return new saml.AudienceRestrictionType(owner.GetElementFirst(info));} }
			public saml.AudienceRestrictionType Last { get {return new saml.AudienceRestrictionType(owner.GetElementLast(info));} }
			public saml.AudienceRestrictionType Append(){return new saml.AudienceRestrictionType(owner.CreateElement(info));}
			public saml.AudienceRestrictionType AppendWithPrefix(string prefix) {return new saml.AudienceRestrictionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AudienceRestrictionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthenticatingAuthority AuthenticatingAuthority;
		public class MemberElement_AuthenticatingAuthority : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthenticatingAuthority (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContext AuthnContext;
		public class MemberElement_AuthnContext : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContext (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthnContextType this [int i] { get { return At(i);} } 
			public saml.AuthnContextType At(int index) {return new saml.AuthnContextType(owner.GetElementAt(info, index));}
			public saml.AuthnContextType First { get  {return new saml.AuthnContextType(owner.GetElementFirst(info));} }
			public saml.AuthnContextType Last { get {return new saml.AuthnContextType(owner.GetElementLast(info));} }
			public saml.AuthnContextType Append(){return new saml.AuthnContextType(owner.CreateElement(info));}
			public saml.AuthnContextType AppendWithPrefix(string prefix) {return new saml.AuthnContextType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthnContextType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContextClassRef AuthnContextClassRef;
		public class MemberElement_AuthnContextClassRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextClassRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContextDecl AuthnContextDecl;
		public class MemberElement_AuthnContextDecl : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextDecl (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyType this [int i] { get { return At(i);} } 
			public xs.anyType At(int index) {return new xs.anyType(owner.GetElementAt(info, index));}
			public xs.anyType First { get  {return new xs.anyType(owner.GetElementFirst(info));} }
			public xs.anyType Last { get {return new xs.anyType(owner.GetElementLast(info));} }
			public xs.anyType Append(){return new xs.anyType(owner.CreateElement(info));}
			public xs.anyType AppendWithPrefix(string prefix) {return new xs.anyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnContextDeclRef AuthnContextDeclRef;
		public class MemberElement_AuthnContextDeclRef : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnContextDeclRef (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnStatement AuthnStatement;
		public class MemberElement_AuthnStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthnStatementType this [int i] { get { return At(i);} } 
			public saml.AuthnStatementType At(int index) {return new saml.AuthnStatementType(owner.GetElementAt(info, index));}
			public saml.AuthnStatementType First { get  {return new saml.AuthnStatementType(owner.GetElementFirst(info));} }
			public saml.AuthnStatementType Last { get {return new saml.AuthnStatementType(owner.GetElementLast(info));} }
			public saml.AuthnStatementType Append(){return new saml.AuthnStatementType(owner.CreateElement(info));}
			public saml.AuthnStatementType AppendWithPrefix(string prefix) {return new saml.AuthnStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthnStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthzDecisionStatement AuthzDecisionStatement;
		public class MemberElement_AuthzDecisionStatement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthzDecisionStatement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.AuthzDecisionStatementType this [int i] { get { return At(i);} } 
			public saml.AuthzDecisionStatementType At(int index) {return new saml.AuthzDecisionStatementType(owner.GetElementAt(info, index));}
			public saml.AuthzDecisionStatementType First { get  {return new saml.AuthzDecisionStatementType(owner.GetElementFirst(info));} }
			public saml.AuthzDecisionStatementType Last { get {return new saml.AuthzDecisionStatementType(owner.GetElementLast(info));} }
			public saml.AuthzDecisionStatementType Append(){return new saml.AuthzDecisionStatementType(owner.CreateElement(info));}
			public saml.AuthzDecisionStatementType AppendWithPrefix(string prefix) {return new saml.AuthzDecisionStatementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.AuthzDecisionStatementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_BaseID BaseID;
		public class MemberElement_BaseID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BaseID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.BaseIDAbstractType this [int i] { get { return At(i);} } 
			public saml.BaseIDAbstractType At(int index) {return new saml.BaseIDAbstractType(owner.GetElementAt(info, index));}
			public saml.BaseIDAbstractType First { get  {return new saml.BaseIDAbstractType(owner.GetElementFirst(info));} }
			public saml.BaseIDAbstractType Last { get {return new saml.BaseIDAbstractType(owner.GetElementLast(info));} }
			public saml.BaseIDAbstractType Append(){return new saml.BaseIDAbstractType(owner.CreateElement(info));}
			public saml.BaseIDAbstractType AppendWithPrefix(string prefix) {return new saml.BaseIDAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.BaseIDAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Condition Condition;
		public class MemberElement_Condition : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Condition (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ConditionAbstractType this [int i] { get { return At(i);} } 
			public saml.ConditionAbstractType At(int index) {return new saml.ConditionAbstractType(owner.GetElementAt(info, index));}
			public saml.ConditionAbstractType First { get  {return new saml.ConditionAbstractType(owner.GetElementFirst(info));} }
			public saml.ConditionAbstractType Last { get {return new saml.ConditionAbstractType(owner.GetElementLast(info));} }
			public saml.ConditionAbstractType Append(){return new saml.ConditionAbstractType(owner.CreateElement(info));}
			public saml.ConditionAbstractType AppendWithPrefix(string prefix) {return new saml.ConditionAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ConditionAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Conditions Conditions;
		public class MemberElement_Conditions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Conditions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ConditionsType this [int i] { get { return At(i);} } 
			public saml.ConditionsType At(int index) {return new saml.ConditionsType(owner.GetElementAt(info, index));}
			public saml.ConditionsType First { get  {return new saml.ConditionsType(owner.GetElementFirst(info));} }
			public saml.ConditionsType Last { get {return new saml.ConditionsType(owner.GetElementLast(info));} }
			public saml.ConditionsType Append(){return new saml.ConditionsType(owner.CreateElement(info));}
			public saml.ConditionsType AppendWithPrefix(string prefix) {return new saml.ConditionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ConditionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedAssertion EncryptedAssertion;
		public class MemberElement_EncryptedAssertion : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedAssertion (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedAttribute EncryptedAttribute;
		public class MemberElement_EncryptedAttribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedAttribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptedID EncryptedID;
		public class MemberElement_EncryptedID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptedID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EncryptedElementType this [int i] { get { return At(i);} } 
			public saml.EncryptedElementType At(int index) {return new saml.EncryptedElementType(owner.GetElementAt(info, index));}
			public saml.EncryptedElementType First { get  {return new saml.EncryptedElementType(owner.GetElementFirst(info));} }
			public saml.EncryptedElementType Last { get {return new saml.EncryptedElementType(owner.GetElementLast(info));} }
			public saml.EncryptedElementType Append(){return new saml.EncryptedElementType(owner.CreateElement(info));}
			public saml.EncryptedElementType AppendWithPrefix(string prefix) {return new saml.EncryptedElementType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EncryptedElementType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Evidence Evidence;
		public class MemberElement_Evidence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Evidence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.EvidenceType this [int i] { get { return At(i);} } 
			public saml.EvidenceType At(int index) {return new saml.EvidenceType(owner.GetElementAt(info, index));}
			public saml.EvidenceType First { get  {return new saml.EvidenceType(owner.GetElementFirst(info));} }
			public saml.EvidenceType Last { get {return new saml.EvidenceType(owner.GetElementLast(info));} }
			public saml.EvidenceType Append(){return new saml.EvidenceType(owner.CreateElement(info));}
			public saml.EvidenceType AppendWithPrefix(string prefix) {return new saml.EvidenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.EvidenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Issuer Issuer;
		public class MemberElement_Issuer : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Issuer (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.NameIDType this [int i] { get { return At(i);} } 
			public saml.NameIDType At(int index) {return new saml.NameIDType(owner.GetElementAt(info, index));}
			public saml.NameIDType First { get  {return new saml.NameIDType(owner.GetElementFirst(info));} }
			public saml.NameIDType Last { get {return new saml.NameIDType(owner.GetElementLast(info));} }
			public saml.NameIDType Append(){return new saml.NameIDType(owner.CreateElement(info));}
			public saml.NameIDType AppendWithPrefix(string prefix) {return new saml.NameIDType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.NameIDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameID NameID;
		public class MemberElement_NameID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.NameIDType this [int i] { get { return At(i);} } 
			public saml.NameIDType At(int index) {return new saml.NameIDType(owner.GetElementAt(info, index));}
			public saml.NameIDType First { get  {return new saml.NameIDType(owner.GetElementFirst(info));} }
			public saml.NameIDType Last { get {return new saml.NameIDType(owner.GetElementLast(info));} }
			public saml.NameIDType Append(){return new saml.NameIDType(owner.CreateElement(info));}
			public saml.NameIDType AppendWithPrefix(string prefix) {return new saml.NameIDType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.NameIDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OneTimeUse OneTimeUse;
		public class MemberElement_OneTimeUse : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OneTimeUse (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.OneTimeUseType this [int i] { get { return At(i);} } 
			public saml.OneTimeUseType At(int index) {return new saml.OneTimeUseType(owner.GetElementAt(info, index));}
			public saml.OneTimeUseType First { get  {return new saml.OneTimeUseType(owner.GetElementFirst(info));} }
			public saml.OneTimeUseType Last { get {return new saml.OneTimeUseType(owner.GetElementLast(info));} }
			public saml.OneTimeUseType Append(){return new saml.OneTimeUseType(owner.CreateElement(info));}
			public saml.OneTimeUseType AppendWithPrefix(string prefix) {return new saml.OneTimeUseType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.OneTimeUseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ProxyRestriction ProxyRestriction;
		public class MemberElement_ProxyRestriction : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ProxyRestriction (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.ProxyRestrictionType this [int i] { get { return At(i);} } 
			public saml.ProxyRestrictionType At(int index) {return new saml.ProxyRestrictionType(owner.GetElementAt(info, index));}
			public saml.ProxyRestrictionType First { get  {return new saml.ProxyRestrictionType(owner.GetElementFirst(info));} }
			public saml.ProxyRestrictionType Last { get {return new saml.ProxyRestrictionType(owner.GetElementLast(info));} }
			public saml.ProxyRestrictionType Append(){return new saml.ProxyRestrictionType(owner.CreateElement(info));}
			public saml.ProxyRestrictionType AppendWithPrefix(string prefix) {return new saml.ProxyRestrictionType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.ProxyRestrictionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Statement Statement;
		public class MemberElement_Statement : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Statement (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.StatementAbstractType this [int i] { get { return At(i);} } 
			public saml.StatementAbstractType At(int index) {return new saml.StatementAbstractType(owner.GetElementAt(info, index));}
			public saml.StatementAbstractType First { get  {return new saml.StatementAbstractType(owner.GetElementFirst(info));} }
			public saml.StatementAbstractType Last { get {return new saml.StatementAbstractType(owner.GetElementLast(info));} }
			public saml.StatementAbstractType Append(){return new saml.StatementAbstractType(owner.CreateElement(info));}
			public saml.StatementAbstractType AppendWithPrefix(string prefix) {return new saml.StatementAbstractType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.StatementAbstractType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Subject Subject;
		public class MemberElement_Subject : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Subject (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectType this [int i] { get { return At(i);} } 
			public saml.SubjectType At(int index) {return new saml.SubjectType(owner.GetElementAt(info, index));}
			public saml.SubjectType First { get  {return new saml.SubjectType(owner.GetElementFirst(info));} }
			public saml.SubjectType Last { get {return new saml.SubjectType(owner.GetElementLast(info));} }
			public saml.SubjectType Append(){return new saml.SubjectType(owner.CreateElement(info));}
			public saml.SubjectType AppendWithPrefix(string prefix) {return new saml.SubjectType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubjectConfirmation SubjectConfirmation;
		public class MemberElement_SubjectConfirmation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectConfirmation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectConfirmationType this [int i] { get { return At(i);} } 
			public saml.SubjectConfirmationType At(int index) {return new saml.SubjectConfirmationType(owner.GetElementAt(info, index));}
			public saml.SubjectConfirmationType First { get  {return new saml.SubjectConfirmationType(owner.GetElementFirst(info));} }
			public saml.SubjectConfirmationType Last { get {return new saml.SubjectConfirmationType(owner.GetElementLast(info));} }
			public saml.SubjectConfirmationType Append(){return new saml.SubjectConfirmationType(owner.CreateElement(info));}
			public saml.SubjectConfirmationType AppendWithPrefix(string prefix) {return new saml.SubjectConfirmationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectConfirmationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubjectConfirmationData SubjectConfirmationData;
		public class MemberElement_SubjectConfirmationData : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectConfirmationData (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectConfirmationDataType this [int i] { get { return At(i);} } 
			public saml.SubjectConfirmationDataType At(int index) {return new saml.SubjectConfirmationDataType(owner.GetElementAt(info, index));}
			public saml.SubjectConfirmationDataType First { get  {return new saml.SubjectConfirmationDataType(owner.GetElementFirst(info));} }
			public saml.SubjectConfirmationDataType Last { get {return new saml.SubjectConfirmationDataType(owner.GetElementLast(info));} }
			public saml.SubjectConfirmationDataType Append(){return new saml.SubjectConfirmationDataType(owner.CreateElement(info));}
			public saml.SubjectConfirmationDataType AppendWithPrefix(string prefix) {return new saml.SubjectConfirmationDataType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectConfirmationDataType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SubjectLocality SubjectLocality;
		public class MemberElement_SubjectLocality : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SubjectLocality (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public saml.SubjectLocalityType this [int i] { get { return At(i);} } 
			public saml.SubjectLocalityType At(int index) {return new saml.SubjectLocalityType(owner.GetElementAt(info, index));}
			public saml.SubjectLocalityType First { get  {return new saml.SubjectLocalityType(owner.GetElementFirst(info));} }
			public saml.SubjectLocalityType Last { get {return new saml.SubjectLocalityType(owner.GetElementLast(info));} }
			public saml.SubjectLocalityType Append(){return new saml.SubjectLocalityType(owner.CreateElement(info));}
			public saml.SubjectLocalityType AppendWithPrefix(string prefix) {return new saml.SubjectLocalityType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new saml.SubjectLocalityType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AdditionalMetadataLocation AdditionalMetadataLocation;
		public class MemberElement_AdditionalMetadataLocation : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AdditionalMetadataLocation (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AdditionalMetadataLocationType this [int i] { get { return At(i);} } 
			public md.AdditionalMetadataLocationType At(int index) {return new md.AdditionalMetadataLocationType(owner.GetElementAt(info, index));}
			public md.AdditionalMetadataLocationType First { get  {return new md.AdditionalMetadataLocationType(owner.GetElementFirst(info));} }
			public md.AdditionalMetadataLocationType Last { get {return new md.AdditionalMetadataLocationType(owner.GetElementLast(info));} }
			public md.AdditionalMetadataLocationType Append(){return new md.AdditionalMetadataLocationType(owner.CreateElement(info));}
			public md.AdditionalMetadataLocationType AppendWithPrefix(string prefix) {return new md.AdditionalMetadataLocationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AdditionalMetadataLocationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AffiliateMember AffiliateMember;
		public class MemberElement_AffiliateMember : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AffiliateMember (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.entityIDTypeType this [int i] { get { return At(i);} } 
			public md.entityIDTypeType At(int index) {return new md.entityIDTypeType(owner.GetElementAt(info, index));}
			public md.entityIDTypeType First { get  {return new md.entityIDTypeType(owner.GetElementFirst(info));} }
			public md.entityIDTypeType Last { get {return new md.entityIDTypeType(owner.GetElementLast(info));} }
			public md.entityIDTypeType Append(){return new md.entityIDTypeType(owner.CreateElement(info));}
			public md.entityIDTypeType AppendWithPrefix(string prefix) {return new md.entityIDTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.entityIDTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AffiliationDescriptor AffiliationDescriptor;
		public class MemberElement_AffiliationDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AffiliationDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AffiliationDescriptorType this [int i] { get { return At(i);} } 
			public md.AffiliationDescriptorType At(int index) {return new md.AffiliationDescriptorType(owner.GetElementAt(info, index));}
			public md.AffiliationDescriptorType First { get  {return new md.AffiliationDescriptorType(owner.GetElementFirst(info));} }
			public md.AffiliationDescriptorType Last { get {return new md.AffiliationDescriptorType(owner.GetElementLast(info));} }
			public md.AffiliationDescriptorType Append(){return new md.AffiliationDescriptorType(owner.CreateElement(info));}
			public md.AffiliationDescriptorType AppendWithPrefix(string prefix) {return new md.AffiliationDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AffiliationDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ArtifactResolutionService ArtifactResolutionService;
		public class MemberElement_ArtifactResolutionService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ArtifactResolutionService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IndexedEndpointType this [int i] { get { return At(i);} } 
			public md.IndexedEndpointType At(int index) {return new md.IndexedEndpointType(owner.GetElementAt(info, index));}
			public md.IndexedEndpointType First { get  {return new md.IndexedEndpointType(owner.GetElementFirst(info));} }
			public md.IndexedEndpointType Last { get {return new md.IndexedEndpointType(owner.GetElementLast(info));} }
			public md.IndexedEndpointType Append(){return new md.IndexedEndpointType(owner.CreateElement(info));}
			public md.IndexedEndpointType AppendWithPrefix(string prefix) {return new md.IndexedEndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IndexedEndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionConsumerService AssertionConsumerService;
		public class MemberElement_AssertionConsumerService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionConsumerService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IndexedEndpointType this [int i] { get { return At(i);} } 
			public md.IndexedEndpointType At(int index) {return new md.IndexedEndpointType(owner.GetElementAt(info, index));}
			public md.IndexedEndpointType First { get  {return new md.IndexedEndpointType(owner.GetElementFirst(info));} }
			public md.IndexedEndpointType Last { get {return new md.IndexedEndpointType(owner.GetElementLast(info));} }
			public md.IndexedEndpointType Append(){return new md.IndexedEndpointType(owner.CreateElement(info));}
			public md.IndexedEndpointType AppendWithPrefix(string prefix) {return new md.IndexedEndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IndexedEndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AssertionIDRequestService AssertionIDRequestService;
		public class MemberElement_AssertionIDRequestService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AssertionIDRequestService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeAuthorityDescriptor AttributeAuthorityDescriptor;
		public class MemberElement_AttributeAuthorityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeAuthorityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AttributeAuthorityDescriptorType this [int i] { get { return At(i);} } 
			public md.AttributeAuthorityDescriptorType At(int index) {return new md.AttributeAuthorityDescriptorType(owner.GetElementAt(info, index));}
			public md.AttributeAuthorityDescriptorType First { get  {return new md.AttributeAuthorityDescriptorType(owner.GetElementFirst(info));} }
			public md.AttributeAuthorityDescriptorType Last { get {return new md.AttributeAuthorityDescriptorType(owner.GetElementLast(info));} }
			public md.AttributeAuthorityDescriptorType Append(){return new md.AttributeAuthorityDescriptorType(owner.CreateElement(info));}
			public md.AttributeAuthorityDescriptorType AppendWithPrefix(string prefix) {return new md.AttributeAuthorityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AttributeAuthorityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeConsumingService AttributeConsumingService;
		public class MemberElement_AttributeConsumingService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeConsumingService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AttributeConsumingServiceType this [int i] { get { return At(i);} } 
			public md.AttributeConsumingServiceType At(int index) {return new md.AttributeConsumingServiceType(owner.GetElementAt(info, index));}
			public md.AttributeConsumingServiceType First { get  {return new md.AttributeConsumingServiceType(owner.GetElementFirst(info));} }
			public md.AttributeConsumingServiceType Last { get {return new md.AttributeConsumingServiceType(owner.GetElementLast(info));} }
			public md.AttributeConsumingServiceType Append(){return new md.AttributeConsumingServiceType(owner.CreateElement(info));}
			public md.AttributeConsumingServiceType AppendWithPrefix(string prefix) {return new md.AttributeConsumingServiceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AttributeConsumingServiceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeProfile AttributeProfile;
		public class MemberElement_AttributeProfile : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeProfile (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeService AttributeService;
		public class MemberElement_AttributeService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnAuthorityDescriptor AuthnAuthorityDescriptor;
		public class MemberElement_AuthnAuthorityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnAuthorityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.AuthnAuthorityDescriptorType this [int i] { get { return At(i);} } 
			public md.AuthnAuthorityDescriptorType At(int index) {return new md.AuthnAuthorityDescriptorType(owner.GetElementAt(info, index));}
			public md.AuthnAuthorityDescriptorType First { get  {return new md.AuthnAuthorityDescriptorType(owner.GetElementFirst(info));} }
			public md.AuthnAuthorityDescriptorType Last { get {return new md.AuthnAuthorityDescriptorType(owner.GetElementLast(info));} }
			public md.AuthnAuthorityDescriptorType Append(){return new md.AuthnAuthorityDescriptorType(owner.CreateElement(info));}
			public md.AuthnAuthorityDescriptorType AppendWithPrefix(string prefix) {return new md.AuthnAuthorityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.AuthnAuthorityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthnQueryService AuthnQueryService;
		public class MemberElement_AuthnQueryService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthnQueryService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AuthzService AuthzService;
		public class MemberElement_AuthzService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AuthzService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Company Company;
		public class MemberElement_Company : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Company (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ContactPerson ContactPerson;
		public class MemberElement_ContactPerson : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ContactPerson (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ContactType this [int i] { get { return At(i);} } 
			public md.ContactType At(int index) {return new md.ContactType(owner.GetElementAt(info, index));}
			public md.ContactType First { get  {return new md.ContactType(owner.GetElementFirst(info));} }
			public md.ContactType Last { get {return new md.ContactType(owner.GetElementLast(info));} }
			public md.ContactType Append(){return new md.ContactType(owner.CreateElement(info));}
			public md.ContactType AppendWithPrefix(string prefix) {return new md.ContactType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ContactType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EmailAddress EmailAddress;
		public class MemberElement_EmailAddress : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EmailAddress (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EncryptionMethod EncryptionMethod;
		public class MemberElement_EncryptionMethod : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EncryptionMethod (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.EncryptionMethodType this [int i] { get { return At(i);} } 
			public xenc.EncryptionMethodType At(int index) {return new xenc.EncryptionMethodType(owner.GetElementAt(info, index));}
			public xenc.EncryptionMethodType First { get  {return new xenc.EncryptionMethodType(owner.GetElementFirst(info));} }
			public xenc.EncryptionMethodType Last { get {return new xenc.EncryptionMethodType(owner.GetElementLast(info));} }
			public xenc.EncryptionMethodType Append(){return new xenc.EncryptionMethodType(owner.CreateElement(info));}
			public xenc.EncryptionMethodType AppendWithPrefix(string prefix) {return new xenc.EncryptionMethodType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.EncryptionMethodType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EntitiesDescriptor EntitiesDescriptor;
		public class MemberElement_EntitiesDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EntitiesDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EntitiesDescriptorType this [int i] { get { return At(i);} } 
			public md.EntitiesDescriptorType At(int index) {return new md.EntitiesDescriptorType(owner.GetElementAt(info, index));}
			public md.EntitiesDescriptorType First { get  {return new md.EntitiesDescriptorType(owner.GetElementFirst(info));} }
			public md.EntitiesDescriptorType Last { get {return new md.EntitiesDescriptorType(owner.GetElementLast(info));} }
			public md.EntitiesDescriptorType Append(){return new md.EntitiesDescriptorType(owner.CreateElement(info));}
			public md.EntitiesDescriptorType AppendWithPrefix(string prefix) {return new md.EntitiesDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EntitiesDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_EntityDescriptor EntityDescriptor;
		public class MemberElement_EntityDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_EntityDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EntityDescriptorType this [int i] { get { return At(i);} } 
			public md.EntityDescriptorType At(int index) {return new md.EntityDescriptorType(owner.GetElementAt(info, index));}
			public md.EntityDescriptorType First { get  {return new md.EntityDescriptorType(owner.GetElementFirst(info));} }
			public md.EntityDescriptorType Last { get {return new md.EntityDescriptorType(owner.GetElementLast(info));} }
			public md.EntityDescriptorType Append(){return new md.EntityDescriptorType(owner.CreateElement(info));}
			public md.EntityDescriptorType AppendWithPrefix(string prefix) {return new md.EntityDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EntityDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Extensions Extensions;
		public class MemberElement_Extensions : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Extensions (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.ExtensionsType this [int i] { get { return At(i);} } 
			public md.ExtensionsType At(int index) {return new md.ExtensionsType(owner.GetElementAt(info, index));}
			public md.ExtensionsType First { get  {return new md.ExtensionsType(owner.GetElementFirst(info));} }
			public md.ExtensionsType Last { get {return new md.ExtensionsType(owner.GetElementLast(info));} }
			public md.ExtensionsType Append(){return new md.ExtensionsType(owner.CreateElement(info));}
			public md.ExtensionsType AppendWithPrefix(string prefix) {return new md.ExtensionsType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.ExtensionsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_GivenName GivenName;
		public class MemberElement_GivenName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_GivenName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IDPSSODescriptor IDPSSODescriptor;
		public class MemberElement_IDPSSODescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IDPSSODescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.IDPSSODescriptorType this [int i] { get { return At(i);} } 
			public md.IDPSSODescriptorType At(int index) {return new md.IDPSSODescriptorType(owner.GetElementAt(info, index));}
			public md.IDPSSODescriptorType First { get  {return new md.IDPSSODescriptorType(owner.GetElementFirst(info));} }
			public md.IDPSSODescriptorType Last { get {return new md.IDPSSODescriptorType(owner.GetElementLast(info));} }
			public md.IDPSSODescriptorType Append(){return new md.IDPSSODescriptorType(owner.CreateElement(info));}
			public md.IDPSSODescriptorType AppendWithPrefix(string prefix) {return new md.IDPSSODescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.IDPSSODescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyDescriptor KeyDescriptor;
		public class MemberElement_KeyDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.KeyDescriptorType this [int i] { get { return At(i);} } 
			public md.KeyDescriptorType At(int index) {return new md.KeyDescriptorType(owner.GetElementAt(info, index));}
			public md.KeyDescriptorType First { get  {return new md.KeyDescriptorType(owner.GetElementFirst(info));} }
			public md.KeyDescriptorType Last { get {return new md.KeyDescriptorType(owner.GetElementLast(info));} }
			public md.KeyDescriptorType Append(){return new md.KeyDescriptorType(owner.CreateElement(info));}
			public md.KeyDescriptorType AppendWithPrefix(string prefix) {return new md.KeyDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.KeyDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ManageNameIDService ManageNameIDService;
		public class MemberElement_ManageNameIDService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ManageNameIDService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDFormat NameIDFormat;
		public class MemberElement_NameIDFormat : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDFormat (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anyURIType this [int i] { get { return At(i);} } 
			public xs.anyURIType At(int index) {return new xs.anyURIType(owner.GetElementAt(info, index));}
			public xs.anyURIType First { get  {return new xs.anyURIType(owner.GetElementFirst(info));} }
			public xs.anyURIType Last { get {return new xs.anyURIType(owner.GetElementLast(info));} }
			public xs.anyURIType Append(){return new xs.anyURIType(owner.CreateElement(info));}
			public xs.anyURIType AppendWithPrefix(string prefix) {return new xs.anyURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anyURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NameIDMappingService NameIDMappingService;
		public class MemberElement_NameIDMappingService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NameIDMappingService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Organization Organization;
		public class MemberElement_Organization : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Organization (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.OrganizationType this [int i] { get { return At(i);} } 
			public md.OrganizationType At(int index) {return new md.OrganizationType(owner.GetElementAt(info, index));}
			public md.OrganizationType First { get  {return new md.OrganizationType(owner.GetElementFirst(info));} }
			public md.OrganizationType Last { get {return new md.OrganizationType(owner.GetElementLast(info));} }
			public md.OrganizationType Append(){return new md.OrganizationType(owner.CreateElement(info));}
			public md.OrganizationType AppendWithPrefix(string prefix) {return new md.OrganizationType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.OrganizationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationDisplayName OrganizationDisplayName;
		public class MemberElement_OrganizationDisplayName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationDisplayName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationName OrganizationName;
		public class MemberElement_OrganizationName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OrganizationURL OrganizationURL;
		public class MemberElement_OrganizationURL : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OrganizationURL (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedURIType this [int i] { get { return At(i);} } 
			public md.localizedURIType At(int index) {return new md.localizedURIType(owner.GetElementAt(info, index));}
			public md.localizedURIType First { get  {return new md.localizedURIType(owner.GetElementFirst(info));} }
			public md.localizedURIType Last { get {return new md.localizedURIType(owner.GetElementLast(info));} }
			public md.localizedURIType Append(){return new md.localizedURIType(owner.CreateElement(info));}
			public md.localizedURIType AppendWithPrefix(string prefix) {return new md.localizedURIType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedURIType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_PDPDescriptor PDPDescriptor;
		public class MemberElement_PDPDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_PDPDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.PDPDescriptorType this [int i] { get { return At(i);} } 
			public md.PDPDescriptorType At(int index) {return new md.PDPDescriptorType(owner.GetElementAt(info, index));}
			public md.PDPDescriptorType First { get  {return new md.PDPDescriptorType(owner.GetElementFirst(info));} }
			public md.PDPDescriptorType Last { get {return new md.PDPDescriptorType(owner.GetElementLast(info));} }
			public md.PDPDescriptorType Append(){return new md.PDPDescriptorType(owner.CreateElement(info));}
			public md.PDPDescriptorType AppendWithPrefix(string prefix) {return new md.PDPDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.PDPDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RequestedAttribute RequestedAttribute;
		public class MemberElement_RequestedAttribute : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RequestedAttribute (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.RequestedAttributeType this [int i] { get { return At(i);} } 
			public md.RequestedAttributeType At(int index) {return new md.RequestedAttributeType(owner.GetElementAt(info, index));}
			public md.RequestedAttributeType First { get  {return new md.RequestedAttributeType(owner.GetElementFirst(info));} }
			public md.RequestedAttributeType Last { get {return new md.RequestedAttributeType(owner.GetElementLast(info));} }
			public md.RequestedAttributeType Append(){return new md.RequestedAttributeType(owner.CreateElement(info));}
			public md.RequestedAttributeType AppendWithPrefix(string prefix) {return new md.RequestedAttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.RequestedAttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RoleDescriptor RoleDescriptor;
		public class MemberElement_RoleDescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RoleDescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.RoleDescriptorType this [int i] { get { return At(i);} } 
			public md.RoleDescriptorType At(int index) {return new md.RoleDescriptorType(owner.GetElementAt(info, index));}
			public md.RoleDescriptorType First { get  {return new md.RoleDescriptorType(owner.GetElementFirst(info));} }
			public md.RoleDescriptorType Last { get {return new md.RoleDescriptorType(owner.GetElementLast(info));} }
			public md.RoleDescriptorType Append(){return new md.RoleDescriptorType(owner.CreateElement(info));}
			public md.RoleDescriptorType AppendWithPrefix(string prefix) {return new md.RoleDescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.RoleDescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SPSSODescriptor SPSSODescriptor;
		public class MemberElement_SPSSODescriptor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SPSSODescriptor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.SPSSODescriptorType this [int i] { get { return At(i);} } 
			public md.SPSSODescriptorType At(int index) {return new md.SPSSODescriptorType(owner.GetElementAt(info, index));}
			public md.SPSSODescriptorType First { get  {return new md.SPSSODescriptorType(owner.GetElementFirst(info));} }
			public md.SPSSODescriptorType Last { get {return new md.SPSSODescriptorType(owner.GetElementLast(info));} }
			public md.SPSSODescriptorType Append(){return new md.SPSSODescriptorType(owner.CreateElement(info));}
			public md.SPSSODescriptorType AppendWithPrefix(string prefix) {return new md.SPSSODescriptorType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.SPSSODescriptorType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ServiceDescription ServiceDescription;
		public class MemberElement_ServiceDescription : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ServiceDescription (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ServiceName ServiceName;
		public class MemberElement_ServiceName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ServiceName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.localizedNameType this [int i] { get { return At(i);} } 
			public md.localizedNameType At(int index) {return new md.localizedNameType(owner.GetElementAt(info, index));}
			public md.localizedNameType First { get  {return new md.localizedNameType(owner.GetElementFirst(info));} }
			public md.localizedNameType Last { get {return new md.localizedNameType(owner.GetElementLast(info));} }
			public md.localizedNameType Append(){return new md.localizedNameType(owner.CreateElement(info));}
			public md.localizedNameType AppendWithPrefix(string prefix) {return new md.localizedNameType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.localizedNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SingleLogoutService SingleLogoutService;
		public class MemberElement_SingleLogoutService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SingleLogoutService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SingleSignOnService SingleSignOnService;
		public class MemberElement_SingleSignOnService : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SingleSignOnService (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public md.EndpointType this [int i] { get { return At(i);} } 
			public md.EndpointType At(int index) {return new md.EndpointType(owner.GetElementAt(info, index));}
			public md.EndpointType First { get  {return new md.EndpointType(owner.GetElementFirst(info));} }
			public md.EndpointType Last { get {return new md.EndpointType(owner.GetElementLast(info));} }
			public md.EndpointType Append(){return new md.EndpointType(owner.CreateElement(info));}
			public md.EndpointType AppendWithPrefix(string prefix) {return new md.EndpointType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new md.EndpointType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SurName SurName;
		public class MemberElement_SurName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SurName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TelephoneNumber TelephoneNumber;
		public class MemberElement_TelephoneNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TelephoneNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("saml-schema-metadata-2.0", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class saml_schema_metadata_2_02

	public class langType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_langType]); }}


		public langType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class langType

	public class langType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_langType2]); }}


		public enum EnumValues
		{
			e = 0, // 
			Invalid = -1, // Invalid value
		};

		public langType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class langType2

	public class spaceType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_spaceType]); }}


		public enum EnumValues
		{
			edefault = 0, // default
			epreserve = 1, // preserve
			Invalid = -1, // Invalid value
		};

		public spaceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class spaceType

	public class ReferenceListType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_ReferenceListType]); }}


		public ReferenceListType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			DataReference = new MemberElement_DataReference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ReferenceListType_altova_DataReference]);
			KeyReference = new MemberElement_KeyReference (this, saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_ReferenceListType_altova_KeyReference]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ReferenceListType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_DataReference DataReference;
		public class MemberElement_DataReference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DataReference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.ReferenceType this [int i] { get { return At(i);} } 
			public xenc.ReferenceType At(int index) {return new xenc.ReferenceType(owner.GetElementAt(info, index));}
			public xenc.ReferenceType First { get  {return new xenc.ReferenceType(owner.GetElementFirst(info));} }
			public xenc.ReferenceType Last { get {return new xenc.ReferenceType(owner.GetElementLast(info));} }
			public xenc.ReferenceType Append(){return new xenc.ReferenceType(owner.CreateElement(info));}
			public xenc.ReferenceType AppendWithPrefix(string prefix) {return new xenc.ReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.ReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_KeyReference KeyReference;
		public class MemberElement_KeyReference : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_KeyReference (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xenc.ReferenceType this [int i] { get { return At(i);} } 
			public xenc.ReferenceType At(int index) {return new xenc.ReferenceType(owner.GetElementAt(info, index));}
			public xenc.ReferenceType First { get  {return new xenc.ReferenceType(owner.GetElementFirst(info));} }
			public xenc.ReferenceType Last { get {return new xenc.ReferenceType(owner.GetElementLast(info));} }
			public xenc.ReferenceType Append(){return new xenc.ReferenceType(owner.CreateElement(info));}
			public xenc.ReferenceType AppendWithPrefix(string prefix) {return new xenc.ReferenceType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xenc.ReferenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ReferenceListType

	public class entityIDTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(saml_schema_metadata_2_0_TypeInfo.binder.Types[saml_schema_metadata_2_0_TypeInfo._altova_ti_md_altova_entityIDTypeType]); }}


		public entityIDTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new entityIDTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_entityIDTypeType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = saml_schema_metadata_2_0_TypeInfo.binder.Members[saml_schema_metadata_2_0_TypeInfo._altova_mi_md_altova_entityIDTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("entityIDType", "urn:oasis:names:tc:SAML:2.0:metadata")); 				
		}
		
	} // class entityIDTypeType


} // namespace md


}
